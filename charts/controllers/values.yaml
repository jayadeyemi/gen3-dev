# Default values for global chart
global:
  # Deploys aws specific ingress
  aws: 
    enabled: true
  environment: devplanetv2
  # Deploys elasticsearch and postgres in k8s
  dev: true
  # Replace with your dev environment url. 
  hostname: qureshi.planx-pla.net
  # this is arn to a certificate in AWS that needs to match the hostname.
  # This one is for *.planx-pla.net
  revproxyArn: arn:aws:acm:us-east-1:707767160287:certificate/520ede2f-fc82-4bb9-af96-4b4af7deabbd


# configuration for fence helm chart. You can add it for all our services.
fence:
  # Override image
  image:
    repository: quay.io/cdis/fence
    tag: master

  # Fence config overrides 
  FENCE_CONFIG:
    APP_NAME: 'Gen3 Data Commons'
    # A URL-safe base64-encoded 32-byte key for encrypting keys in db
    # in python you can use the following script to generate one:
    #     import base64
    #     import os
    #     key = base64.urlsafe_b64encode(os.urandom(32))
    #     print(key)
    ENCRYPTION_KEY: REPLACEME

    DEBUG: True
    OPENID_CONNECT:
      google:
        client_id: ""
        client_secret: ""

    AWS_CREDENTIALS:
      'fence-bot':
        aws_access_key_id: ''
        aws_secret_access_key: ''

    S3_BUCKETS:
      # Name of the actual s3 bucket
      jq-helm-testing:
        cred: 'fence-bot'
        region: us-east-1
    
    # This is important for data upload.
    DATA_UPLOAD_BUCKET: 'jq-helm-testing'



# -- (map) To configure postgresql subchart
# Persistence is disabled by default
postgresql:
  primary:
    persistence:
      # -- (bool) Option to persist the dbs data.
      enabled: true

vpc:
  enabled: true
  name: "Commons1"
  enabled: true
  cidrBlock: "10.0.0.0/16"
  tags:
    Environment: "prod"
    Organization: "MyOrg"

acks:
  acm:
    enabled: false
  acmpca:
    enabled: false
  ecr:
    enabled: false
  ecs:
    enabled: false
  elbv2:
    enabled: false
  emrcontainers:
    enabled: false
  applicationautoscaling:
    enabled: false
  cloudfront:
    enabled: false
  cloudtrail:
    enabled: false
  cloudwatch:
    enabled: false
  cloudwatchlogs:
    enabled: false
  ec2:
    enabled: true
    # replicas: 1
    # log:
    #   Level: info
    #   reconcileDefaultMaxConcurrentSyncs: 1
    # resourceTags: []
    # installScope: "namespace"
    # watchNamespace: "ack-network"
    # leaderElection:
    #   enabled: false
    #   namespace: ""
    # resources:
    #   requests:
    #     cpu: 50m
    #     memory: 200Mi
    #   limits:
    #     cpu: 100m
    #     memory: 300Mi
  eks:
    enabled: false
  iam:
    enabled: false
  kms:
    enabled: false
  lambda:
    enabled: false
  opensearchservice:
    enabled: false
  rds:
    enabled: false
  route53resolver:
    enabled: false
  s3:
    enabled: false
  s3control:
    enabled: false
  secretsmanager:
    enabled: false
  sns:
    enabled: false
  sqs:
    enabled: false
  wafv2:
    enabled: false