{
  "format_version": "1.2",
  "terraform_version": "1.12.2",
  "variables": {
    "ack_service_map": {
      "value": {
        "S3": "1.1.3"
      }
    },
    "aws_profile": {
      "value": "jayadeyemi"
    },
    "cluster_name": {
      "value": "gen3-eks-cluster"
    },
    "cluster_random_suffix": {
      "value": ""
    },
    "region": {
      "value": "us-east-1"
    }
  },
  "planned_values": {
    "outputs": {
      "ack_controller_role_arns": {
        "sensitive": false
      },
      "ack_controller_statuses": {
        "sensitive": false,
        "type": [
          "object",
          {
            "s3": "string"
          }
        ],
        "value": {
          "s3": "deployed"
        }
      },
      "cluster_endpoint": {
        "sensitive": false,
        "type": "string",
        "value": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com"
      },
      "cluster_name": {
        "sensitive": false,
        "type": "string",
        "value": "gen3-eks-cluster-IcA3"
      },
      "cluster_security_group_id": {
        "sensitive": false,
        "type": "string",
        "value": "sg-06c615f0d851c65d4"
      },
      "region": {
        "sensitive": false,
        "type": "string",
        "value": "us-east-1"
      }
    },
    "root_module": {
      "child_modules": [
        {
          "address": "module.gen3-commons",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.gen3-commons.module.gen3-eks.random_string.suffix",
                  "mode": "managed",
                  "type": "random_string",
                  "name": "suffix",
                  "provider_name": "registry.terraform.io/hashicorp/random",
                  "schema_version": 2,
                  "values": {
                    "id": "IcA3",
                    "keepers": null,
                    "length": 4,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "numeric": true,
                    "override_special": null,
                    "result": "IcA3",
                    "special": false,
                    "upper": true
                  },
                  "sensitive_values": {}
                }
              ],
              "address": "module.gen3-commons.module.gen3-eks",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this[0]",
                      "mode": "managed",
                      "type": "aws_cloudwatch_log_group",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:logs:us-east-1:682033468861:log-group:/aws/eks/gen3-eks-cluster-IcA3/cluster",
                        "id": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
                        "kms_key_id": "",
                        "log_group_class": "STANDARD",
                        "name": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
                        "name_prefix": "",
                        "retention_in_days": 90,
                        "skip_destroy": false,
                        "tags": {
                          "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
                        },
                        "tags_all": {
                          "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
                        }
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this[\"cluster_creator\"]",
                      "mode": "managed",
                      "type": "aws_eks_access_entry",
                      "name": "this",
                      "index": "cluster_creator",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "access_entry_arn": "arn:aws:eks:us-east-1:682033468861:access-entry/gen3-eks-cluster-IcA3/user/682033468861/jimi-cto/b2cbbd35-aaa4-016c-eefc-fa68621ec7f2",
                        "cluster_name": "gen3-eks-cluster-IcA3",
                        "created_at": "2025-06-16T20:25:44Z",
                        "id": "gen3-eks-cluster-IcA3:arn:aws:iam::682033468861:user/jimi-cto",
                        "kubernetes_groups": [],
                        "modified_at": "2025-06-16T20:25:44Z",
                        "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "type": "STANDARD",
                        "user_name": "arn:aws:iam::682033468861:user/jimi-cto"
                      },
                      "sensitive_values": {
                        "kubernetes_groups": [],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this[\"cluster_creator_admin\"]",
                      "mode": "managed",
                      "type": "aws_eks_access_policy_association",
                      "name": "this",
                      "index": "cluster_creator_admin",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "access_scope": [
                          {
                            "namespaces": [],
                            "type": "cluster"
                          }
                        ],
                        "associated_at": "2025-06-16 20:25:44.896 +0000 UTC",
                        "cluster_name": "gen3-eks-cluster-IcA3",
                        "id": "gen3-eks-cluster-IcA3#arn:aws:iam::682033468861:user/jimi-cto#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
                        "modified_at": "2025-06-16 20:25:44.896 +0000 UTC",
                        "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
                        "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
                        "timeouts": null
                      },
                      "sensitive_values": {
                        "access_scope": [
                          {
                            "namespaces": []
                          }
                        ]
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_addon.this[\"aws-ebs-csi-driver\"]",
                      "mode": "managed",
                      "type": "aws_eks_addon",
                      "name": "this",
                      "index": "aws-ebs-csi-driver",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "addon_name": "aws-ebs-csi-driver",
                        "addon_version": "v1.44.0-eksbuild.1",
                        "arn": "arn:aws:eks:us-east-1:682033468861:addon/gen3-eks-cluster-IcA3/aws-ebs-csi-driver/e6cbbd36-c410-3e2f-5de6-4233993c4e49",
                        "cluster_name": "gen3-eks-cluster-IcA3",
                        "configuration_values": "",
                        "created_at": "2025-06-16T20:28:08Z",
                        "id": "gen3-eks-cluster-IcA3:aws-ebs-csi-driver",
                        "modified_at": "2025-06-16T20:28:55Z",
                        "pod_identity_association": [],
                        "preserve": true,
                        "resolve_conflicts": null,
                        "resolve_conflicts_on_create": "OVERWRITE",
                        "resolve_conflicts_on_update": "OVERWRITE",
                        "service_account_role_arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {
                          "create": null,
                          "delete": null,
                          "update": null
                        }
                      },
                      "sensitive_values": {
                        "pod_identity_association": [],
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
                      "mode": "managed",
                      "type": "aws_eks_cluster",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "access_config": [
                          {
                            "authentication_mode": "API_AND_CONFIG_MAP",
                            "bootstrap_cluster_creator_admin_permissions": false
                          }
                        ],
                        "arn": "arn:aws:eks:us-east-1:682033468861:cluster/gen3-eks-cluster-IcA3",
                        "bootstrap_self_managed_addons": true,
                        "certificate_authority": [
                          {
                            "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          }
                        ],
                        "cluster_id": null,
                        "compute_config": [],
                        "created_at": "2025-06-16T20:15:15Z",
                        "enabled_cluster_log_types": [
                          "api",
                          "audit",
                          "authenticator"
                        ],
                        "encryption_config": [
                          {
                            "provider": [
                              {
                                "key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b"
                              }
                            ],
                            "resources": [
                              "secrets"
                            ]
                          }
                        ],
                        "endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
                        "force_update_version": null,
                        "id": "gen3-eks-cluster-IcA3",
                        "identity": [
                          {
                            "oidc": [
                              {
                                "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                              }
                            ]
                          }
                        ],
                        "kubernetes_network_config": [
                          {
                            "elastic_load_balancing": [
                              {
                                "enabled": false
                              }
                            ],
                            "ip_family": "ipv4",
                            "service_ipv4_cidr": "172.20.0.0/16",
                            "service_ipv6_cidr": ""
                          }
                        ],
                        "name": "gen3-eks-cluster-IcA3",
                        "outpost_config": [],
                        "platform_version": "eks.5",
                        "remote_network_config": [],
                        "role_arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                        "status": "ACTIVE",
                        "storage_config": [],
                        "tags": {
                          "terraform-aws-modules": "eks"
                        },
                        "tags_all": {
                          "terraform-aws-modules": "eks"
                        },
                        "timeouts": {
                          "create": null,
                          "delete": null,
                          "update": null
                        },
                        "upgrade_policy": [
                          {
                            "support_type": "EXTENDED"
                          }
                        ],
                        "version": "1.33",
                        "vpc_config": [
                          {
                            "cluster_security_group_id": "sg-0464ceb332fd5475e",
                            "endpoint_private_access": true,
                            "endpoint_public_access": true,
                            "public_access_cidrs": [
                              "0.0.0.0/0"
                            ],
                            "security_group_ids": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "subnet_ids": [
                              "subnet-059ded1cc017cf540",
                              "subnet-05c7ecccf262ba5c7",
                              "subnet-0ec84094faab8977b"
                            ],
                            "vpc_id": "vpc-010949b4d7c177dee"
                          }
                        ],
                        "zonal_shift_config": []
                      },
                      "sensitive_values": {
                        "access_config": [
                          {}
                        ],
                        "certificate_authority": [
                          {}
                        ],
                        "compute_config": [],
                        "enabled_cluster_log_types": [
                          false,
                          false,
                          false
                        ],
                        "encryption_config": [
                          {
                            "provider": [
                              {}
                            ],
                            "resources": [
                              false
                            ]
                          }
                        ],
                        "identity": [
                          {
                            "oidc": [
                              {}
                            ]
                          }
                        ],
                        "kubernetes_network_config": [
                          {
                            "elastic_load_balancing": [
                              {}
                            ]
                          }
                        ],
                        "outpost_config": [],
                        "remote_network_config": [],
                        "storage_config": [],
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {},
                        "upgrade_policy": [
                          {}
                        ],
                        "vpc_config": [
                          {
                            "public_access_cidrs": [
                              false
                            ],
                            "security_group_ids": [
                              false
                            ],
                            "subnet_ids": [
                              false,
                              false,
                              false
                            ]
                          }
                        ],
                        "zonal_shift_config": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
                      "mode": "managed",
                      "type": "aws_iam_openid_connect_provider",
                      "name": "oidc_provider",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
                        "client_id_list": [
                          "sts.amazonaws.com"
                        ],
                        "id": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
                        "tags": {
                          "Name": "gen3-eks-cluster-IcA3-eks-irsa"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-IcA3-eks-irsa"
                        },
                        "thumbprint_list": [
                          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                        ],
                        "url": "oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                      },
                      "sensitive_values": {
                        "client_id_list": [
                          false
                        ],
                        "tags": {},
                        "tags_all": {},
                        "thumbprint_list": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cluster_encryption[0]",
                      "mode": "managed",
                      "type": "aws_iam_policy",
                      "name": "cluster_encryption",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                        "attachment_count": 1,
                        "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
                        "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                        "name": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                        "name_prefix": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption",
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b\"}],\"Version\":\"2012-10-17\"}",
                        "policy_id": "ANPAZ5TC42W67QC53WXNQ",
                        "tags": {},
                        "tags_all": {}
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.custom[0]",
                      "mode": "managed",
                      "type": "aws_iam_policy",
                      "name": "custom",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                        "attachment_count": 1,
                        "description": "",
                        "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                        "name": "gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                        "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
                        "policy_id": "ANPAZ5TC42W65IOFAA5VB",
                        "tags": {},
                        "tags_all": {}
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                        "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "create_date": "2025-06-16T20:14:51Z",
                        "description": "",
                        "force_detach_policies": true,
                        "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                        "inline_policy": [],
                        "managed_policy_arns": [
                          "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                          "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
                        ],
                        "max_session_duration": 3600,
                        "name": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                        "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
                        "path": "/",
                        "permissions_boundary": "",
                        "tags": {},
                        "tags_all": {},
                        "unique_id": "AROAZ5TC42W65FK4JT5Z4"
                      },
                      "sensitive_values": {
                        "inline_policy": [],
                        "managed_policy_arns": [
                          false,
                          false,
                          false,
                          false
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "cluster_encryption",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201513082900000011",
                        "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                        "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.custom[0]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "custom",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451954000000009",
                        "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                        "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSClusterPolicy\"]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "this",
                      "index": "AmazonEKSClusterPolicy",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451869700000004",
                        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                        "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSVPCResourceController\"]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "this",
                      "index": "AmazonEKSVPCResourceController",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451890700000005",
                        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
                        "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster[0]",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "cluster",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-06c615f0d851c65d4",
                        "description": "EKS cluster security group",
                        "egress": [],
                        "id": "sg-06c615f0d851c65d4",
                        "ingress": [
                          {
                            "cidr_blocks": [],
                            "description": "Node groups to cluster API",
                            "from_port": 443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-0cd594b7fc78ab201"
                            ],
                            "self": false,
                            "to_port": 443
                          }
                        ],
                        "name": "gen3-eks-cluster-IcA3-cluster-2025061620150423990000000c",
                        "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
                        "owner_id": "682033468861",
                        "revoke_rules_on_delete": false,
                        "tags": {
                          "Name": "gen3-eks-cluster-IcA3-cluster"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-IcA3-cluster"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "egress": [],
                        "ingress": [
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          }
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node[0]",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "node",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-0cd594b7fc78ab201",
                        "description": "EKS node shared security group",
                        "egress": [
                          {
                            "cidr_blocks": [
                              "0.0.0.0/0"
                            ],
                            "description": "Allow all egress",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                          }
                        ],
                        "id": "sg-0cd594b7fc78ab201",
                        "ingress": [
                          {
                            "cidr_blocks": [],
                            "description": "Cluster API to node 4443/tcp webhook",
                            "from_port": 4443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "self": false,
                            "to_port": 4443
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Cluster API to node 6443/tcp webhook",
                            "from_port": 6443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "self": false,
                            "to_port": 6443
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Cluster API to node 8443/tcp webhook",
                            "from_port": 8443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "self": false,
                            "to_port": 8443
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Cluster API to node 9443/tcp webhook",
                            "from_port": 9443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "self": false,
                            "to_port": 9443
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Cluster API to node groups",
                            "from_port": 443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "self": false,
                            "to_port": 443
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Cluster API to node kubelets",
                            "from_port": 10250,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [
                              "sg-06c615f0d851c65d4"
                            ],
                            "self": false,
                            "to_port": 10250
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Node to node CoreDNS UDP",
                            "from_port": 53,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "udp",
                            "security_groups": [],
                            "self": true,
                            "to_port": 53
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Node to node CoreDNS",
                            "from_port": 53,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": true,
                            "to_port": 53
                          },
                          {
                            "cidr_blocks": [],
                            "description": "Node to node ingress on ephemeral ports",
                            "from_port": 1025,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": true,
                            "to_port": 65535
                          }
                        ],
                        "name": "gen3-eks-cluster-IcA3-node-2025061620150423980000000b",
                        "name_prefix": "gen3-eks-cluster-IcA3-node-",
                        "owner_id": "682033468861",
                        "revoke_rules_on_delete": false,
                        "tags": {
                          "Name": "gen3-eks-cluster-IcA3-node",
                          "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-IcA3-node",
                          "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "egress": [
                          {
                            "cidr_blocks": [
                              false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                          }
                        ],
                        "ingress": [
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": [
                              false
                            ]
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                          },
                          {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                          }
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "cluster",
                      "index": "ingress_nodes_443",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Node groups to cluster API",
                        "from_port": 443,
                        "id": "sgrule-3666249114",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "security_group_id": "sg-06c615f0d851c65d4",
                        "security_group_rule_id": "sgr-0607bd74ffa392727",
                        "self": false,
                        "source_security_group_id": "sg-0cd594b7fc78ab201",
                        "timeouts": null,
                        "to_port": 443,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"egress_all\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "egress_all",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": "Allow all egress",
                        "from_port": 0,
                        "id": "sgrule-2494722700",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "-1",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-0380db23c41187dc0",
                        "self": false,
                        "source_security_group_id": null,
                        "timeouts": null,
                        "to_port": 0,
                        "type": "egress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ],
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_cluster_443",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Cluster API to node groups",
                        "from_port": 443,
                        "id": "sgrule-4180634791",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-094657b0de983f2ae",
                        "self": false,
                        "source_security_group_id": "sg-06c615f0d851c65d4",
                        "timeouts": null,
                        "to_port": 443,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_4443_webhook\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_cluster_4443_webhook",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Cluster API to node 4443/tcp webhook",
                        "from_port": 4443,
                        "id": "sgrule-3638363368",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-0dedf2fad28a414b2",
                        "self": false,
                        "source_security_group_id": "sg-06c615f0d851c65d4",
                        "timeouts": null,
                        "to_port": 4443,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_6443_webhook\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_cluster_6443_webhook",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Cluster API to node 6443/tcp webhook",
                        "from_port": 6443,
                        "id": "sgrule-295658366",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-0c28b8c04718e2fcd",
                        "self": false,
                        "source_security_group_id": "sg-06c615f0d851c65d4",
                        "timeouts": null,
                        "to_port": 6443,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_8443_webhook\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_cluster_8443_webhook",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Cluster API to node 8443/tcp webhook",
                        "from_port": 8443,
                        "id": "sgrule-46358367",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-0a9bcd456895cc071",
                        "self": false,
                        "source_security_group_id": "sg-06c615f0d851c65d4",
                        "timeouts": null,
                        "to_port": 8443,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_9443_webhook\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_cluster_9443_webhook",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Cluster API to node 9443/tcp webhook",
                        "from_port": 9443,
                        "id": "sgrule-1717726356",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-0a2a591ae92d34cee",
                        "self": false,
                        "source_security_group_id": "sg-06c615f0d851c65d4",
                        "timeouts": null,
                        "to_port": 9443,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_cluster_kubelet",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Cluster API to node kubelets",
                        "from_port": 10250,
                        "id": "sgrule-1462978612",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-03f20f90bc6f397cb",
                        "self": false,
                        "source_security_group_id": "sg-06c615f0d851c65d4",
                        "timeouts": null,
                        "to_port": 10250,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_nodes_ephemeral\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_nodes_ephemeral",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Node to node ingress on ephemeral ports",
                        "from_port": 1025,
                        "id": "sgrule-2253037681",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-058553ab1db369e91",
                        "self": true,
                        "source_security_group_id": null,
                        "timeouts": null,
                        "to_port": 65535,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_self_coredns_tcp",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Node to node CoreDNS",
                        "from_port": 53,
                        "id": "sgrule-3526934040",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-08f31c37a0598ab94",
                        "self": true,
                        "source_security_group_id": null,
                        "timeouts": null,
                        "to_port": 53,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "node",
                      "index": "ingress_self_coredns_udp",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": "Node to node CoreDNS UDP",
                        "from_port": 53,
                        "id": "sgrule-1986469367",
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": [],
                        "protocol": "udp",
                        "security_group_id": "sg-0cd594b7fc78ab201",
                        "security_group_rule_id": "sgr-0005e5329ad501247",
                        "self": true,
                        "source_security_group_id": null,
                        "timeouts": null,
                        "to_port": 53,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "prefix_list_ids": []
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
                      "mode": "managed",
                      "type": "time_sleep",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/time",
                      "schema_version": 0,
                      "values": {
                        "create_duration": "30s",
                        "destroy_duration": null,
                        "id": "2025-06-16T20:26:13Z",
                        "triggers": {
                          "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                          "cluster_endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
                          "cluster_name": "gen3-eks-cluster-IcA3",
                          "cluster_service_cidr": "172.20.0.0/16",
                          "cluster_version": "1.33"
                        }
                      },
                      "sensitive_values": {
                        "triggers": {}
                      }
                    }
                  ],
                  "address": "module.gen3-commons.module.gen3-eks.module.eks",
                  "child_modules": [
                    {
                      "resources": [
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
                          "mode": "managed",
                          "type": "aws_eks_node_group",
                          "name": "this",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "ami_type": "AL2023_x86_64_STANDARD",
                            "arn": "arn:aws:eks:us-east-1:682033468861:nodegroup/gen3-eks-cluster-IcA3/ack-controllers-20250616202619872400000015/2ecbbd35-f0d8-c40e-f214-955da595e44f",
                            "capacity_type": "ON_DEMAND",
                            "cluster_name": "gen3-eks-cluster-IcA3",
                            "disk_size": 0,
                            "force_update_version": null,
                            "id": "gen3-eks-cluster-IcA3:ack-controllers-20250616202619872400000015",
                            "instance_types": [
                              "t3.small"
                            ],
                            "labels": {},
                            "launch_template": [
                              {
                                "id": "lt-0ab7ec77e56b808a9",
                                "name": "one-20250616202614002700000013",
                                "version": "1"
                              }
                            ],
                            "node_group_name": "ack-controllers-20250616202619872400000015",
                            "node_group_name_prefix": "ack-controllers-",
                            "node_repair_config": [],
                            "node_role_arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
                            "release_version": "1.33.0-20250610",
                            "remote_access": [],
                            "resources": [
                              {
                                "autoscaling_groups": [
                                  {
                                    "name": "eks-ack-controllers-20250616202619872400000015-2ecbbd35-f0d8-c40e-f214-955da595e44f"
                                  }
                                ],
                                "remote_access_security_group_id": ""
                              }
                            ],
                            "scaling_config": [
                              {
                                "desired_size": 1,
                                "max_size": 3,
                                "min_size": 1
                              }
                            ],
                            "status": "ACTIVE",
                            "subnet_ids": [
                              "subnet-059ded1cc017cf540",
                              "subnet-05c7ecccf262ba5c7",
                              "subnet-0ec84094faab8977b"
                            ],
                            "tags": {
                              "Name": "ack-controllers"
                            },
                            "tags_all": {
                              "Name": "ack-controllers"
                            },
                            "taint": [],
                            "timeouts": {
                              "create": null,
                              "delete": null,
                              "update": null
                            },
                            "update_config": [
                              {
                                "max_unavailable": 0,
                                "max_unavailable_percentage": 33
                              }
                            ],
                            "version": "1.33"
                          },
                          "sensitive_values": {
                            "instance_types": [
                              false
                            ],
                            "labels": {},
                            "launch_template": [
                              {}
                            ],
                            "node_repair_config": [],
                            "remote_access": [],
                            "resources": [
                              {
                                "autoscaling_groups": [
                                  {}
                                ]
                              }
                            ],
                            "scaling_config": [
                              {}
                            ],
                            "subnet_ids": [
                              false,
                              false,
                              false
                            ],
                            "tags": {},
                            "tags_all": {},
                            "taint": [],
                            "timeouts": {},
                            "update_config": [
                              {}
                            ]
                          }
                        },
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
                          "mode": "managed",
                          "type": "aws_iam_role",
                          "name": "this",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
                            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                            "create_date": "2025-06-16T20:14:51Z",
                            "description": "EKS managed node group IAM role",
                            "force_detach_policies": true,
                            "id": "ack-controllers-eks-node-group-20250616201451225000000001",
                            "inline_policy": [],
                            "managed_policy_arns": [
                              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                            ],
                            "max_session_duration": 3600,
                            "name": "ack-controllers-eks-node-group-20250616201451225000000001",
                            "name_prefix": "ack-controllers-eks-node-group-",
                            "path": "/",
                            "permissions_boundary": "",
                            "tags": {},
                            "tags_all": {},
                            "unique_id": "AROAZ5TC42W6VA6P3GPDM"
                          },
                          "sensitive_values": {
                            "inline_policy": [],
                            "managed_policy_arns": [
                              false,
                              false,
                              false
                            ],
                            "tags": {},
                            "tags_all": {}
                          }
                        },
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEC2ContainerRegistryReadOnly\"]",
                          "mode": "managed",
                          "type": "aws_iam_role_policy_attachment",
                          "name": "this",
                          "index": "AmazonEC2ContainerRegistryReadOnly",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451895700000006",
                            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                            "role": "ack-controllers-eks-node-group-20250616201451225000000001"
                          },
                          "sensitive_values": {}
                        },
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEKSWorkerNodePolicy\"]",
                          "mode": "managed",
                          "type": "aws_iam_role_policy_attachment",
                          "name": "this",
                          "index": "AmazonEKSWorkerNodePolicy",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "id": "ack-controllers-eks-node-group-20250616201451225000000001-2025061620145196900000000a",
                            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                            "role": "ack-controllers-eks-node-group-20250616201451225000000001"
                          },
                          "sensitive_values": {}
                        },
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEKS_CNI_Policy\"]",
                          "mode": "managed",
                          "type": "aws_iam_role_policy_attachment",
                          "name": "this",
                          "index": "AmazonEKS_CNI_Policy",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451932800000007",
                            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                            "role": "ack-controllers-eks-node-group-20250616201451225000000001"
                          },
                          "sensitive_values": {}
                        },
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
                          "mode": "managed",
                          "type": "aws_launch_template",
                          "name": "this",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "arn": "arn:aws:ec2:us-east-1:682033468861:launch-template/lt-0ab7ec77e56b808a9",
                            "block_device_mappings": [],
                            "capacity_reservation_specification": [],
                            "cpu_options": [],
                            "credit_specification": [],
                            "default_version": 1,
                            "description": "Custom launch template for ack-controllers EKS managed node group",
                            "disable_api_stop": false,
                            "disable_api_termination": false,
                            "ebs_optimized": "",
                            "elastic_gpu_specifications": [],
                            "elastic_inference_accelerator": [],
                            "enclave_options": [],
                            "hibernation_options": [],
                            "iam_instance_profile": [],
                            "id": "lt-0ab7ec77e56b808a9",
                            "image_id": "",
                            "instance_initiated_shutdown_behavior": "",
                            "instance_market_options": [],
                            "instance_requirements": [],
                            "instance_type": "",
                            "kernel_id": "",
                            "key_name": "",
                            "latest_version": 1,
                            "license_specification": [],
                            "maintenance_options": [],
                            "metadata_options": [
                              {
                                "http_endpoint": "enabled",
                                "http_protocol_ipv6": "",
                                "http_put_response_hop_limit": 2,
                                "http_tokens": "required",
                                "instance_metadata_tags": ""
                              }
                            ],
                            "monitoring": [
                              {
                                "enabled": true
                              }
                            ],
                            "name": "one-20250616202614002700000013",
                            "name_prefix": "one-",
                            "network_interfaces": [],
                            "placement": [],
                            "private_dns_name_options": [],
                            "ram_disk_id": "",
                            "security_group_names": [],
                            "tag_specifications": [
                              {
                                "resource_type": "instance",
                                "tags": {
                                  "Name": "ack-controllers"
                                }
                              },
                              {
                                "resource_type": "network-interface",
                                "tags": {
                                  "Name": "ack-controllers"
                                }
                              },
                              {
                                "resource_type": "volume",
                                "tags": {
                                  "Name": "ack-controllers"
                                }
                              }
                            ],
                            "tags": {},
                            "tags_all": {},
                            "update_default_version": true,
                            "user_data": "",
                            "vpc_security_group_ids": [
                              "sg-0cd594b7fc78ab201"
                            ]
                          },
                          "sensitive_values": {
                            "block_device_mappings": [],
                            "capacity_reservation_specification": [],
                            "cpu_options": [],
                            "credit_specification": [],
                            "elastic_gpu_specifications": [],
                            "elastic_inference_accelerator": [],
                            "enclave_options": [],
                            "hibernation_options": [],
                            "iam_instance_profile": [],
                            "instance_market_options": [],
                            "instance_requirements": [],
                            "license_specification": [],
                            "maintenance_options": [],
                            "metadata_options": [
                              {}
                            ],
                            "monitoring": [
                              {}
                            ],
                            "network_interfaces": [],
                            "placement": [],
                            "private_dns_name_options": [],
                            "security_group_names": [],
                            "tag_specifications": [
                              {
                                "tags": {}
                              },
                              {
                                "tags": {}
                              },
                              {
                                "tags": {}
                              }
                            ],
                            "tags": {},
                            "tags_all": {},
                            "vpc_security_group_ids": [
                              false
                            ]
                          }
                        }
                      ],
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
                      "child_modules": [
                        {
                          "resources": [
                            {
                              "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
                              "mode": "managed",
                              "type": "null_resource",
                              "name": "validate_cluster_service_cidr",
                              "provider_name": "registry.terraform.io/hashicorp/null",
                              "schema_version": 0,
                              "values": {
                                "id": "1205457099937568073",
                                "triggers": null
                              },
                              "sensitive_values": {}
                            }
                          ],
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data"
                        }
                      ]
                    },
                    {
                      "resources": [
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_alias.this[\"cluster\"]",
                          "mode": "managed",
                          "type": "aws_kms_alias",
                          "name": "this",
                          "index": "cluster",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "arn": "arn:aws:kms:us-east-1:682033468861:alias/eks/gen3-eks-cluster-IcA3",
                            "id": "alias/eks/gen3-eks-cluster-IcA3",
                            "name": "alias/eks/gen3-eks-cluster-IcA3",
                            "name_prefix": "",
                            "target_key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
                            "target_key_id": "9961c795-4032-4548-8e77-d961338d308b"
                          },
                          "sensitive_values": {}
                        },
                        {
                          "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this[0]",
                          "mode": "managed",
                          "type": "aws_kms_key",
                          "name": "this",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 0,
                          "values": {
                            "arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
                            "bypass_policy_lockout_safety_check": false,
                            "custom_key_store_id": "",
                            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
                            "deletion_window_in_days": null,
                            "description": "gen3-eks-cluster-IcA3 cluster encryption key",
                            "enable_key_rotation": true,
                            "id": "9961c795-4032-4548-8e77-d961338d308b",
                            "is_enabled": true,
                            "key_id": "9961c795-4032-4548-8e77-d961338d308b",
                            "key_usage": "ENCRYPT_DECRYPT",
                            "multi_region": false,
                            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:user/jimi-cto\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
                            "rotation_period_in_days": 365,
                            "tags": {
                              "terraform-aws-modules": "eks"
                            },
                            "tags_all": {
                              "terraform-aws-modules": "eks"
                            },
                            "timeouts": null,
                            "xks_key_id": ""
                          },
                          "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                          }
                        }
                      ],
                      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms"
                    }
                  ]
                },
                {
                  "resources": [
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_network_acl.this[0]",
                      "mode": "managed",
                      "type": "aws_default_network_acl",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:network-acl/acl-0b068930a56d09c81",
                        "default_network_acl_id": "acl-0b068930a56d09c81",
                        "egress": [
                          {
                            "action": "allow",
                            "cidr_block": "",
                            "from_port": 0,
                            "icmp_code": 0,
                            "icmp_type": 0,
                            "ipv6_cidr_block": "::/0",
                            "protocol": "-1",
                            "rule_no": 101,
                            "to_port": 0
                          },
                          {
                            "action": "allow",
                            "cidr_block": "0.0.0.0/0",
                            "from_port": 0,
                            "icmp_code": 0,
                            "icmp_type": 0,
                            "ipv6_cidr_block": "",
                            "protocol": "-1",
                            "rule_no": 100,
                            "to_port": 0
                          }
                        ],
                        "id": "acl-0b068930a56d09c81",
                        "ingress": [
                          {
                            "action": "allow",
                            "cidr_block": "",
                            "from_port": 0,
                            "icmp_code": 0,
                            "icmp_type": 0,
                            "ipv6_cidr_block": "::/0",
                            "protocol": "-1",
                            "rule_no": 101,
                            "to_port": 0
                          },
                          {
                            "action": "allow",
                            "cidr_block": "0.0.0.0/0",
                            "from_port": 0,
                            "icmp_code": 0,
                            "icmp_type": 0,
                            "ipv6_cidr_block": "",
                            "protocol": "-1",
                            "rule_no": 100,
                            "to_port": 0
                          }
                        ],
                        "owner_id": "682033468861",
                        "subnet_ids": [
                          "subnet-059ded1cc017cf540",
                          "subnet-05c7ecccf262ba5c7",
                          "subnet-0b7e06de8d4d99ce8",
                          "subnet-0c2c042c7bb820a1d",
                          "subnet-0ec84094faab8977b",
                          "subnet-0fa7b61e3603a36a6"
                        ],
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-default"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-default"
                        },
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "egress": [
                          {},
                          {}
                        ],
                        "ingress": [
                          {},
                          {}
                        ],
                        "subnet_ids": [
                          false,
                          false,
                          false,
                          false,
                          false,
                          false
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_route_table.default[0]",
                      "mode": "managed",
                      "type": "aws_default_route_table",
                      "name": "default",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0715941188c0806bd",
                        "default_route_table_id": "rtb-0715941188c0806bd",
                        "id": "rtb-0715941188c0806bd",
                        "owner_id": "682033468861",
                        "propagating_vgws": [],
                        "route": [],
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-default"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-default"
                        },
                        "timeouts": {
                          "create": "5m",
                          "update": "5m"
                        },
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "propagating_vgws": [],
                        "route": [],
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_security_group.this[0]",
                      "mode": "managed",
                      "type": "aws_default_security_group",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-01ed6e2c39aec4b16",
                        "description": "default VPC security group",
                        "egress": [],
                        "id": "sg-01ed6e2c39aec4b16",
                        "ingress": [],
                        "name": "default",
                        "name_prefix": "",
                        "owner_id": "682033468861",
                        "revoke_rules_on_delete": false,
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-default"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-default"
                        },
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "egress": [],
                        "ingress": [],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat[0]",
                      "mode": "managed",
                      "type": "aws_eip",
                      "name": "nat",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "address": null,
                        "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
                        "arn": "arn:aws:ec2:us-east-1:682033468861:elastic-ip/eipalloc-0a3d7bc7e2af311bf",
                        "associate_with_private_ip": null,
                        "association_id": "eipassoc-0c2d7d052e239f642",
                        "carrier_ip": "",
                        "customer_owned_ip": "",
                        "customer_owned_ipv4_pool": "",
                        "domain": "vpc",
                        "id": "eipalloc-0a3d7bc7e2af311bf",
                        "instance": "",
                        "ipam_pool_id": null,
                        "network_border_group": "us-east-1",
                        "network_interface": "eni-02ea1b3c0294f49e5",
                        "private_dns": "ip-10-0-4-82.ec2.internal",
                        "private_ip": "10.0.4.82",
                        "ptr_record": "",
                        "public_dns": "ec2-52-45-251-205.compute-1.amazonaws.com",
                        "public_ip": "52.45.251.205",
                        "public_ipv4_pool": "amazon",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-us-east-1a"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-us-east-1a"
                        },
                        "timeouts": null,
                        "vpc": true
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this[0]",
                      "mode": "managed",
                      "type": "aws_internet_gateway",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:internet-gateway/igw-08c447be19c8c855b",
                        "id": "igw-08c447be19c8c855b",
                        "owner_id": "682033468861",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_nat_gateway.this[0]",
                      "mode": "managed",
                      "type": "aws_nat_gateway",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
                        "association_id": "eipassoc-0c2d7d052e239f642",
                        "connectivity_type": "public",
                        "id": "nat-04e02b198cdb07701",
                        "network_interface_id": "eni-02ea1b3c0294f49e5",
                        "private_ip": "10.0.4.82",
                        "public_ip": "52.45.251.205",
                        "secondary_allocation_ids": [],
                        "secondary_private_ip_address_count": 0,
                        "secondary_private_ip_addresses": [],
                        "subnet_id": "subnet-0fa7b61e3603a36a6",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-us-east-1a"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-us-east-1a"
                        },
                        "timeouts": null
                      },
                      "sensitive_values": {
                        "secondary_allocation_ids": [],
                        "secondary_private_ip_addresses": [],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.private_nat_gateway[0]",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "private_nat_gateway",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "carrier_gateway_id": "",
                        "core_network_arn": "",
                        "destination_cidr_block": "0.0.0.0/0",
                        "destination_ipv6_cidr_block": "",
                        "destination_prefix_list_id": "",
                        "egress_only_gateway_id": "",
                        "gateway_id": "",
                        "id": "r-rtb-0957d9fc5bc7c2ebe1080289494",
                        "instance_id": "",
                        "instance_owner_id": "",
                        "local_gateway_id": "",
                        "nat_gateway_id": "nat-04e02b198cdb07701",
                        "network_interface_id": "",
                        "origin": "CreateRoute",
                        "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                        "state": "active",
                        "timeouts": {
                          "create": "5m",
                          "delete": null,
                          "update": null
                        },
                        "transit_gateway_id": "",
                        "vpc_endpoint_id": "",
                        "vpc_peering_connection_id": ""
                      },
                      "sensitive_values": {
                        "timeouts": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.public_internet_gateway[0]",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "public_internet_gateway",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "carrier_gateway_id": "",
                        "core_network_arn": "",
                        "destination_cidr_block": "0.0.0.0/0",
                        "destination_ipv6_cidr_block": "",
                        "destination_prefix_list_id": "",
                        "egress_only_gateway_id": "",
                        "gateway_id": "igw-08c447be19c8c855b",
                        "id": "r-rtb-0f571cf566c1ca6e71080289494",
                        "instance_id": "",
                        "instance_owner_id": "",
                        "local_gateway_id": "",
                        "nat_gateway_id": "",
                        "network_interface_id": "",
                        "origin": "CreateRoute",
                        "route_table_id": "rtb-0f571cf566c1ca6e7",
                        "state": "active",
                        "timeouts": {
                          "create": "5m",
                          "delete": null,
                          "update": null
                        },
                        "transit_gateway_id": "",
                        "vpc_endpoint_id": "",
                        "vpc_peering_connection_id": ""
                      },
                      "sensitive_values": {
                        "timeouts": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private[0]",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "private",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0957d9fc5bc7c2ebe",
                        "id": "rtb-0957d9fc5bc7c2ebe",
                        "owner_id": "682033468861",
                        "propagating_vgws": [],
                        "route": [
                          {
                            "carrier_gateway_id": "",
                            "cidr_block": "0.0.0.0/0",
                            "core_network_arn": "",
                            "destination_prefix_list_id": "",
                            "egress_only_gateway_id": "",
                            "gateway_id": "",
                            "ipv6_cidr_block": "",
                            "local_gateway_id": "",
                            "nat_gateway_id": "nat-04e02b198cdb07701",
                            "network_interface_id": "",
                            "transit_gateway_id": "",
                            "vpc_endpoint_id": "",
                            "vpc_peering_connection_id": ""
                          }
                        ],
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-private"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-private"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "propagating_vgws": [],
                        "route": [
                          {}
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public[0]",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "public",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0f571cf566c1ca6e7",
                        "id": "rtb-0f571cf566c1ca6e7",
                        "owner_id": "682033468861",
                        "propagating_vgws": [],
                        "route": [
                          {
                            "carrier_gateway_id": "",
                            "cidr_block": "0.0.0.0/0",
                            "core_network_arn": "",
                            "destination_prefix_list_id": "",
                            "egress_only_gateway_id": "",
                            "gateway_id": "igw-08c447be19c8c855b",
                            "ipv6_cidr_block": "",
                            "local_gateway_id": "",
                            "nat_gateway_id": "",
                            "network_interface_id": "",
                            "transit_gateway_id": "",
                            "vpc_endpoint_id": "",
                            "vpc_peering_connection_id": ""
                          }
                        ],
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-public"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-public"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "propagating_vgws": [],
                        "route": [
                          {}
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[0]",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "private",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "gateway_id": "",
                        "id": "rtbassoc-0b4c06bbd0023a7b7",
                        "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                        "subnet_id": "subnet-05c7ecccf262ba5c7",
                        "timeouts": null
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[1]",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "private",
                      "index": 1,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "gateway_id": "",
                        "id": "rtbassoc-065ccdb63e53203b2",
                        "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                        "subnet_id": "subnet-059ded1cc017cf540",
                        "timeouts": null
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[2]",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "private",
                      "index": 2,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "gateway_id": "",
                        "id": "rtbassoc-0d6af0aff28a09621",
                        "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                        "subnet_id": "subnet-0ec84094faab8977b",
                        "timeouts": null
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[0]",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "public",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "gateway_id": "",
                        "id": "rtbassoc-0e406b7695169580a",
                        "route_table_id": "rtb-0f571cf566c1ca6e7",
                        "subnet_id": "subnet-0fa7b61e3603a36a6",
                        "timeouts": null
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[1]",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "public",
                      "index": 1,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "gateway_id": "",
                        "id": "rtbassoc-026e02d338322a78b",
                        "route_table_id": "rtb-0f571cf566c1ca6e7",
                        "subnet_id": "subnet-0b7e06de8d4d99ce8",
                        "timeouts": null
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[2]",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "public",
                      "index": 2,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "gateway_id": "",
                        "id": "rtbassoc-050de29121729d099",
                        "route_table_id": "rtb-0f571cf566c1ca6e7",
                        "subnet_id": "subnet-0c2c042c7bb820a1d",
                        "timeouts": null
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[0]",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "private",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-05c7ecccf262ba5c7",
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "availability_zone_id": "use1-az4",
                        "cidr_block": "10.0.1.0/24",
                        "customer_owned_ipv4_pool": "",
                        "enable_dns64": false,
                        "enable_lni_at_device_index": 0,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "id": "subnet-05c7ecccf262ba5c7",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_association_id": "",
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": false,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": "",
                        "owner_id": "682033468861",
                        "private_dns_hostname_type_on_launch": "ip-name",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
                          "kubernetes.io/role/internal-elb": "1"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
                          "kubernetes.io/role/internal-elb": "1"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[1]",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "private",
                      "index": 1,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-059ded1cc017cf540",
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "availability_zone_id": "use1-az6",
                        "cidr_block": "10.0.2.0/24",
                        "customer_owned_ipv4_pool": "",
                        "enable_dns64": false,
                        "enable_lni_at_device_index": 0,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "id": "subnet-059ded1cc017cf540",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_association_id": "",
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": false,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": "",
                        "owner_id": "682033468861",
                        "private_dns_hostname_type_on_launch": "ip-name",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
                          "kubernetes.io/role/internal-elb": "1"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
                          "kubernetes.io/role/internal-elb": "1"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[2]",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "private",
                      "index": 2,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0ec84094faab8977b",
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1c",
                        "availability_zone_id": "use1-az1",
                        "cidr_block": "10.0.3.0/24",
                        "customer_owned_ipv4_pool": "",
                        "enable_dns64": false,
                        "enable_lni_at_device_index": 0,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "id": "subnet-0ec84094faab8977b",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_association_id": "",
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": false,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": "",
                        "owner_id": "682033468861",
                        "private_dns_hostname_type_on_launch": "ip-name",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
                          "kubernetes.io/role/internal-elb": "1"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
                          "kubernetes.io/role/internal-elb": "1"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[0]",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "public",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0fa7b61e3603a36a6",
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "availability_zone_id": "use1-az4",
                        "cidr_block": "10.0.4.0/24",
                        "customer_owned_ipv4_pool": "",
                        "enable_dns64": false,
                        "enable_lni_at_device_index": 0,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "id": "subnet-0fa7b61e3603a36a6",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_association_id": "",
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": false,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": "",
                        "owner_id": "682033468861",
                        "private_dns_hostname_type_on_launch": "ip-name",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
                          "kubernetes.io/role/elb": "1"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
                          "kubernetes.io/role/elb": "1"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[1]",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "public",
                      "index": 1,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0b7e06de8d4d99ce8",
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "availability_zone_id": "use1-az6",
                        "cidr_block": "10.0.5.0/24",
                        "customer_owned_ipv4_pool": "",
                        "enable_dns64": false,
                        "enable_lni_at_device_index": 0,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "id": "subnet-0b7e06de8d4d99ce8",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_association_id": "",
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": false,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": "",
                        "owner_id": "682033468861",
                        "private_dns_hostname_type_on_launch": "ip-name",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
                          "kubernetes.io/role/elb": "1"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
                          "kubernetes.io/role/elb": "1"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[2]",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "public",
                      "index": 2,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0c2c042c7bb820a1d",
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1c",
                        "availability_zone_id": "use1-az1",
                        "cidr_block": "10.0.6.0/24",
                        "customer_owned_ipv4_pool": "",
                        "enable_dns64": false,
                        "enable_lni_at_device_index": 0,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "id": "subnet-0c2c042c7bb820a1d",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_association_id": "",
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": false,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": "",
                        "owner_id": "682033468861",
                        "private_dns_hostname_type_on_launch": "ip-name",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
                          "kubernetes.io/role/elb": "1"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
                          "kubernetes.io/role/elb": "1"
                        },
                        "timeouts": null,
                        "vpc_id": "vpc-010949b4d7c177dee"
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
                      "mode": "managed",
                      "type": "aws_vpc",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 1,
                      "values": {
                        "arn": "arn:aws:ec2:us-east-1:682033468861:vpc/vpc-010949b4d7c177dee",
                        "assign_generated_ipv6_cidr_block": false,
                        "cidr_block": "10.0.0.0/16",
                        "default_network_acl_id": "acl-0b068930a56d09c81",
                        "default_route_table_id": "rtb-0715941188c0806bd",
                        "default_security_group_id": "sg-01ed6e2c39aec4b16",
                        "dhcp_options_id": "dopt-0ab4ec95fccd1714a",
                        "enable_dns_hostnames": true,
                        "enable_dns_support": true,
                        "enable_network_address_usage_metrics": false,
                        "id": "vpc-010949b4d7c177dee",
                        "instance_tenancy": "default",
                        "ipv4_ipam_pool_id": null,
                        "ipv4_netmask_length": null,
                        "ipv6_association_id": "",
                        "ipv6_cidr_block": "",
                        "ipv6_cidr_block_network_border_group": "",
                        "ipv6_ipam_pool_id": "",
                        "ipv6_netmask_length": 0,
                        "main_route_table_id": "rtb-0715941188c0806bd",
                        "owner_id": "682033468861",
                        "tags": {
                          "Name": "gen3-eks-cluster-vpc"
                        },
                        "tags_all": {
                          "Name": "gen3-eks-cluster-vpc"
                        }
                      },
                      "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                      }
                    }
                  ],
                  "address": "module.gen3-commons.module.gen3-eks.module.vpc"
                },
                {
                  "resources": [
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                        "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"}}],\"Version\":\"2012-10-17\"}",
                        "create_date": "2025-06-16T20:25:45Z",
                        "description": "",
                        "force_detach_policies": false,
                        "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                        "inline_policy": [],
                        "managed_policy_arns": [
                          "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
                        ],
                        "max_session_duration": 3600,
                        "name": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                        "name_prefix": "",
                        "path": "/",
                        "permissions_boundary": "",
                        "tags": {},
                        "tags_all": {},
                        "unique_id": "AROAZ5TC42W6TOZ3BFEVD"
                      },
                      "sensitive_values": {
                        "inline_policy": [],
                        "managed_policy_arns": [
                          false
                        ],
                        "tags": {},
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "custom",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3-20250616202545891800000012",
                        "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
                        "role": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3"
                      },
                      "sensitive_values": {}
                    }
                  ],
                  "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi"
                }
              ]
            },
            {
              "resources": [
                {
                  "address": "module.gen3-commons.module.gen3-ack-controllers.helm_release.ack_service_controller[\"s3\"]",
                  "mode": "managed",
                  "type": "helm_release",
                  "name": "ack_service_controller",
                  "index": "s3",
                  "provider_name": "registry.terraform.io/hashicorp/helm",
                  "schema_version": 1,
                  "values": {
                    "atomic": false,
                    "chart": "oci://public.ecr.aws/aws-controllers-k8s/s3-chart",
                    "cleanup_on_fail": false,
                    "create_namespace": true,
                    "dependency_update": false,
                    "description": null,
                    "devel": null,
                    "disable_crd_hooks": false,
                    "disable_openapi_validation": false,
                    "disable_webhooks": false,
                    "force_update": false,
                    "keyring": null,
                    "lint": false,
                    "max_history": 0,
                    "name": "ack-s3-controller",
                    "namespace": "ack-s3-controller",
                    "pass_credentials": false,
                    "postrender": [],
                    "recreate_pods": false,
                    "render_subchart_notes": true,
                    "replace": false,
                    "repository": null,
                    "repository_ca_file": null,
                    "repository_cert_file": null,
                    "repository_key_file": null,
                    "repository_password": null,
                    "repository_username": null,
                    "reset_values": false,
                    "reuse_values": false,
                    "set": [
                      {
                        "name": "aws.region",
                        "type": "",
                        "value": "us-east-1"
                      },
                      {
                        "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                        "type": "",
                        "value": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                      },
                      {
                        "name": "serviceAccount.name",
                        "type": "",
                        "value": "s3-controller"
                      }
                    ],
                    "set_list": [],
                    "set_sensitive": [],
                    "skip_crds": false,
                    "status": "deployed",
                    "timeout": 300,
                    "upgrade_install": null,
                    "values": null,
                    "verify": false,
                    "version": "1.1.3",
                    "wait": true,
                    "wait_for_jobs": false
                  },
                  "sensitive_values": {
                    "metadata": [],
                    "postrender": [],
                    "repository_password": true,
                    "set": [
                      {},
                      {},
                      {}
                    ],
                    "set_list": [],
                    "set_sensitive": []
                  }
                },
                {
                  "address": "module.gen3-commons.module.gen3-ack-controllers.null_resource.helm_registry_login",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "helm_registry_login",
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0,
                  "values": {
                    "id": "1195991904684845203",
                    "triggers": null
                  },
                  "sensitive_values": {}
                }
              ],
              "address": "module.gen3-commons.module.gen3-ack-controllers",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role.this[0]",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "this",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-s3-controller:s3-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"}}],\"Version\":\"2012-10-17\"}",
                        "description": "",
                        "force_detach_policies": false,
                        "max_session_duration": 3600,
                        "name": "ACK-controller-gen3-eks-cluster-IcA3-s3",
                        "path": "/",
                        "permissions_boundary": "",
                        "tags": null
                      },
                      "sensitive_values": {
                        "inline_policy": [],
                        "managed_policy_arns": [],
                        "tags_all": {}
                      }
                    },
                    {
                      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role_policy_attachment.custom[0]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "custom",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "policy_arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                        "role": "ACK-controller-gen3-eks-cluster-IcA3-s3"
                      },
                      "sensitive_values": {}
                    }
                  ],
                  "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"]"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "resource_drift": [
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/ACK-controller-gen3-eks-cluster-IcA3-S3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-S3-controller:S3-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": false,
          "id": "ACK-controller-gen3-eks-cluster-IcA3-S3",
          "inline_policy": [],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "ACK-controller-gen3-eks-cluster-IcA3-S3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": null,
          "tags_all": {},
          "unique_id": "AROAZ5TC42W63TTKPC7LU"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/ACK-controller-gen3-eks-cluster-IcA3-S3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-S3-controller:S3-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": false,
          "id": "ACK-controller-gen3-eks-cluster-IcA3-S3",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonS3FullAccess"
          ],
          "max_session_duration": 3600,
          "name": "ACK-controller-gen3-eks-cluster-IcA3-S3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W63TTKPC7LU"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this[\"cluster_creator\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "this",
      "index": "cluster_creator",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access_entry_arn": "arn:aws:eks:us-east-1:682033468861:access-entry/gen3-eks-cluster-IcA3/user/682033468861/jimi-cto/b2cbbd35-aaa4-016c-eefc-fa68621ec7f2",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "created_at": "2025-06-16T20:25:44Z",
          "id": "gen3-eks-cluster-IcA3:arn:aws:iam::682033468861:user/jimi-cto",
          "kubernetes_groups": [],
          "modified_at": "2025-06-16T20:25:44Z",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "tags": null,
          "tags_all": {},
          "timeouts": null,
          "type": "STANDARD",
          "user_name": "arn:aws:iam::682033468861:user/jimi-cto"
        },
        "after": {
          "access_entry_arn": "arn:aws:eks:us-east-1:682033468861:access-entry/gen3-eks-cluster-IcA3/user/682033468861/jimi-cto/b2cbbd35-aaa4-016c-eefc-fa68621ec7f2",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "created_at": "2025-06-16T20:25:44Z",
          "id": "gen3-eks-cluster-IcA3:arn:aws:iam::682033468861:user/jimi-cto",
          "kubernetes_groups": [],
          "modified_at": "2025-06-16T20:25:44Z",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "tags": {},
          "tags_all": {},
          "timeouts": null,
          "type": "STANDARD",
          "user_name": "arn:aws:iam::682033468861:user/jimi-cto"
        },
        "after_unknown": {},
        "before_sensitive": {
          "kubernetes_groups": [],
          "tags_all": {}
        },
        "after_sensitive": {
          "kubernetes_groups": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this[\"cluster_creator_admin\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_access_policy_association",
      "name": "this",
      "index": "cluster_creator_admin",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access_scope": [
            {
              "namespaces": null,
              "type": "cluster"
            }
          ],
          "associated_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "id": "gen3-eks-cluster-IcA3#arn:aws:iam::682033468861:user/jimi-cto#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "modified_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "timeouts": null
        },
        "after": {
          "access_scope": [
            {
              "namespaces": [],
              "type": "cluster"
            }
          ],
          "associated_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "id": "gen3-eks-cluster-IcA3#arn:aws:iam::682033468861:user/jimi-cto#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "modified_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "access_scope": [
            {}
          ]
        },
        "after_sensitive": {
          "access_scope": [
            {
              "namespaces": []
            }
          ]
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_addon.this[\"aws-ebs-csi-driver\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "index": "aws-ebs-csi-driver",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "addon_name": "aws-ebs-csi-driver",
          "addon_version": "v1.44.0-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:682033468861:addon/gen3-eks-cluster-IcA3/aws-ebs-csi-driver/e6cbbd36-c410-3e2f-5de6-4233993c4e49",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "configuration_values": "",
          "created_at": "2025-06-16T20:28:08Z",
          "id": "gen3-eks-cluster-IcA3:aws-ebs-csi-driver",
          "modified_at": "2025-06-16T20:28:55Z",
          "pod_identity_association": [],
          "preserve": true,
          "resolve_conflicts": null,
          "resolve_conflicts_on_create": "OVERWRITE",
          "resolve_conflicts_on_update": "OVERWRITE",
          "service_account_role_arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "tags": null,
          "tags_all": {},
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          }
        },
        "after": {
          "addon_name": "aws-ebs-csi-driver",
          "addon_version": "v1.44.0-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:682033468861:addon/gen3-eks-cluster-IcA3/aws-ebs-csi-driver/e6cbbd36-c410-3e2f-5de6-4233993c4e49",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "configuration_values": "",
          "created_at": "2025-06-16T20:28:08Z",
          "id": "gen3-eks-cluster-IcA3:aws-ebs-csi-driver",
          "modified_at": "2025-06-16T20:28:55Z",
          "pod_identity_association": [],
          "preserve": true,
          "resolve_conflicts": null,
          "resolve_conflicts_on_create": "OVERWRITE",
          "resolve_conflicts_on_update": "OVERWRITE",
          "service_account_role_arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "tags": {},
          "tags_all": {},
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "pod_identity_association": [],
          "tags_all": {},
          "timeouts": {}
        },
        "after_sensitive": {
          "pod_identity_association": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cluster_encryption[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "attachment_count": 0,
          "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W67QC53WXNQ",
          "tags": null,
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "attachment_count": 1,
          "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W67QC53WXNQ",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.custom[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "custom",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "attachment_count": 0,
          "description": "",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W65IOFAA5VB",
          "tags": null,
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "attachment_count": 1,
          "description": "",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W65IOFAA5VB",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": true,
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "inline_policy": [],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "permissions_boundary": "",
          "tags": null,
          "tags_all": {},
          "unique_id": "AROAZ5TC42W65FK4JT5Z4"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": true,
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
            "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
          ],
          "max_session_duration": 3600,
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W65FK4JT5Z4"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-06c615f0d851c65d4",
          "description": "EKS cluster security group",
          "egress": [],
          "id": "sg-06c615f0d851c65d4",
          "ingress": [],
          "name": "gen3-eks-cluster-IcA3-cluster-2025061620150423990000000c",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-06c615f0d851c65d4",
          "description": "EKS cluster security group",
          "egress": [],
          "id": "sg-06c615f0d851c65d4",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0cd594b7fc78ab201"
              ],
              "self": false,
              "to_port": 443
            }
          ],
          "name": "gen3-eks-cluster-IcA3-cluster-2025061620150423990000000c",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-0cd594b7fc78ab201",
          "description": "EKS node shared security group",
          "egress": [],
          "id": "sg-0cd594b7fc78ab201",
          "ingress": [],
          "name": "gen3-eks-cluster-IcA3-node-2025061620150423980000000b",
          "name_prefix": "gen3-eks-cluster-IcA3-node-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-0cd594b7fc78ab201",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Allow all egress",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0cd594b7fc78ab201",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 4443/tcp webhook",
              "from_port": 4443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 4443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 6443/tcp webhook",
              "from_port": 6443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 6443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 8443/tcp webhook",
              "from_port": 8443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 8443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 9443/tcp webhook",
              "from_port": 9443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 9443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS UDP",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node ingress on ephemeral ports",
              "from_port": 1025,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 65535
            }
          ],
          "name": "gen3-eks-cluster-IcA3-node-2025061620150423980000000b",
          "name_prefix": "gen3-eks-cluster-IcA3-node-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:25:45Z",
          "description": "",
          "force_detach_policies": false,
          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "inline_policy": [],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": null,
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6TOZ3BFEVD"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:25:45Z",
          "description": "",
          "force_detach_policies": false,
          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
          ],
          "max_session_duration": 3600,
          "name": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6TOZ3BFEVD"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_network_acl.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:network-acl/acl-0b068930a56d09c81",
          "default_network_acl_id": "acl-0b068930a56d09c81",
          "egress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "id": "acl-0b068930a56d09c81",
          "ingress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "owner_id": "682033468861",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0b7e06de8d4d99ce8",
            "subnet-0c2c042c7bb820a1d",
            "subnet-0fa7b61e3603a36a6"
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:network-acl/acl-0b068930a56d09c81",
          "default_network_acl_id": "acl-0b068930a56d09c81",
          "egress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "id": "acl-0b068930a56d09c81",
          "ingress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "owner_id": "682033468861",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0b7e06de8d4d99ce8",
            "subnet-0c2c042c7bb820a1d",
            "subnet-0ec84094faab8977b",
            "subnet-0fa7b61e3603a36a6"
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {},
            {}
          ],
          "ingress": [
            {},
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {},
            {}
          ],
          "ingress": [
            {},
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_route_table.default[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0715941188c0806bd",
          "default_route_table_id": "rtb-0715941188c0806bd",
          "id": "rtb-0715941188c0806bd",
          "owner_id": "682033468861",
          "propagating_vgws": null,
          "route": [],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "timeouts": {
            "create": "5m",
            "update": "5m"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0715941188c0806bd",
          "default_route_table_id": "rtb-0715941188c0806bd",
          "id": "rtb-0715941188c0806bd",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "timeouts": {
            "create": "5m",
            "update": "5m"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "address": null,
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "arn": "arn:aws:ec2:us-east-1:682033468861:elastic-ip/eipalloc-0a3d7bc7e2af311bf",
          "associate_with_private_ip": null,
          "association_id": "",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0a3d7bc7e2af311bf",
          "instance": "",
          "ipam_pool_id": null,
          "network_border_group": "us-east-1",
          "network_interface": "",
          "private_dns": null,
          "private_ip": "",
          "ptr_record": "",
          "public_dns": "ec2-52-45-251-205.compute-1.amazonaws.com",
          "public_ip": "52.45.251.205",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after": {
          "address": null,
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "arn": "arn:aws:ec2:us-east-1:682033468861:elastic-ip/eipalloc-0a3d7bc7e2af311bf",
          "associate_with_private_ip": null,
          "association_id": "eipassoc-0c2d7d052e239f642",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0a3d7bc7e2af311bf",
          "instance": "",
          "ipam_pool_id": null,
          "network_border_group": "us-east-1",
          "network_interface": "eni-02ea1b3c0294f49e5",
          "private_dns": "ip-10-0-4-82.ec2.internal",
          "private_ip": "10.0.4.82",
          "ptr_record": "",
          "public_dns": "ec2-52-45-251-205.compute-1.amazonaws.com",
          "public_ip": "52.45.251.205",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "association_id": "eipassoc-0c2d7d052e239f642",
          "connectivity_type": "public",
          "id": "nat-04e02b198cdb07701",
          "network_interface_id": "eni-02ea1b3c0294f49e5",
          "private_ip": "10.0.4.82",
          "public_ip": "52.45.251.205",
          "secondary_allocation_ids": null,
          "secondary_private_ip_address_count": 0,
          "secondary_private_ip_addresses": [],
          "subnet_id": "subnet-0fa7b61e3603a36a6",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null
        },
        "after": {
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "association_id": "eipassoc-0c2d7d052e239f642",
          "connectivity_type": "public",
          "id": "nat-04e02b198cdb07701",
          "network_interface_id": "eni-02ea1b3c0294f49e5",
          "private_ip": "10.0.4.82",
          "public_ip": "52.45.251.205",
          "secondary_allocation_ids": [],
          "secondary_private_ip_address_count": 0,
          "secondary_private_ip_addresses": [],
          "subnet_id": "subnet-0fa7b61e3603a36a6",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "secondary_private_ip_addresses": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "secondary_allocation_ids": [],
          "secondary_private_ip_addresses": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0957d9fc5bc7c2ebe",
          "id": "rtb-0957d9fc5bc7c2ebe",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0957d9fc5bc7c2ebe",
          "id": "rtb-0957d9fc5bc7c2ebe",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "core_network_arn": "",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-04e02b198cdb07701",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0f571cf566c1ca6e7",
          "id": "rtb-0f571cf566c1ca6e7",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0f571cf566c1ca6e7",
          "id": "rtb-0f571cf566c1ca6e7",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "core_network_arn": "",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-08c447be19c8c855b",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "ami_type": "AL2023_x86_64_STANDARD",
          "arn": "arn:aws:eks:us-east-1:682033468861:nodegroup/gen3-eks-cluster-IcA3/ack-controllers-20250616202619872400000015/2ecbbd35-f0d8-c40e-f214-955da595e44f",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "disk_size": 0,
          "force_update_version": null,
          "id": "gen3-eks-cluster-IcA3:ack-controllers-20250616202619872400000015",
          "instance_types": [
            "t3.small"
          ],
          "labels": null,
          "launch_template": [
            {
              "id": "lt-0ab7ec77e56b808a9",
              "name": "one-20250616202614002700000013",
              "version": "1"
            }
          ],
          "node_group_name": "ack-controllers-20250616202619872400000015",
          "node_group_name_prefix": "ack-controllers-",
          "node_repair_config": [],
          "node_role_arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "release_version": "1.33.0-20250610",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-ack-controllers-20250616202619872400000015-2ecbbd35-f0d8-c40e-f214-955da595e44f"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 3,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0ec84094faab8977b"
          ],
          "tags": {
            "Name": "ack-controllers"
          },
          "tags_all": {
            "Name": "ack-controllers"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 33
            }
          ],
          "version": "1.33"
        },
        "after": {
          "ami_type": "AL2023_x86_64_STANDARD",
          "arn": "arn:aws:eks:us-east-1:682033468861:nodegroup/gen3-eks-cluster-IcA3/ack-controllers-20250616202619872400000015/2ecbbd35-f0d8-c40e-f214-955da595e44f",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "disk_size": 0,
          "force_update_version": null,
          "id": "gen3-eks-cluster-IcA3:ack-controllers-20250616202619872400000015",
          "instance_types": [
            "t3.small"
          ],
          "labels": {},
          "launch_template": [
            {
              "id": "lt-0ab7ec77e56b808a9",
              "name": "one-20250616202614002700000013",
              "version": "1"
            }
          ],
          "node_group_name": "ack-controllers-20250616202619872400000015",
          "node_group_name_prefix": "ack-controllers-",
          "node_repair_config": [],
          "node_role_arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "release_version": "1.33.0-20250610",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-ack-controllers-20250616202619872400000015-2ecbbd35-f0d8-c40e-f214-955da595e44f"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 3,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0ec84094faab8977b"
          ],
          "tags": {
            "Name": "ack-controllers"
          },
          "tags_all": {
            "Name": "ack-controllers"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 33
            }
          ],
          "version": "1.33"
        },
        "after_unknown": {},
        "before_sensitive": {
          "instance_types": [
            false
          ],
          "launch_template": [
            {}
          ],
          "node_repair_config": [],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        },
        "after_sensitive": {
          "instance_types": [
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "node_repair_config": [],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "ack-controllers-eks-node-group-20250616201451225000000001",
          "inline_policy": [],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "ack-controllers-eks-node-group-20250616201451225000000001",
          "name_prefix": "ack-controllers-eks-node-group-",
          "path": "/",
          "permissions_boundary": "",
          "tags": null,
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6VA6P3GPDM"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "ack-controllers-eks-node-group-20250616201451225000000001",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "ack-controllers-eks-node-group-20250616201451225000000001",
          "name_prefix": "ack-controllers-eks-node-group-",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6VA6P3GPDM"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:launch-template/lt-0ab7ec77e56b808a9",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for ack-controllers EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0ab7ec77e56b808a9",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": ""
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "one-20250616202614002700000013",
          "name_prefix": "one-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": null,
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "ack-controllers"
              }
            }
          ],
          "tags": null,
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-0cd594b7fc78ab201"
          ]
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:launch-template/lt-0ab7ec77e56b808a9",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for ack-controllers EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0ab7ec77e56b808a9",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": ""
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "one-20250616202614002700000013",
          "name_prefix": "one-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "ack-controllers"
              }
            }
          ],
          "tags": {},
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-0cd594b7fc78ab201"
          ]
        },
        "after_unknown": {},
        "before_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags_all": {},
          "vpc_security_group_ids": [
            false
          ]
        },
        "after_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false
          ]
        }
      }
    }
  ],
  "resource_changes": [
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.helm_release.ack_service_controller[\"s3\"]",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers",
      "mode": "managed",
      "type": "helm_release",
      "name": "ack_service_controller",
      "index": "s3",
      "provider_name": "registry.terraform.io/hashicorp/helm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "atomic": false,
          "chart": "oci://public.ecr.aws/aws-controllers-k8s/s3-chart",
          "cleanup_on_fail": false,
          "create_namespace": true,
          "dependency_update": false,
          "description": null,
          "devel": null,
          "disable_crd_hooks": false,
          "disable_openapi_validation": false,
          "disable_webhooks": false,
          "force_update": false,
          "keyring": null,
          "lint": false,
          "max_history": 0,
          "name": "ack-s3-controller",
          "namespace": "ack-s3-controller",
          "pass_credentials": false,
          "postrender": [],
          "recreate_pods": false,
          "render_subchart_notes": true,
          "replace": false,
          "repository": null,
          "repository_ca_file": null,
          "repository_cert_file": null,
          "repository_key_file": null,
          "repository_password": null,
          "repository_username": null,
          "reset_values": false,
          "reuse_values": false,
          "set": [
            {
              "name": "aws.region",
              "type": "",
              "value": "us-east-1"
            },
            {
              "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
              "type": "",
              "value": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
            },
            {
              "name": "serviceAccount.name",
              "type": "",
              "value": "s3-controller"
            }
          ],
          "set_list": [],
          "set_sensitive": [],
          "skip_crds": false,
          "status": "deployed",
          "timeout": 300,
          "upgrade_install": null,
          "values": null,
          "verify": false,
          "version": "1.1.3",
          "wait": true,
          "wait_for_jobs": false
        },
        "after_unknown": {
          "id": true,
          "manifest": true,
          "metadata": true,
          "postrender": [],
          "set": [
            {},
            {},
            {}
          ],
          "set_list": [],
          "set_sensitive": []
        },
        "before_sensitive": false,
        "after_sensitive": {
          "metadata": [],
          "postrender": [],
          "repository_password": true,
          "set": [
            {},
            {},
            {}
          ],
          "set_list": [],
          "set_sensitive": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.null_resource.helm_registry_login",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers",
      "mode": "managed",
      "type": "null_resource",
      "name": "helm_registry_login",
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "1195991904684845203",
          "triggers": null
        },
        "after": {
          "id": "1195991904684845203",
          "triggers": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.random_string.suffix",
      "module_address": "module.gen3-commons.module.gen3-eks",
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider_name": "registry.terraform.io/hashicorp/random",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "IcA3",
          "keepers": null,
          "length": 4,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "numeric": true,
          "override_special": null,
          "result": "IcA3",
          "special": false,
          "upper": true
        },
        "after": {
          "id": "IcA3",
          "keepers": null,
          "length": 4,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "numeric": true,
          "override_special": null,
          "result": "IcA3",
          "special": false,
          "upper": true
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "delete"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/ACK-controller-gen3-eks-cluster-IcA3-S3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-S3-controller:S3-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": false,
          "id": "ACK-controller-gen3-eks-cluster-IcA3-S3",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonS3FullAccess"
          ],
          "max_session_duration": 3600,
          "name": "ACK-controller-gen3-eks-cluster-IcA3-S3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W63TTKPC7LU"
        },
        "after": null,
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": false
      },
      "action_reason": "delete_because_no_module"
    },
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].aws_iam_role_policy_attachment.custom[0]",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "delete"
        ],
        "before": {
          "id": "ACK-controller-gen3-eks-cluster-IcA3-S3-20250616201451952000000008",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          "role": "ACK-controller-gen3-eks-cluster-IcA3-S3"
        },
        "after": null,
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": false
      },
      "action_reason": "delete_because_no_module"
    },
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-s3-controller:s3-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"}}],\"Version\":\"2012-10-17\"}",
          "description": "",
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "ACK-controller-gen3-eks-cluster-IcA3-s3",
          "path": "/",
          "permissions_boundary": "",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name_prefix": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role_policy_attachment.custom[0]",
      "module_address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          "role": "ACK-controller-gen3-eks-cluster-IcA3-s3"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:us-east-1:682033468861:log-group:/aws/eks/gen3-eks-cluster-IcA3/cluster",
          "id": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
          "kms_key_id": "",
          "log_group_class": "STANDARD",
          "name": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
          "name_prefix": "",
          "retention_in_days": 90,
          "skip_destroy": false,
          "tags": {
            "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
          },
          "tags_all": {
            "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
          }
        },
        "after": {
          "arn": "arn:aws:logs:us-east-1:682033468861:log-group:/aws/eks/gen3-eks-cluster-IcA3/cluster",
          "id": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
          "kms_key_id": "",
          "log_group_class": "STANDARD",
          "name": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
          "name_prefix": "",
          "retention_in_days": 90,
          "skip_destroy": false,
          "tags": {
            "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
          },
          "tags_all": {
            "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this[\"cluster_creator\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "this",
      "index": "cluster_creator",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access_entry_arn": "arn:aws:eks:us-east-1:682033468861:access-entry/gen3-eks-cluster-IcA3/user/682033468861/jimi-cto/b2cbbd35-aaa4-016c-eefc-fa68621ec7f2",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "created_at": "2025-06-16T20:25:44Z",
          "id": "gen3-eks-cluster-IcA3:arn:aws:iam::682033468861:user/jimi-cto",
          "kubernetes_groups": [],
          "modified_at": "2025-06-16T20:25:44Z",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "tags": {},
          "tags_all": {},
          "timeouts": null,
          "type": "STANDARD",
          "user_name": "arn:aws:iam::682033468861:user/jimi-cto"
        },
        "after": {
          "access_entry_arn": "arn:aws:eks:us-east-1:682033468861:access-entry/gen3-eks-cluster-IcA3/user/682033468861/jimi-cto/b2cbbd35-aaa4-016c-eefc-fa68621ec7f2",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "created_at": "2025-06-16T20:25:44Z",
          "id": "gen3-eks-cluster-IcA3:arn:aws:iam::682033468861:user/jimi-cto",
          "kubernetes_groups": [],
          "modified_at": "2025-06-16T20:25:44Z",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "tags": {},
          "tags_all": {},
          "timeouts": null,
          "type": "STANDARD",
          "user_name": "arn:aws:iam::682033468861:user/jimi-cto"
        },
        "after_unknown": {},
        "before_sensitive": {
          "kubernetes_groups": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "kubernetes_groups": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this[\"cluster_creator_admin\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_access_policy_association",
      "name": "this",
      "index": "cluster_creator_admin",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access_scope": [
            {
              "namespaces": [],
              "type": "cluster"
            }
          ],
          "associated_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "id": "gen3-eks-cluster-IcA3#arn:aws:iam::682033468861:user/jimi-cto#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "modified_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "timeouts": null
        },
        "after": {
          "access_scope": [
            {
              "namespaces": [],
              "type": "cluster"
            }
          ],
          "associated_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "id": "gen3-eks-cluster-IcA3#arn:aws:iam::682033468861:user/jimi-cto#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "modified_at": "2025-06-16 20:25:44.896 +0000 UTC",
          "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "access_scope": [
            {
              "namespaces": []
            }
          ]
        },
        "after_sensitive": {
          "access_scope": [
            {
              "namespaces": []
            }
          ]
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_addon.this[\"aws-ebs-csi-driver\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "index": "aws-ebs-csi-driver",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "addon_name": "aws-ebs-csi-driver",
          "addon_version": "v1.44.0-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:682033468861:addon/gen3-eks-cluster-IcA3/aws-ebs-csi-driver/e6cbbd36-c410-3e2f-5de6-4233993c4e49",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "configuration_values": "",
          "created_at": "2025-06-16T20:28:08Z",
          "id": "gen3-eks-cluster-IcA3:aws-ebs-csi-driver",
          "modified_at": "2025-06-16T20:28:55Z",
          "pod_identity_association": [],
          "preserve": true,
          "resolve_conflicts": null,
          "resolve_conflicts_on_create": "OVERWRITE",
          "resolve_conflicts_on_update": "OVERWRITE",
          "service_account_role_arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "tags": {},
          "tags_all": {},
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          }
        },
        "after": {
          "addon_name": "aws-ebs-csi-driver",
          "addon_version": "v1.44.0-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:682033468861:addon/gen3-eks-cluster-IcA3/aws-ebs-csi-driver/e6cbbd36-c410-3e2f-5de6-4233993c4e49",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "configuration_values": "",
          "created_at": "2025-06-16T20:28:08Z",
          "id": "gen3-eks-cluster-IcA3:aws-ebs-csi-driver",
          "modified_at": "2025-06-16T20:28:55Z",
          "pod_identity_association": [],
          "preserve": true,
          "resolve_conflicts": null,
          "resolve_conflicts_on_create": "OVERWRITE",
          "resolve_conflicts_on_update": "OVERWRITE",
          "service_account_role_arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "tags": {},
          "tags_all": {},
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "pod_identity_association": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        },
        "after_sensitive": {
          "pod_identity_association": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access_config": [
            {
              "authentication_mode": "API_AND_CONFIG_MAP",
              "bootstrap_cluster_creator_admin_permissions": false
            }
          ],
          "arn": "arn:aws:eks:us-east-1:682033468861:cluster/gen3-eks-cluster-IcA3",
          "bootstrap_self_managed_addons": true,
          "certificate_authority": [
            {
              "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
          ],
          "cluster_id": null,
          "compute_config": [],
          "created_at": "2025-06-16T20:15:15Z",
          "enabled_cluster_log_types": [
            "api",
            "audit",
            "authenticator"
          ],
          "encryption_config": [
            {
              "provider": [
                {
                  "key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b"
                }
              ],
              "resources": [
                "secrets"
              ]
            }
          ],
          "endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
          "force_update_version": null,
          "id": "gen3-eks-cluster-IcA3",
          "identity": [
            {
              "oidc": [
                {
                  "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                }
              ]
            }
          ],
          "kubernetes_network_config": [
            {
              "elastic_load_balancing": [
                {
                  "enabled": false
                }
              ],
              "ip_family": "ipv4",
              "service_ipv4_cidr": "172.20.0.0/16",
              "service_ipv6_cidr": ""
            }
          ],
          "name": "gen3-eks-cluster-IcA3",
          "outpost_config": [],
          "platform_version": "eks.5",
          "remote_network_config": [],
          "role_arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "status": "ACTIVE",
          "storage_config": [],
          "tags": {
            "terraform-aws-modules": "eks"
          },
          "tags_all": {
            "terraform-aws-modules": "eks"
          },
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "upgrade_policy": [
            {
              "support_type": "EXTENDED"
            }
          ],
          "version": "1.33",
          "vpc_config": [
            {
              "cluster_security_group_id": "sg-0464ceb332fd5475e",
              "endpoint_private_access": true,
              "endpoint_public_access": true,
              "public_access_cidrs": [
                "0.0.0.0/0"
              ],
              "security_group_ids": [
                "sg-06c615f0d851c65d4"
              ],
              "subnet_ids": [
                "subnet-059ded1cc017cf540",
                "subnet-05c7ecccf262ba5c7",
                "subnet-0ec84094faab8977b"
              ],
              "vpc_id": "vpc-010949b4d7c177dee"
            }
          ],
          "zonal_shift_config": []
        },
        "after": {
          "access_config": [
            {
              "authentication_mode": "API_AND_CONFIG_MAP",
              "bootstrap_cluster_creator_admin_permissions": false
            }
          ],
          "arn": "arn:aws:eks:us-east-1:682033468861:cluster/gen3-eks-cluster-IcA3",
          "bootstrap_self_managed_addons": true,
          "certificate_authority": [
            {
              "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
          ],
          "cluster_id": null,
          "compute_config": [],
          "created_at": "2025-06-16T20:15:15Z",
          "enabled_cluster_log_types": [
            "api",
            "audit",
            "authenticator"
          ],
          "encryption_config": [
            {
              "provider": [
                {
                  "key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b"
                }
              ],
              "resources": [
                "secrets"
              ]
            }
          ],
          "endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
          "force_update_version": null,
          "id": "gen3-eks-cluster-IcA3",
          "identity": [
            {
              "oidc": [
                {
                  "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                }
              ]
            }
          ],
          "kubernetes_network_config": [
            {
              "elastic_load_balancing": [
                {
                  "enabled": false
                }
              ],
              "ip_family": "ipv4",
              "service_ipv4_cidr": "172.20.0.0/16",
              "service_ipv6_cidr": ""
            }
          ],
          "name": "gen3-eks-cluster-IcA3",
          "outpost_config": [],
          "platform_version": "eks.5",
          "remote_network_config": [],
          "role_arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "status": "ACTIVE",
          "storage_config": [],
          "tags": {
            "terraform-aws-modules": "eks"
          },
          "tags_all": {
            "terraform-aws-modules": "eks"
          },
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "upgrade_policy": [
            {
              "support_type": "EXTENDED"
            }
          ],
          "version": "1.33",
          "vpc_config": [
            {
              "cluster_security_group_id": "sg-0464ceb332fd5475e",
              "endpoint_private_access": true,
              "endpoint_public_access": true,
              "public_access_cidrs": [
                "0.0.0.0/0"
              ],
              "security_group_ids": [
                "sg-06c615f0d851c65d4"
              ],
              "subnet_ids": [
                "subnet-059ded1cc017cf540",
                "subnet-05c7ecccf262ba5c7",
                "subnet-0ec84094faab8977b"
              ],
              "vpc_id": "vpc-010949b4d7c177dee"
            }
          ],
          "zonal_shift_config": []
        },
        "after_unknown": {},
        "before_sensitive": {
          "access_config": [
            {}
          ],
          "certificate_authority": [
            {}
          ],
          "compute_config": [],
          "enabled_cluster_log_types": [
            false,
            false,
            false
          ],
          "encryption_config": [
            {
              "provider": [
                {}
              ],
              "resources": [
                false
              ]
            }
          ],
          "identity": [
            {
              "oidc": [
                {}
              ]
            }
          ],
          "kubernetes_network_config": [
            {
              "elastic_load_balancing": [
                {}
              ]
            }
          ],
          "outpost_config": [],
          "remote_network_config": [],
          "storage_config": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "upgrade_policy": [
            {}
          ],
          "vpc_config": [
            {
              "public_access_cidrs": [
                false
              ],
              "security_group_ids": [
                false
              ],
              "subnet_ids": [
                false,
                false,
                false
              ]
            }
          ],
          "zonal_shift_config": []
        },
        "after_sensitive": {
          "access_config": [
            {}
          ],
          "certificate_authority": [
            {}
          ],
          "compute_config": [],
          "enabled_cluster_log_types": [
            false,
            false,
            false
          ],
          "encryption_config": [
            {
              "provider": [
                {}
              ],
              "resources": [
                false
              ]
            }
          ],
          "identity": [
            {
              "oidc": [
                {}
              ]
            }
          ],
          "kubernetes_network_config": [
            {
              "elastic_load_balancing": [
                {}
              ]
            }
          ],
          "outpost_config": [],
          "remote_network_config": [],
          "storage_config": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "upgrade_policy": [
            {}
          ],
          "vpc_config": [
            {
              "public_access_cidrs": [
                false
              ],
              "security_group_ids": [
                false
              ],
              "subnet_ids": [
                false,
                false,
                false
              ]
            }
          ],
          "zonal_shift_config": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
          "client_id_list": [
            "sts.amazonaws.com"
          ],
          "id": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-eks-irsa"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-eks-irsa"
          },
          "thumbprint_list": [
            "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
          ],
          "url": "oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
          "client_id_list": [
            "sts.amazonaws.com"
          ],
          "id": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-eks-irsa"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-eks-irsa"
          },
          "thumbprint_list": [
            "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
          ],
          "url": "oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
        },
        "after_unknown": {},
        "before_sensitive": {
          "client_id_list": [
            false
          ],
          "tags": {},
          "tags_all": {},
          "thumbprint_list": [
            false
          ]
        },
        "after_sensitive": {
          "client_id_list": [
            false
          ],
          "tags": {},
          "tags_all": {},
          "thumbprint_list": [
            false
          ]
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cluster_encryption[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "attachment_count": 1,
          "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W67QC53WXNQ",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "attachment_count": 1,
          "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W67QC53WXNQ",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.custom[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "custom",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "attachment_count": 1,
          "description": "",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W65IOFAA5VB",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "attachment_count": 1,
          "description": "",
          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPAZ5TC42W65IOFAA5VB",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": true,
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
            "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
          ],
          "max_session_duration": 3600,
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W65FK4JT5Z4"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "",
          "force_detach_policies": true,
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
            "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
          ],
          "max_session_duration": 3600,
          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W65FK4JT5Z4"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201513082900000011",
          "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201513082900000011",
          "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.custom[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451954000000009",
          "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451954000000009",
          "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSClusterPolicy\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "AmazonEKSClusterPolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451869700000004",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451869700000004",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSVPCResourceController\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "AmazonEKSVPCResourceController",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451890700000005",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after": {
          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451890700000005",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-06c615f0d851c65d4",
          "description": "EKS cluster security group",
          "egress": [],
          "id": "sg-06c615f0d851c65d4",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0cd594b7fc78ab201"
              ],
              "self": false,
              "to_port": 443
            }
          ],
          "name": "gen3-eks-cluster-IcA3-cluster-2025061620150423990000000c",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-06c615f0d851c65d4",
          "description": "EKS cluster security group",
          "egress": [],
          "id": "sg-06c615f0d851c65d4",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0cd594b7fc78ab201"
              ],
              "self": false,
              "to_port": 443
            }
          ],
          "name": "gen3-eks-cluster-IcA3-cluster-2025061620150423990000000c",
          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-cluster"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-0cd594b7fc78ab201",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Allow all egress",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0cd594b7fc78ab201",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 4443/tcp webhook",
              "from_port": 4443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 4443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 6443/tcp webhook",
              "from_port": 6443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 6443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 8443/tcp webhook",
              "from_port": 8443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 8443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 9443/tcp webhook",
              "from_port": 9443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 9443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS UDP",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node ingress on ephemeral ports",
              "from_port": 1025,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 65535
            }
          ],
          "name": "gen3-eks-cluster-IcA3-node-2025061620150423980000000b",
          "name_prefix": "gen3-eks-cluster-IcA3-node-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-0cd594b7fc78ab201",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Allow all egress",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0cd594b7fc78ab201",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 4443/tcp webhook",
              "from_port": 4443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 4443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 6443/tcp webhook",
              "from_port": 6443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 6443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 8443/tcp webhook",
              "from_port": 8443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 8443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node 9443/tcp webhook",
              "from_port": 9443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 9443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-06c615f0d851c65d4"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS UDP",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node ingress on ephemeral ports",
              "from_port": 1025,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 65535
            }
          ],
          "name": "gen3-eks-cluster-IcA3-node-2025061620150423980000000b",
          "name_prefix": "gen3-eks-cluster-IcA3-node-",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-IcA3-node",
            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "index": "ingress_nodes_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Node groups to cluster API",
          "from_port": 443,
          "id": "sgrule-3666249114",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "security_group_id": "sg-06c615f0d851c65d4",
          "security_group_rule_id": "sgr-0607bd74ffa392727",
          "self": false,
          "source_security_group_id": "sg-0cd594b7fc78ab201",
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Node groups to cluster API",
          "from_port": 443,
          "id": "sgrule-3666249114",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "security_group_id": "sg-06c615f0d851c65d4",
          "security_group_rule_id": "sgr-0607bd74ffa392727",
          "self": false,
          "source_security_group_id": "sg-0cd594b7fc78ab201",
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"egress_all\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_all",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Allow all egress",
          "from_port": 0,
          "id": "sgrule-2494722700",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0380db23c41187dc0",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 0,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Allow all egress",
          "from_port": 0,
          "id": "sgrule-2494722700",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0380db23c41187dc0",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 0,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [
            false
          ],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [
            false
          ],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Cluster API to node groups",
          "from_port": 443,
          "id": "sgrule-4180634791",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-094657b0de983f2ae",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Cluster API to node groups",
          "from_port": 443,
          "id": "sgrule-4180634791",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-094657b0de983f2ae",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_4443_webhook\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_4443_webhook",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Cluster API to node 4443/tcp webhook",
          "from_port": 4443,
          "id": "sgrule-3638363368",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0dedf2fad28a414b2",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 4443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Cluster API to node 4443/tcp webhook",
          "from_port": 4443,
          "id": "sgrule-3638363368",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0dedf2fad28a414b2",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 4443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_6443_webhook\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_6443_webhook",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Cluster API to node 6443/tcp webhook",
          "from_port": 6443,
          "id": "sgrule-295658366",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0c28b8c04718e2fcd",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 6443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Cluster API to node 6443/tcp webhook",
          "from_port": 6443,
          "id": "sgrule-295658366",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0c28b8c04718e2fcd",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 6443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_8443_webhook\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_8443_webhook",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Cluster API to node 8443/tcp webhook",
          "from_port": 8443,
          "id": "sgrule-46358367",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0a9bcd456895cc071",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 8443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Cluster API to node 8443/tcp webhook",
          "from_port": 8443,
          "id": "sgrule-46358367",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0a9bcd456895cc071",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 8443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_9443_webhook\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_9443_webhook",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Cluster API to node 9443/tcp webhook",
          "from_port": 9443,
          "id": "sgrule-1717726356",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0a2a591ae92d34cee",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 9443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Cluster API to node 9443/tcp webhook",
          "from_port": 9443,
          "id": "sgrule-1717726356",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0a2a591ae92d34cee",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 9443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_kubelet",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "id": "sgrule-1462978612",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-03f20f90bc6f397cb",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 10250,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "id": "sgrule-1462978612",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-03f20f90bc6f397cb",
          "self": false,
          "source_security_group_id": "sg-06c615f0d851c65d4",
          "timeouts": null,
          "to_port": 10250,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_nodes_ephemeral\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_nodes_ephemeral",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Node to node ingress on ephemeral ports",
          "from_port": 1025,
          "id": "sgrule-2253037681",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-058553ab1db369e91",
          "self": true,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 65535,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Node to node ingress on ephemeral ports",
          "from_port": 1025,
          "id": "sgrule-2253037681",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-058553ab1db369e91",
          "self": true,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 65535,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_self_coredns_tcp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-3526934040",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-08f31c37a0598ab94",
          "self": true,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 53,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-3526934040",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-08f31c37a0598ab94",
          "self": true,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 53,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_self_coredns_udp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": null,
          "description": "Node to node CoreDNS UDP",
          "from_port": 53,
          "id": "sgrule-1986469367",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0005e5329ad501247",
          "self": true,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 53,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": null,
          "description": "Node to node CoreDNS UDP",
          "from_port": 53,
          "id": "sgrule-1986469367",
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-0cd594b7fc78ab201",
          "security_group_rule_id": "sgr-0005e5329ad501247",
          "self": true,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 53,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/time",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "create_duration": "30s",
          "destroy_duration": null,
          "id": "2025-06-16T20:26:13Z",
          "triggers": {
            "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
            "cluster_endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
            "cluster_name": "gen3-eks-cluster-IcA3",
            "cluster_service_cidr": "172.20.0.0/16",
            "cluster_version": "1.33"
          }
        },
        "after": {
          "create_duration": "30s",
          "destroy_duration": null,
          "id": "2025-06-16T20:26:13Z",
          "triggers": {
            "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
            "cluster_endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
            "cluster_name": "gen3-eks-cluster-IcA3",
            "cluster_service_cidr": "172.20.0.0/16",
            "cluster_version": "1.33"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "triggers": {}
        },
        "after_sensitive": {
          "triggers": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:25:45Z",
          "description": "",
          "force_detach_policies": false,
          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
          ],
          "max_session_duration": 3600,
          "name": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6TOZ3BFEVD"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:25:45Z",
          "description": "",
          "force_detach_policies": false,
          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
          ],
          "max_session_duration": 3600,
          "name": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6TOZ3BFEVD"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3-20250616202545891800000012",
          "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
          "role": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3"
        },
        "after": {
          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3-20250616202545891800000012",
          "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
          "role": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_network_acl.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:network-acl/acl-0b068930a56d09c81",
          "default_network_acl_id": "acl-0b068930a56d09c81",
          "egress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "id": "acl-0b068930a56d09c81",
          "ingress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "owner_id": "682033468861",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0b7e06de8d4d99ce8",
            "subnet-0c2c042c7bb820a1d",
            "subnet-0ec84094faab8977b",
            "subnet-0fa7b61e3603a36a6"
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:network-acl/acl-0b068930a56d09c81",
          "default_network_acl_id": "acl-0b068930a56d09c81",
          "egress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "id": "acl-0b068930a56d09c81",
          "ingress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": 0,
              "icmp_type": 0,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "owner_id": "682033468861",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0b7e06de8d4d99ce8",
            "subnet-0c2c042c7bb820a1d",
            "subnet-0ec84094faab8977b",
            "subnet-0fa7b61e3603a36a6"
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {},
            {}
          ],
          "ingress": [
            {},
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {},
            {}
          ],
          "ingress": [
            {},
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_route_table.default[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0715941188c0806bd",
          "default_route_table_id": "rtb-0715941188c0806bd",
          "id": "rtb-0715941188c0806bd",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "timeouts": {
            "create": "5m",
            "update": "5m"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0715941188c0806bd",
          "default_route_table_id": "rtb-0715941188c0806bd",
          "id": "rtb-0715941188c0806bd",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "timeouts": {
            "create": "5m",
            "update": "5m"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_security_group.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-01ed6e2c39aec4b16",
          "description": "default VPC security group",
          "egress": [],
          "id": "sg-01ed6e2c39aec4b16",
          "ingress": [],
          "name": "default",
          "name_prefix": "",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-01ed6e2c39aec4b16",
          "description": "default VPC security group",
          "egress": [],
          "id": "sg-01ed6e2c39aec4b16",
          "ingress": [],
          "name": "default",
          "name_prefix": "",
          "owner_id": "682033468861",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-default"
          },
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address": null,
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "arn": "arn:aws:ec2:us-east-1:682033468861:elastic-ip/eipalloc-0a3d7bc7e2af311bf",
          "associate_with_private_ip": null,
          "association_id": "eipassoc-0c2d7d052e239f642",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0a3d7bc7e2af311bf",
          "instance": "",
          "ipam_pool_id": null,
          "network_border_group": "us-east-1",
          "network_interface": "eni-02ea1b3c0294f49e5",
          "private_dns": "ip-10-0-4-82.ec2.internal",
          "private_ip": "10.0.4.82",
          "ptr_record": "",
          "public_dns": "ec2-52-45-251-205.compute-1.amazonaws.com",
          "public_ip": "52.45.251.205",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after": {
          "address": null,
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "arn": "arn:aws:ec2:us-east-1:682033468861:elastic-ip/eipalloc-0a3d7bc7e2af311bf",
          "associate_with_private_ip": null,
          "association_id": "eipassoc-0c2d7d052e239f642",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0a3d7bc7e2af311bf",
          "instance": "",
          "ipam_pool_id": null,
          "network_border_group": "us-east-1",
          "network_interface": "eni-02ea1b3c0294f49e5",
          "private_dns": "ip-10-0-4-82.ec2.internal",
          "private_ip": "10.0.4.82",
          "ptr_record": "",
          "public_dns": "ec2-52-45-251-205.compute-1.amazonaws.com",
          "public_ip": "52.45.251.205",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:internet-gateway/igw-08c447be19c8c855b",
          "id": "igw-08c447be19c8c855b",
          "owner_id": "682033468861",
          "tags": {
            "Name": "gen3-eks-cluster-vpc"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:internet-gateway/igw-08c447be19c8c855b",
          "id": "igw-08c447be19c8c855b",
          "owner_id": "682033468861",
          "tags": {
            "Name": "gen3-eks-cluster-vpc"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "association_id": "eipassoc-0c2d7d052e239f642",
          "connectivity_type": "public",
          "id": "nat-04e02b198cdb07701",
          "network_interface_id": "eni-02ea1b3c0294f49e5",
          "private_ip": "10.0.4.82",
          "public_ip": "52.45.251.205",
          "secondary_allocation_ids": [],
          "secondary_private_ip_address_count": 0,
          "secondary_private_ip_addresses": [],
          "subnet_id": "subnet-0fa7b61e3603a36a6",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null
        },
        "after": {
          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
          "association_id": "eipassoc-0c2d7d052e239f642",
          "connectivity_type": "public",
          "id": "nat-04e02b198cdb07701",
          "network_interface_id": "eni-02ea1b3c0294f49e5",
          "private_ip": "10.0.4.82",
          "public_ip": "52.45.251.205",
          "secondary_allocation_ids": [],
          "secondary_private_ip_address_count": 0,
          "secondary_private_ip_addresses": [],
          "subnet_id": "subnet-0fa7b61e3603a36a6",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-us-east-1a"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "secondary_allocation_ids": [],
          "secondary_private_ip_addresses": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "secondary_allocation_ids": [],
          "secondary_private_ip_addresses": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.private_nat_gateway[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "carrier_gateway_id": "",
          "core_network_arn": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-0957d9fc5bc7c2ebe1080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-04e02b198cdb07701",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after": {
          "carrier_gateway_id": "",
          "core_network_arn": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-0957d9fc5bc7c2ebe1080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-04e02b198cdb07701",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "timeouts": {}
        },
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.public_internet_gateway[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "carrier_gateway_id": "",
          "core_network_arn": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-08c447be19c8c855b",
          "id": "r-rtb-0f571cf566c1ca6e71080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after": {
          "carrier_gateway_id": "",
          "core_network_arn": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-08c447be19c8c855b",
          "id": "r-rtb-0f571cf566c1ca6e71080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "timeouts": {}
        },
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0957d9fc5bc7c2ebe",
          "id": "rtb-0957d9fc5bc7c2ebe",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "core_network_arn": "",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-04e02b198cdb07701",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0957d9fc5bc7c2ebe",
          "id": "rtb-0957d9fc5bc7c2ebe",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "core_network_arn": "",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-04e02b198cdb07701",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0f571cf566c1ca6e7",
          "id": "rtb-0f571cf566c1ca6e7",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "core_network_arn": "",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-08c447be19c8c855b",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0f571cf566c1ca6e7",
          "id": "rtb-0f571cf566c1ca6e7",
          "owner_id": "682033468861",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "core_network_arn": "",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-08c447be19c8c855b",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0b4c06bbd0023a7b7",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "subnet_id": "subnet-05c7ecccf262ba5c7",
          "timeouts": null
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0b4c06bbd0023a7b7",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "subnet_id": "subnet-05c7ecccf262ba5c7",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[1]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-065ccdb63e53203b2",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "subnet_id": "subnet-059ded1cc017cf540",
          "timeouts": null
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-065ccdb63e53203b2",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "subnet_id": "subnet-059ded1cc017cf540",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[2]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0d6af0aff28a09621",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "subnet_id": "subnet-0ec84094faab8977b",
          "timeouts": null
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0d6af0aff28a09621",
          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
          "subnet_id": "subnet-0ec84094faab8977b",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0e406b7695169580a",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "subnet_id": "subnet-0fa7b61e3603a36a6",
          "timeouts": null
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0e406b7695169580a",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "subnet_id": "subnet-0fa7b61e3603a36a6",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[1]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-026e02d338322a78b",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "subnet_id": "subnet-0b7e06de8d4d99ce8",
          "timeouts": null
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-026e02d338322a78b",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "subnet_id": "subnet-0b7e06de8d4d99ce8",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[2]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-050de29121729d099",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "subnet_id": "subnet-0c2c042c7bb820a1d",
          "timeouts": null
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-050de29121729d099",
          "route_table_id": "rtb-0f571cf566c1ca6e7",
          "subnet_id": "subnet-0c2c042c7bb820a1d",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-05c7ecccf262ba5c7",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-05c7ecccf262ba5c7",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-05c7ecccf262ba5c7",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-05c7ecccf262ba5c7",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[1]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-059ded1cc017cf540",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.2.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-059ded1cc017cf540",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-059ded1cc017cf540",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.2.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-059ded1cc017cf540",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[2]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0ec84094faab8977b",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.3.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0ec84094faab8977b",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0ec84094faab8977b",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.3.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0ec84094faab8977b",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0fa7b61e3603a36a6",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.4.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0fa7b61e3603a36a6",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0fa7b61e3603a36a6",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.4.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0fa7b61e3603a36a6",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[1]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0b7e06de8d4d99ce8",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.5.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0b7e06de8d4d99ce8",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0b7e06de8d4d99ce8",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.5.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0b7e06de8d4d99ce8",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[2]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0c2c042c7bb820a1d",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.6.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0c2c042c7bb820a1d",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0c2c042c7bb820a1d",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.6.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_lni_at_device_index": 0,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0c2c042c7bb820a1d",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "682033468861",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-010949b4d7c177dee"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:vpc/vpc-010949b4d7c177dee",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "default_network_acl_id": "acl-0b068930a56d09c81",
          "default_route_table_id": "rtb-0715941188c0806bd",
          "default_security_group_id": "sg-01ed6e2c39aec4b16",
          "dhcp_options_id": "dopt-0ab4ec95fccd1714a",
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "enable_network_address_usage_metrics": false,
          "id": "vpc-010949b4d7c177dee",
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_network_border_group": "",
          "ipv6_ipam_pool_id": "",
          "ipv6_netmask_length": 0,
          "main_route_table_id": "rtb-0715941188c0806bd",
          "owner_id": "682033468861",
          "tags": {
            "Name": "gen3-eks-cluster-vpc"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc"
          }
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:vpc/vpc-010949b4d7c177dee",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "default_network_acl_id": "acl-0b068930a56d09c81",
          "default_route_table_id": "rtb-0715941188c0806bd",
          "default_security_group_id": "sg-01ed6e2c39aec4b16",
          "dhcp_options_id": "dopt-0ab4ec95fccd1714a",
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "enable_network_address_usage_metrics": false,
          "id": "vpc-010949b4d7c177dee",
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_network_border_group": "",
          "ipv6_ipam_pool_id": "",
          "ipv6_netmask_length": 0,
          "main_route_table_id": "rtb-0715941188c0806bd",
          "owner_id": "682033468861",
          "tags": {
            "Name": "gen3-eks-cluster-vpc"
          },
          "tags_all": {
            "Name": "gen3-eks-cluster-vpc"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "ami_type": "AL2023_x86_64_STANDARD",
          "arn": "arn:aws:eks:us-east-1:682033468861:nodegroup/gen3-eks-cluster-IcA3/ack-controllers-20250616202619872400000015/2ecbbd35-f0d8-c40e-f214-955da595e44f",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "disk_size": 0,
          "force_update_version": null,
          "id": "gen3-eks-cluster-IcA3:ack-controllers-20250616202619872400000015",
          "instance_types": [
            "t3.small"
          ],
          "labels": {},
          "launch_template": [
            {
              "id": "lt-0ab7ec77e56b808a9",
              "name": "one-20250616202614002700000013",
              "version": "1"
            }
          ],
          "node_group_name": "ack-controllers-20250616202619872400000015",
          "node_group_name_prefix": "ack-controllers-",
          "node_repair_config": [],
          "node_role_arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "release_version": "1.33.0-20250610",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-ack-controllers-20250616202619872400000015-2ecbbd35-f0d8-c40e-f214-955da595e44f"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 3,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0ec84094faab8977b"
          ],
          "tags": {
            "Name": "ack-controllers"
          },
          "tags_all": {
            "Name": "ack-controllers"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 33
            }
          ],
          "version": "1.33"
        },
        "after": {
          "ami_type": "AL2023_x86_64_STANDARD",
          "arn": "arn:aws:eks:us-east-1:682033468861:nodegroup/gen3-eks-cluster-IcA3/ack-controllers-20250616202619872400000015/2ecbbd35-f0d8-c40e-f214-955da595e44f",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "gen3-eks-cluster-IcA3",
          "disk_size": 0,
          "force_update_version": null,
          "id": "gen3-eks-cluster-IcA3:ack-controllers-20250616202619872400000015",
          "instance_types": [
            "t3.small"
          ],
          "labels": {},
          "launch_template": [
            {
              "id": "lt-0ab7ec77e56b808a9",
              "name": "one-20250616202614002700000013",
              "version": "1"
            }
          ],
          "node_group_name": "ack-controllers-20250616202619872400000015",
          "node_group_name_prefix": "ack-controllers-",
          "node_repair_config": [],
          "node_role_arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "release_version": "1.33.0-20250610",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-ack-controllers-20250616202619872400000015-2ecbbd35-f0d8-c40e-f214-955da595e44f"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 3,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-059ded1cc017cf540",
            "subnet-05c7ecccf262ba5c7",
            "subnet-0ec84094faab8977b"
          ],
          "tags": {
            "Name": "ack-controllers"
          },
          "tags_all": {
            "Name": "ack-controllers"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 0,
              "max_unavailable_percentage": 33
            }
          ],
          "version": "1.33"
        },
        "after_unknown": {},
        "before_sensitive": {
          "instance_types": [
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "node_repair_config": [],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        },
        "after_sensitive": {
          "instance_types": [
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "node_repair_config": [],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "ack-controllers-eks-node-group-20250616201451225000000001",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "ack-controllers-eks-node-group-20250616201451225000000001",
          "name_prefix": "ack-controllers-eks-node-group-",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6VA6P3GPDM"
        },
        "after": {
          "arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-06-16T20:14:51Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "ack-controllers-eks-node-group-20250616201451225000000001",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "ack-controllers-eks-node-group-20250616201451225000000001",
          "name_prefix": "ack-controllers-eks-node-group-",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAZ5TC42W6VA6P3GPDM"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEC2ContainerRegistryReadOnly\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "AmazonEC2ContainerRegistryReadOnly",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451895700000006",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "ack-controllers-eks-node-group-20250616201451225000000001"
        },
        "after": {
          "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451895700000006",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "ack-controllers-eks-node-group-20250616201451225000000001"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEKSWorkerNodePolicy\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "AmazonEKSWorkerNodePolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "ack-controllers-eks-node-group-20250616201451225000000001-2025061620145196900000000a",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "ack-controllers-eks-node-group-20250616201451225000000001"
        },
        "after": {
          "id": "ack-controllers-eks-node-group-20250616201451225000000001-2025061620145196900000000a",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "ack-controllers-eks-node-group-20250616201451225000000001"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEKS_CNI_Policy\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "AmazonEKS_CNI_Policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451932800000007",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "ack-controllers-eks-node-group-20250616201451225000000001"
        },
        "after": {
          "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451932800000007",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "ack-controllers-eks-node-group-20250616201451225000000001"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:launch-template/lt-0ab7ec77e56b808a9",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for ack-controllers EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0ab7ec77e56b808a9",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": ""
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "one-20250616202614002700000013",
          "name_prefix": "one-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "ack-controllers"
              }
            }
          ],
          "tags": {},
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-0cd594b7fc78ab201"
          ]
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:682033468861:launch-template/lt-0ab7ec77e56b808a9",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for ack-controllers EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0ab7ec77e56b808a9",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": ""
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "one-20250616202614002700000013",
          "name_prefix": "one-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "ack-controllers"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "ack-controllers"
              }
            }
          ],
          "tags": {},
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-0cd594b7fc78ab201"
          ]
        },
        "after_unknown": {},
        "before_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false
          ]
        },
        "after_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false
          ]
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_alias.this[\"cluster\"]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "index": "cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:kms:us-east-1:682033468861:alias/eks/gen3-eks-cluster-IcA3",
          "id": "alias/eks/gen3-eks-cluster-IcA3",
          "name": "alias/eks/gen3-eks-cluster-IcA3",
          "name_prefix": "",
          "target_key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
          "target_key_id": "9961c795-4032-4548-8e77-d961338d308b"
        },
        "after": {
          "arn": "arn:aws:kms:us-east-1:682033468861:alias/eks/gen3-eks-cluster-IcA3",
          "id": "alias/eks/gen3-eks-cluster-IcA3",
          "name": "alias/eks/gen3-eks-cluster-IcA3",
          "name_prefix": "",
          "target_key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
          "target_key_id": "9961c795-4032-4548-8e77-d961338d308b"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this[0]",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
          "bypass_policy_lockout_safety_check": false,
          "custom_key_store_id": "",
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": null,
          "description": "gen3-eks-cluster-IcA3 cluster encryption key",
          "enable_key_rotation": true,
          "id": "9961c795-4032-4548-8e77-d961338d308b",
          "is_enabled": true,
          "key_id": "9961c795-4032-4548-8e77-d961338d308b",
          "key_usage": "ENCRYPT_DECRYPT",
          "multi_region": false,
          "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:user/jimi-cto\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
          "rotation_period_in_days": 365,
          "tags": {
            "terraform-aws-modules": "eks"
          },
          "tags_all": {
            "terraform-aws-modules": "eks"
          },
          "timeouts": null,
          "xks_key_id": ""
        },
        "after": {
          "arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
          "bypass_policy_lockout_safety_check": false,
          "custom_key_store_id": "",
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": null,
          "description": "gen3-eks-cluster-IcA3 cluster encryption key",
          "enable_key_rotation": true,
          "id": "9961c795-4032-4548-8e77-d961338d308b",
          "is_enabled": true,
          "key_id": "9961c795-4032-4548-8e77-d961338d308b",
          "key_usage": "ENCRYPT_DECRYPT",
          "multi_region": false,
          "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:user/jimi-cto\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
          "rotation_period_in_days": 365,
          "tags": {
            "terraform-aws-modules": "eks"
          },
          "tags_all": {
            "terraform-aws-modules": "eks"
          },
          "timeouts": null,
          "xks_key_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
      "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "1205457099937568073",
          "triggers": null
        },
        "after": {
          "id": "1205457099937568073",
          "triggers": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    }
  ],
  "output_changes": {
    "ack_controller_role_arns": {
      "actions": [
        "update"
      ],
      "before": {
        "S3": "arn:aws:iam::682033468861:role/ACK-controller-gen3-eks-cluster-IcA3-S3"
      },
      "after": {},
      "after_unknown": {
        "s3": true
      },
      "before_sensitive": false,
      "after_sensitive": false
    },
    "ack_controller_statuses": {
      "actions": [
        "update"
      ],
      "before": {
        "S3": "deployed"
      },
      "after": {
        "s3": "deployed"
      },
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_endpoint": {
      "actions": [
        "no-op"
      ],
      "before": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
      "after": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_name": {
      "actions": [
        "no-op"
      ],
      "before": "gen3-eks-cluster-IcA3",
      "after": "gen3-eks-cluster-IcA3",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_security_group_id": {
      "actions": [
        "no-op"
      ],
      "before": "sg-06c615f0d851c65d4",
      "after": "sg-06c615f0d851c65d4",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "region": {
      "actions": [
        "no-op"
      ],
      "before": "us-east-1",
      "after": "us-east-1",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.12.2",
    "values": {
      "outputs": {
        "ack_controller_role_arns": {
          "sensitive": false,
          "value": {
            "S3": "arn:aws:iam::682033468861:role/ACK-controller-gen3-eks-cluster-IcA3-S3"
          },
          "type": [
            "object",
            {
              "S3": "string"
            }
          ]
        },
        "ack_controller_statuses": {
          "sensitive": false,
          "value": {
            "s3": "deployed"
          },
          "type": [
            "object",
            {
              "s3": "string"
            }
          ]
        },
        "cluster_endpoint": {
          "sensitive": false,
          "value": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
          "type": "string"
        },
        "cluster_name": {
          "sensitive": false,
          "value": "gen3-eks-cluster-IcA3",
          "type": "string"
        },
        "cluster_security_group_id": {
          "sensitive": false,
          "value": "sg-06c615f0d851c65d4",
          "type": "string"
        },
        "region": {
          "sensitive": false,
          "value": "us-east-1",
          "type": "string"
        }
      },
      "root_module": {
        "child_modules": [
          {
            "address": "module.gen3-commons",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "module.gen3-commons.module.gen3-ack-controllers.null_resource.helm_registry_login",
                    "mode": "managed",
                    "type": "null_resource",
                    "name": "helm_registry_login",
                    "provider_name": "registry.terraform.io/hashicorp/null",
                    "schema_version": 0,
                    "values": {
                      "id": "1195991904684845203",
                      "triggers": null
                    },
                    "sensitive_values": {}
                  }
                ],
                "address": "module.gen3-commons.module.gen3-ack-controllers",
                "child_modules": [
                  {
                    "resources": [
                      {
                        "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].aws_iam_role.this[0]",
                        "mode": "managed",
                        "type": "aws_iam_role",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:role/ACK-controller-gen3-eks-cluster-IcA3-S3",
                          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-S3-controller:S3-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"}}],\"Version\":\"2012-10-17\"}",
                          "create_date": "2025-06-16T20:14:51Z",
                          "description": "",
                          "force_detach_policies": false,
                          "id": "ACK-controller-gen3-eks-cluster-IcA3-S3",
                          "inline_policy": [],
                          "managed_policy_arns": [
                            "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                          ],
                          "max_session_duration": 3600,
                          "name": "ACK-controller-gen3-eks-cluster-IcA3-S3",
                          "name_prefix": "",
                          "path": "/",
                          "permissions_boundary": "",
                          "tags": {},
                          "tags_all": {},
                          "unique_id": "AROAZ5TC42W63TTKPC7LU"
                        },
                        "sensitive_values": {
                          "inline_policy": [],
                          "managed_policy_arns": [
                            false
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.data.aws_iam_policy_document.assume_role_with_oidc",
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].aws_iam_role_policy_attachment.custom[0]",
                        "mode": "managed",
                        "type": "aws_iam_role_policy_attachment",
                        "name": "custom",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "ACK-controller-gen3-eks-cluster-IcA3-S3-20250616201451952000000008",
                          "policy_arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                          "role": "ACK-controller-gen3-eks-cluster-IcA3-S3"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.data.aws_iam_policy_document.assume_role_with_oidc",
                          "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      }
                    ],
                    "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"]"
                  },
                  {
                    "resources": [
                      {
                        "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].data.aws_caller_identity.current",
                        "mode": "data",
                        "type": "aws_caller_identity",
                        "name": "current",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "account_id": "682033468861",
                          "arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "id": "682033468861",
                          "user_id": "AIDAZ5TC42W66VBAS3KTX"
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].data.aws_iam_policy_document.assume_role_with_oidc[0]",
                        "mode": "data",
                        "type": "aws_iam_policy_document",
                        "name": "assume_role_with_oidc",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "39786576",
                          "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRoleWithWebIdentity\"\n      ],\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\": \"system:serviceaccount:ack-s3-controller:s3-controller\"\n        }\n      }\n    }\n  ]\n}",
                          "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE\"},\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub\":\"system:serviceaccount:ack-s3-controller:s3-controller\"}}}]}",
                          "override_json": null,
                          "override_policy_documents": null,
                          "policy_id": null,
                          "source_json": null,
                          "source_policy_documents": null,
                          "statement": [
                            {
                              "actions": [
                                "sts:AssumeRoleWithWebIdentity",
                                "sts:TagSession"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "system:serviceaccount:ack-s3-controller:s3-controller"
                                  ],
                                  "variable": "oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE:sub"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [
                                {
                                  "identifiers": [
                                    "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE"
                                  ],
                                  "type": "Federated"
                                }
                              ],
                              "resources": [],
                              "sid": ""
                            }
                          ],
                          "version": "2012-10-17"
                        },
                        "sensitive_values": {
                          "statement": [
                            {
                              "actions": [
                                false,
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [
                                {
                                  "identifiers": [
                                    false
                                  ]
                                }
                              ],
                              "resources": []
                            }
                          ]
                        }
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].data.aws_partition.current",
                        "mode": "data",
                        "type": "aws_partition",
                        "name": "current",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "dns_suffix": "amazonaws.com",
                          "id": "aws",
                          "partition": "aws",
                          "reverse_dns_prefix": "com.amazonaws"
                        },
                        "sensitive_values": {}
                      }
                    ],
                    "address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"]"
                  }
                ]
              },
              {
                "resources": [
                  {
                    "address": "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                    "mode": "data",
                    "type": "aws_availability_zones",
                    "name": "available",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "all_availability_zones": null,
                      "exclude_names": null,
                      "exclude_zone_ids": null,
                      "filter": [
                        {
                          "name": "opt-in-status",
                          "values": [
                            "opt-in-not-required"
                          ]
                        }
                      ],
                      "group_names": [
                        "us-east-1-zg-1"
                      ],
                      "id": "us-east-1",
                      "names": [
                        "us-east-1a",
                        "us-east-1b",
                        "us-east-1c",
                        "us-east-1d",
                        "us-east-1e",
                        "us-east-1f"
                      ],
                      "state": null,
                      "timeouts": null,
                      "zone_ids": [
                        "use1-az4",
                        "use1-az6",
                        "use1-az1",
                        "use1-az2",
                        "use1-az3",
                        "use1-az5"
                      ]
                    },
                    "sensitive_values": {
                      "filter": [
                        {
                          "values": [
                            false
                          ]
                        }
                      ],
                      "group_names": [
                        false
                      ],
                      "names": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                      ],
                      "zone_ids": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                      ]
                    }
                  },
                  {
                    "address": "module.gen3-commons.module.gen3-eks.data.aws_iam_policy.ebs_csi_policy",
                    "mode": "data",
                    "type": "aws_iam_policy",
                    "name": "ebs_csi_policy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
                      "attachment_count": 1,
                      "description": "IAM Policy that allows the CSI driver service account to make calls to related services such as EC2 on your behalf.",
                      "id": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
                      "name": "AmazonEBSCSIDriverPolicy",
                      "path": "/service-role/",
                      "path_prefix": null,
                      "policy": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DescribeAvailabilityZones\",\n\t\t\t\t\"ec2:DescribeInstances\",\n\t\t\t\t\"ec2:DescribeSnapshots\",\n\t\t\t\t\"ec2:DescribeTags\",\n\t\t\t\t\"ec2:DescribeVolumes\",\n\t\t\t\t\"ec2:DescribeVolumesModifications\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateSnapshot\",\n\t\t\t\t\"ec2:ModifyVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:volume/*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:AttachVolume\",\n\t\t\t\t\"ec2:DetachVolume\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\t\"arn:aws:ec2:*:*:instance/*\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVolume\",\n\t\t\t\t\"ec2:EnableFastSnapshotRestores\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:snapshot/*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateTags\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\t\"arn:aws:ec2:*:*:snapshot/*\"\n\t\t\t],\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringEquals\": {\n\t\t\t\t\t\"ec2:CreateAction\": [\n\t\t\t\t\t\t\"CreateVolume\",\n\t\t\t\t\t\t\"CreateSnapshot\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DeleteTags\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\t\"arn:aws:ec2:*:*:snapshot/*\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"aws:RequestTag/CSIVolumeName\": \"*\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DeleteVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DeleteVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"ec2:ResourceTag/CSIVolumeName\": \"*\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DeleteVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:volume/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\": \"*\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateSnapshot\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:snapshot/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"aws:RequestTag/CSIVolumeSnapshotName\": \"*\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateSnapshot\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:snapshot/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DeleteSnapshot\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:snapshot/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"ec2:ResourceTag/CSIVolumeSnapshotName\": \"*\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DeleteSnapshot\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:ec2:*:*:snapshot/*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}",
                      "policy_id": "ANPAZKAPJZG4IV6FHD2UE",
                      "tags": {}
                    },
                    "sensitive_values": {
                      "tags": {}
                    }
                  },
                  {
                    "address": "module.gen3-commons.module.gen3-eks.random_string.suffix",
                    "mode": "managed",
                    "type": "random_string",
                    "name": "suffix",
                    "provider_name": "registry.terraform.io/hashicorp/random",
                    "schema_version": 2,
                    "values": {
                      "id": "IcA3",
                      "keepers": null,
                      "length": 4,
                      "lower": true,
                      "min_lower": 0,
                      "min_numeric": 0,
                      "min_special": 0,
                      "min_upper": 0,
                      "number": true,
                      "numeric": true,
                      "override_special": null,
                      "result": "IcA3",
                      "special": false,
                      "upper": true
                    },
                    "sensitive_values": {}
                  }
                ],
                "address": "module.gen3-commons.module.gen3-eks",
                "child_modules": [
                  {
                    "resources": [
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current[0]",
                        "mode": "data",
                        "type": "aws_caller_identity",
                        "name": "current",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "account_id": "682033468861",
                          "arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "id": "682033468861",
                          "user_id": "AIDAZ5TC42W66VBAS3KTX"
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_eks_addon_version.this[\"aws-ebs-csi-driver\"]",
                        "mode": "data",
                        "type": "aws_eks_addon_version",
                        "name": "this",
                        "index": "aws-ebs-csi-driver",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "addon_name": "aws-ebs-csi-driver",
                          "id": "aws-ebs-csi-driver",
                          "kubernetes_version": "1.33",
                          "most_recent": false,
                          "version": "v1.44.0-eksbuild.1"
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy[0]",
                        "mode": "data",
                        "type": "aws_iam_policy_document",
                        "name": "assume_role_policy",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "2830595799",
                          "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
                          "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
                          "override_json": null,
                          "override_policy_documents": null,
                          "policy_id": null,
                          "source_json": null,
                          "source_policy_documents": null,
                          "statement": [
                            {
                              "actions": [
                                "sts:AssumeRole",
                                "sts:TagSession"
                              ],
                              "condition": [],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [
                                {
                                  "identifiers": [
                                    "eks.amazonaws.com"
                                  ],
                                  "type": "Service"
                                }
                              ],
                              "resources": [],
                              "sid": "EKSClusterAssumeRole"
                            }
                          ],
                          "version": "2012-10-17"
                        },
                        "sensitive_values": {
                          "statement": [
                            {
                              "actions": [
                                false,
                                false
                              ],
                              "condition": [],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [
                                {
                                  "identifiers": [
                                    false
                                  ]
                                }
                              ],
                              "resources": []
                            }
                          ]
                        }
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.custom[0]",
                        "mode": "data",
                        "type": "aws_iam_policy_document",
                        "name": "custom",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "513122117",
                          "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Compute\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RunInstances\",\n        \"ec2:CreateLaunchTemplate\",\n        \"ec2:CreateFleet\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        },\n        \"StringLike\": {\n          \"aws:RequestTag/eks:kubernetes-node-class-name\": \"*\",\n          \"aws:RequestTag/eks:kubernetes-node-pool-name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"Storage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\",\n        \"ec2:CreateSnapshot\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"Networking\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateNetworkInterface\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\",\n          \"aws:RequestTag/eks:kubernetes-cni-node-name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"LoadBalancer\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateLoadBalancer\",\n        \"elasticloadbalancing:CreateListener\",\n        \"ec2:CreateSecurityGroup\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"ShieldProtection\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"shield:CreateProtection\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"ShieldTagResource\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"shield:TagResource\",\n      \"Resource\": \"arn:aws:shield::*:protection/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    }\n  ]\n}",
                          "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Compute\",\"Effect\":\"Allow\",\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}}},{\"Sid\":\"Storage\",\"Effect\":\"Allow\",\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}},{\"Sid\":\"Networking\",\"Effect\":\"Allow\",\"Action\":\"ec2:CreateNetworkInterface\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}}},{\"Sid\":\"LoadBalancer\",\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}},{\"Sid\":\"ShieldProtection\",\"Effect\":\"Allow\",\"Action\":\"shield:CreateProtection\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}},{\"Sid\":\"ShieldTagResource\",\"Effect\":\"Allow\",\"Action\":\"shield:TagResource\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}}]}",
                          "override_json": null,
                          "override_policy_documents": null,
                          "policy_id": null,
                          "source_json": null,
                          "source_policy_documents": null,
                          "statement": [
                            {
                              "actions": [
                                "ec2:CreateFleet",
                                "ec2:CreateLaunchTemplate",
                                "ec2:RunInstances"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "${aws:PrincipalTag/eks:eks-cluster-name}"
                                  ],
                                  "variable": "aws:RequestTag/eks:eks-cluster-name"
                                },
                                {
                                  "test": "StringLike",
                                  "values": [
                                    "*"
                                  ],
                                  "variable": "aws:RequestTag/eks:kubernetes-node-class-name"
                                },
                                {
                                  "test": "StringLike",
                                  "values": [
                                    "*"
                                  ],
                                  "variable": "aws:RequestTag/eks:kubernetes-node-pool-name"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "*"
                              ],
                              "sid": "Compute"
                            },
                            {
                              "actions": [
                                "ec2:CreateSnapshot",
                                "ec2:CreateVolume"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "${aws:PrincipalTag/eks:eks-cluster-name}"
                                  ],
                                  "variable": "aws:RequestTag/eks:eks-cluster-name"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "arn:aws:ec2:*:*:snapshot/*",
                                "arn:aws:ec2:*:*:volume/*"
                              ],
                              "sid": "Storage"
                            },
                            {
                              "actions": [
                                "ec2:CreateNetworkInterface"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "${aws:PrincipalTag/eks:eks-cluster-name}"
                                  ],
                                  "variable": "aws:RequestTag/eks:eks-cluster-name"
                                },
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "*"
                                  ],
                                  "variable": "aws:RequestTag/eks:kubernetes-cni-node-name"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "*"
                              ],
                              "sid": "Networking"
                            },
                            {
                              "actions": [
                                "ec2:CreateSecurityGroup",
                                "elasticloadbalancing:CreateListener",
                                "elasticloadbalancing:CreateLoadBalancer",
                                "elasticloadbalancing:CreateRule",
                                "elasticloadbalancing:CreateTargetGroup"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "${aws:PrincipalTag/eks:eks-cluster-name}"
                                  ],
                                  "variable": "aws:RequestTag/eks:eks-cluster-name"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "*"
                              ],
                              "sid": "LoadBalancer"
                            },
                            {
                              "actions": [
                                "shield:CreateProtection"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "${aws:PrincipalTag/eks:eks-cluster-name}"
                                  ],
                                  "variable": "aws:RequestTag/eks:eks-cluster-name"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "*"
                              ],
                              "sid": "ShieldProtection"
                            },
                            {
                              "actions": [
                                "shield:TagResource"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "${aws:PrincipalTag/eks:eks-cluster-name}"
                                  ],
                                  "variable": "aws:RequestTag/eks:eks-cluster-name"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "arn:aws:shield::*:protection/*"
                              ],
                              "sid": "ShieldTagResource"
                            }
                          ],
                          "version": "2012-10-17"
                        },
                        "sensitive_values": {
                          "statement": [
                            {
                              "actions": [
                                false,
                                false,
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                },
                                {
                                  "values": [
                                    false
                                  ]
                                },
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            },
                            {
                              "actions": [
                                false,
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false,
                                false
                              ]
                            },
                            {
                              "actions": [
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                },
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            },
                            {
                              "actions": [
                                false,
                                false,
                                false,
                                false,
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            },
                            {
                              "actions": [
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            },
                            {
                              "actions": [
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current[0]",
                        "mode": "data",
                        "type": "aws_iam_session_context",
                        "name": "current",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "id": "arn:aws:iam::682033468861:user/jimi-cto",
                          "issuer_arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "issuer_id": "",
                          "issuer_name": "",
                          "session_name": ""
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current[0]",
                        "mode": "data",
                        "type": "aws_partition",
                        "name": "current",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "dns_suffix": "amazonaws.com",
                          "id": "aws",
                          "partition": "aws",
                          "reverse_dns_prefix": "com.amazonaws"
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.data.tls_certificate.this[0]",
                        "mode": "data",
                        "type": "tls_certificate",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/tls",
                        "schema_version": 0,
                        "values": {
                          "certificates": [
                            {
                              "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                              "is_ca": true,
                              "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                              "not_after": "2034-06-28T17:39:16Z",
                              "not_before": "2009-09-02T00:00:00Z",
                              "public_key_algorithm": "RSA",
                              "serial_number": "12037640545166866303",
                              "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                              "signature_algorithm": "SHA256-RSA",
                              "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                              "version": 3
                            },
                            {
                              "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                              "is_ca": true,
                              "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                              "not_after": "2037-12-31T01:00:00Z",
                              "not_before": "2015-05-25T12:00:00Z",
                              "public_key_algorithm": "RSA",
                              "serial_number": "144918191876577076464031512351042010504348870",
                              "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                              "signature_algorithm": "SHA256-RSA",
                              "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                              "version": 3
                            },
                            {
                              "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                              "is_ca": true,
                              "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                              "not_after": "2030-08-23T22:26:04Z",
                              "not_before": "2022-08-23T22:26:04Z",
                              "public_key_algorithm": "RSA",
                              "serial_number": "166129356476704345391986644047206454194698629",
                              "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                              "signature_algorithm": "SHA256-RSA",
                              "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                              "version": 3
                            },
                            {
                              "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF5zCCBM+gAwIBAgIQB8/B5LYdWaaSLNb9DZLprTANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI1MDIyNjAwMDAwMFoXDTI2MDMyNzIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoHWcgrIv/D6CxSXSxAq0GuOPoCJqnVz6U\nMhp1YLE9OZs3jH8EfYlNpGtqOtLa1vZb8Lp4CZdATHTj1SoK01MwmXXIDm2Jj+Km\niQvZ0BBe5xroDWvf3r/LWG/WMkRtR4F+qPb9pVYlM9N3WZdSAKfTQTowGxebugLc\nM/+ZLvAxxdtaXK+LID6JRKRa2BIRHcfILiNJo7vIS/I+DOqXn9Rb0VFnkpYpGE+k\nm47kVkFFsToior7zlAwPv6VWsm+zZV9zNnCpu9FpJ3vkZE9OGHS6aChtSya2Qpyr\njyF98KIFTQ+FKtDZHf9XLHmV5v/IP2bWk7lzmPYW4PwcPhDUmC9PAgMBAAGjggL3\nMIIC8zAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4EFgQU\n6mCbzMC1FaJuw7tKpv7muQZDZrowKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0x\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMy5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDMuYW1h\nem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBfwYKKwYBBAHW\neQIEAgSCAW8EggFrAWkAdgAOV5S8866pPjMbLJkHs/eQ35vCPXEyJd0hqSWsYcVO\nIQAAAZVBW4SGAAAEAwBHMEUCIQC+CghIdRNpEnK+JGxaeHOel/pYJSUsog1eklre\nLGmoTwIgAj1vm4d6u/93S7GVfw7qotajiMfgHeEf7lANQf0mxf4AdgBkEcRspBLs\np4kcogIuALyrTygH1B41J6vq/tUDyX3N8AAAAZVBW4Q1AAAEAwBHMEUCIAYyeDIv\nJD1IhUkb1E59cbCwTcAYChrSArEZOOAib3dJAiEAix8XjjqXhMNuji/u2fzLxeZ7\nc5PCtDHWx3Ky7QYBfCUAdwBJnJtp3h187Pw23s2HZKa4W68Kh4AZ0VVS++nrKd34\nwwAAAZVBW4RMAAAEAwBIMEYCIQCsj67XcK6jtETNJEPTYPaFqJOMlNtM0TeJwGhm\nBc81sQIhAJoirhaQzC4ydAzLvjpVqKYyuqLktiHkTqFq8IGxBAkIMA0GCSqGSIb3\nDQEBCwUAA4IBAQAjjE2au5fdV/DrlD3e5zZ5hTB4CicIARTWvJQ6EsQm/vbXPoUY\nSHRZkOodq0AJWEC/RImGu8bnVY8RzGsELkMzI4A8UxdlH2YGP8obg6MfP6yGZaHM\nnS4wLX05EnmrABaoRB/apt7tE4w+yRa7QoxUgiTPpFzaQVv1mTcGaWMG55U8tPg7\nLXm539O4OBukbP8HNvjBZ8+N0RYrtG0u0M4FMX1hMKG0bkjJiU6MVZfGJWcgp7I4\nbd5cj5SfE1EHL70P7ELaocXjnWKbys9Mc870aoRXVfAC4bZWU6F9Ke3O7ioXXd5L\n0mKQwrjkiglpYaXc247Qi8IUCdk6s13xHJ4e\n-----END CERTIFICATE-----\n",
                              "is_ca": false,
                              "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                              "not_after": "2026-03-27T23:59:59Z",
                              "not_before": "2025-02-26T00:00:00Z",
                              "public_key_algorithm": "RSA",
                              "serial_number": "10383334045647432453656403708671617453",
                              "sha1_fingerprint": "63462dda480d8b900e0a7dbfaf6238a62ba4fce0",
                              "signature_algorithm": "SHA256-RSA",
                              "subject": "CN=*.eks.us-east-1.amazonaws.com",
                              "version": 3
                            }
                          ],
                          "content": null,
                          "id": "922877a0975ad078a65b8ff11ebc47b8311945c7",
                          "url": "https://oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
                          "verify_chain": true
                        },
                        "sensitive_values": {
                          "certificates": [
                            {},
                            {},
                            {},
                            {}
                          ]
                        }
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this[0]",
                        "mode": "managed",
                        "type": "aws_cloudwatch_log_group",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:logs:us-east-1:682033468861:log-group:/aws/eks/gen3-eks-cluster-IcA3/cluster",
                          "id": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
                          "kms_key_id": "",
                          "log_group_class": "STANDARD",
                          "name": "/aws/eks/gen3-eks-cluster-IcA3/cluster",
                          "name_prefix": "",
                          "retention_in_days": 90,
                          "skip_destroy": false,
                          "tags": {
                            "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
                          },
                          "tags_all": {
                            "Name": "/aws/eks/gen3-eks-cluster-IcA3/cluster"
                          }
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this[\"cluster_creator\"]",
                        "mode": "managed",
                        "type": "aws_eks_access_entry",
                        "name": "this",
                        "index": "cluster_creator",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "access_entry_arn": "arn:aws:eks:us-east-1:682033468861:access-entry/gen3-eks-cluster-IcA3/user/682033468861/jimi-cto/b2cbbd35-aaa4-016c-eefc-fa68621ec7f2",
                          "cluster_name": "gen3-eks-cluster-IcA3",
                          "created_at": "2025-06-16T20:25:44Z",
                          "id": "gen3-eks-cluster-IcA3:arn:aws:iam::682033468861:user/jimi-cto",
                          "kubernetes_groups": [],
                          "modified_at": "2025-06-16T20:25:44Z",
                          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "tags": {},
                          "tags_all": {},
                          "timeouts": null,
                          "type": "STANDARD",
                          "user_name": "arn:aws:iam::682033468861:user/jimi-cto"
                        },
                        "sensitive_values": {
                          "kubernetes_groups": [],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this[\"cluster_creator_admin\"]",
                        "mode": "managed",
                        "type": "aws_eks_access_policy_association",
                        "name": "this",
                        "index": "cluster_creator_admin",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "access_scope": [
                            {
                              "namespaces": [],
                              "type": "cluster"
                            }
                          ],
                          "associated_at": "2025-06-16 20:25:44.896 +0000 UTC",
                          "cluster_name": "gen3-eks-cluster-IcA3",
                          "id": "gen3-eks-cluster-IcA3#arn:aws:iam::682033468861:user/jimi-cto#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
                          "modified_at": "2025-06-16 20:25:44.896 +0000 UTC",
                          "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
                          "principal_arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "timeouts": null
                        },
                        "sensitive_values": {
                          "access_scope": [
                            {
                              "namespaces": []
                            }
                          ]
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_addon.this[\"aws-ebs-csi-driver\"]",
                        "mode": "managed",
                        "type": "aws_eks_addon",
                        "name": "this",
                        "index": "aws-ebs-csi-driver",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "addon_name": "aws-ebs-csi-driver",
                          "addon_version": "v1.44.0-eksbuild.1",
                          "arn": "arn:aws:eks:us-east-1:682033468861:addon/gen3-eks-cluster-IcA3/aws-ebs-csi-driver/e6cbbd36-c410-3e2f-5de6-4233993c4e49",
                          "cluster_name": "gen3-eks-cluster-IcA3",
                          "configuration_values": "",
                          "created_at": "2025-06-16T20:28:08Z",
                          "id": "gen3-eks-cluster-IcA3:aws-ebs-csi-driver",
                          "modified_at": "2025-06-16T20:28:55Z",
                          "pod_identity_association": [],
                          "preserve": true,
                          "resolve_conflicts": null,
                          "resolve_conflicts_on_create": "OVERWRITE",
                          "resolve_conflicts_on_update": "OVERWRITE",
                          "service_account_role_arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                          "tags": {},
                          "tags_all": {},
                          "timeouts": {
                            "create": null,
                            "delete": null,
                            "update": null
                          }
                        },
                        "sensitive_values": {
                          "pod_identity_association": [],
                          "tags": {},
                          "tags_all": {},
                          "timeouts": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_eks_addon_version.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_placement_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role_policy.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.data.aws_region.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_launch_template.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_placement_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
                          "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
                        "mode": "managed",
                        "type": "aws_eks_cluster",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "access_config": [
                            {
                              "authentication_mode": "API_AND_CONFIG_MAP",
                              "bootstrap_cluster_creator_admin_permissions": false
                            }
                          ],
                          "arn": "arn:aws:eks:us-east-1:682033468861:cluster/gen3-eks-cluster-IcA3",
                          "bootstrap_self_managed_addons": true,
                          "certificate_authority": [
                            {
                              "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                            }
                          ],
                          "cluster_id": null,
                          "compute_config": [],
                          "created_at": "2025-06-16T20:15:15Z",
                          "enabled_cluster_log_types": [
                            "api",
                            "audit",
                            "authenticator"
                          ],
                          "encryption_config": [
                            {
                              "provider": [
                                {
                                  "key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b"
                                }
                              ],
                              "resources": [
                                "secrets"
                              ]
                            }
                          ],
                          "endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
                          "force_update_version": null,
                          "id": "gen3-eks-cluster-IcA3",
                          "identity": [
                            {
                              "oidc": [
                                {
                                  "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                                }
                              ]
                            }
                          ],
                          "kubernetes_network_config": [
                            {
                              "elastic_load_balancing": [
                                {
                                  "enabled": false
                                }
                              ],
                              "ip_family": "ipv4",
                              "service_ipv4_cidr": "172.20.0.0/16",
                              "service_ipv6_cidr": ""
                            }
                          ],
                          "name": "gen3-eks-cluster-IcA3",
                          "outpost_config": [],
                          "platform_version": "eks.5",
                          "remote_network_config": [],
                          "role_arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                          "status": "ACTIVE",
                          "storage_config": [],
                          "tags": {
                            "terraform-aws-modules": "eks"
                          },
                          "tags_all": {
                            "terraform-aws-modules": "eks"
                          },
                          "timeouts": {
                            "create": null,
                            "delete": null,
                            "update": null
                          },
                          "upgrade_policy": [
                            {
                              "support_type": "EXTENDED"
                            }
                          ],
                          "version": "1.33",
                          "vpc_config": [
                            {
                              "cluster_security_group_id": "sg-0464ceb332fd5475e",
                              "endpoint_private_access": true,
                              "endpoint_public_access": true,
                              "public_access_cidrs": [
                                "0.0.0.0/0"
                              ],
                              "security_group_ids": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "subnet_ids": [
                                "subnet-059ded1cc017cf540",
                                "subnet-05c7ecccf262ba5c7",
                                "subnet-0ec84094faab8977b"
                              ],
                              "vpc_id": "vpc-010949b4d7c177dee"
                            }
                          ],
                          "zonal_shift_config": []
                        },
                        "sensitive_values": {
                          "access_config": [
                            {}
                          ],
                          "certificate_authority": [
                            {}
                          ],
                          "compute_config": [],
                          "enabled_cluster_log_types": [
                            false,
                            false,
                            false
                          ],
                          "encryption_config": [
                            {
                              "provider": [
                                {}
                              ],
                              "resources": [
                                false
                              ]
                            }
                          ],
                          "identity": [
                            {
                              "oidc": [
                                {}
                              ]
                            }
                          ],
                          "kubernetes_network_config": [
                            {
                              "elastic_load_balancing": [
                                {}
                              ]
                            }
                          ],
                          "outpost_config": [],
                          "remote_network_config": [],
                          "storage_config": [],
                          "tags": {},
                          "tags_all": {},
                          "timeouts": {},
                          "upgrade_policy": [
                            {}
                          ],
                          "vpc_config": [
                            {
                              "public_access_cidrs": [
                                false
                              ],
                              "security_group_ids": [
                                false
                              ],
                              "subnet_ids": [
                                false,
                                false,
                                false
                              ]
                            }
                          ],
                          "zonal_shift_config": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
                        "mode": "managed",
                        "type": "aws_iam_openid_connect_provider",
                        "name": "oidc_provider",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
                          "client_id_list": [
                            "sts.amazonaws.com"
                          ],
                          "id": "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595",
                          "tags": {
                            "Name": "gen3-eks-cluster-IcA3-eks-irsa"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-IcA3-eks-irsa"
                          },
                          "thumbprint_list": [
                            "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                          ],
                          "url": "oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                        },
                        "sensitive_values": {
                          "client_id_list": [
                            false
                          ],
                          "tags": {},
                          "tags_all": {},
                          "thumbprint_list": [
                            false
                          ]
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.tls_certificate.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cluster_encryption[0]",
                        "mode": "managed",
                        "type": "aws_iam_policy",
                        "name": "cluster_encryption",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                          "attachment_count": 1,
                          "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
                          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                          "name": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                          "name_prefix": "gen3-eks-cluster-IcA3-cluster-ClusterEncryption",
                          "path": "/",
                          "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b\"}],\"Version\":\"2012-10-17\"}",
                          "policy_id": "ANPAZ5TC42W67QC53WXNQ",
                          "tags": {},
                          "tags_all": {}
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.custom[0]",
                        "mode": "managed",
                        "type": "aws_iam_policy",
                        "name": "custom",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                          "attachment_count": 1,
                          "description": "",
                          "id": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
                          "path": "/",
                          "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
                          "policy_id": "ANPAZ5TC42W65IOFAA5VB",
                          "tags": {},
                          "tags_all": {}
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.custom",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
                        "mode": "managed",
                        "type": "aws_iam_role",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                          "create_date": "2025-06-16T20:14:51Z",
                          "description": "",
                          "force_detach_policies": true,
                          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                          "inline_policy": [],
                          "managed_policy_arns": [
                            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                            "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                            "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                            "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
                          ],
                          "max_session_duration": 3600,
                          "name": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002",
                          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
                          "path": "/",
                          "permissions_boundary": "",
                          "tags": {},
                          "tags_all": {},
                          "unique_id": "AROAZ5TC42W65FK4JT5Z4"
                        },
                        "sensitive_values": {
                          "inline_policy": [],
                          "managed_policy_arns": [
                            false,
                            false,
                            false,
                            false
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]",
                        "mode": "managed",
                        "type": "aws_iam_role_policy_attachment",
                        "name": "cluster_encryption",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201513082900000011",
                          "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-ClusterEncryption20250616201512777300000010",
                          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cluster_encryption",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.custom[0]",
                        "mode": "managed",
                        "type": "aws_iam_role_policy_attachment",
                        "name": "custom",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451954000000009",
                          "policy_arn": "arn:aws:iam::682033468861:policy/gen3-eks-cluster-IcA3-cluster-20250616201451297800000003",
                          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.custom",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.custom",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSClusterPolicy\"]",
                        "mode": "managed",
                        "type": "aws_iam_role_policy_attachment",
                        "name": "this",
                        "index": "AmazonEKSClusterPolicy",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451869700000004",
                          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this[\"AmazonEKSVPCResourceController\"]",
                        "mode": "managed",
                        "type": "aws_iam_role_policy_attachment",
                        "name": "this",
                        "index": "AmazonEKSVPCResourceController",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002-20250616201451890700000005",
                          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
                          "role": "gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster[0]",
                        "mode": "managed",
                        "type": "aws_security_group",
                        "name": "cluster",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-06c615f0d851c65d4",
                          "description": "EKS cluster security group",
                          "egress": [],
                          "id": "sg-06c615f0d851c65d4",
                          "ingress": [
                            {
                              "cidr_blocks": [],
                              "description": "Node groups to cluster API",
                              "from_port": 443,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-0cd594b7fc78ab201"
                              ],
                              "self": false,
                              "to_port": 443
                            }
                          ],
                          "name": "gen3-eks-cluster-IcA3-cluster-2025061620150423990000000c",
                          "name_prefix": "gen3-eks-cluster-IcA3-cluster-",
                          "owner_id": "682033468861",
                          "revoke_rules_on_delete": false,
                          "tags": {
                            "Name": "gen3-eks-cluster-IcA3-cluster"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-IcA3-cluster"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "egress": [],
                          "ingress": [
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            }
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node[0]",
                        "mode": "managed",
                        "type": "aws_security_group",
                        "name": "node",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-0cd594b7fc78ab201",
                          "description": "EKS node shared security group",
                          "egress": [
                            {
                              "cidr_blocks": [
                                "0.0.0.0/0"
                              ],
                              "description": "Allow all egress",
                              "from_port": 0,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "-1",
                              "security_groups": [],
                              "self": false,
                              "to_port": 0
                            }
                          ],
                          "id": "sg-0cd594b7fc78ab201",
                          "ingress": [
                            {
                              "cidr_blocks": [],
                              "description": "Cluster API to node 4443/tcp webhook",
                              "from_port": 4443,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "self": false,
                              "to_port": 4443
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Cluster API to node 6443/tcp webhook",
                              "from_port": 6443,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "self": false,
                              "to_port": 6443
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Cluster API to node 8443/tcp webhook",
                              "from_port": 8443,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "self": false,
                              "to_port": 8443
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Cluster API to node 9443/tcp webhook",
                              "from_port": 9443,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "self": false,
                              "to_port": 9443
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Cluster API to node groups",
                              "from_port": 443,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "self": false,
                              "to_port": 443
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Cluster API to node kubelets",
                              "from_port": 10250,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [
                                "sg-06c615f0d851c65d4"
                              ],
                              "self": false,
                              "to_port": 10250
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Node to node CoreDNS UDP",
                              "from_port": 53,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "udp",
                              "security_groups": [],
                              "self": true,
                              "to_port": 53
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Node to node CoreDNS",
                              "from_port": 53,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [],
                              "self": true,
                              "to_port": 53
                            },
                            {
                              "cidr_blocks": [],
                              "description": "Node to node ingress on ephemeral ports",
                              "from_port": 1025,
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "protocol": "tcp",
                              "security_groups": [],
                              "self": true,
                              "to_port": 65535
                            }
                          ],
                          "name": "gen3-eks-cluster-IcA3-node-2025061620150423980000000b",
                          "name_prefix": "gen3-eks-cluster-IcA3-node-",
                          "owner_id": "682033468861",
                          "revoke_rules_on_delete": false,
                          "tags": {
                            "Name": "gen3-eks-cluster-IcA3-node",
                            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-IcA3-node",
                            "kubernetes.io/cluster/gen3-eks-cluster-IcA3": "owned"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "egress": [
                            {
                              "cidr_blocks": [
                                false
                              ],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": []
                            }
                          ],
                          "ingress": [
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": [
                                false
                              ]
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": []
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": []
                            },
                            {
                              "cidr_blocks": [],
                              "ipv6_cidr_blocks": [],
                              "prefix_list_ids": [],
                              "security_groups": []
                            }
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "cluster",
                        "index": "ingress_nodes_443",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Node groups to cluster API",
                          "from_port": 443,
                          "id": "sgrule-3666249114",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": null,
                          "protocol": "tcp",
                          "security_group_id": "sg-06c615f0d851c65d4",
                          "security_group_rule_id": "sgr-0607bd74ffa392727",
                          "self": false,
                          "source_security_group_id": "sg-0cd594b7fc78ab201",
                          "timeouts": null,
                          "to_port": 443,
                          "type": "ingress"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"egress_all\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "egress_all",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "description": "Allow all egress",
                          "from_port": 0,
                          "id": "sgrule-2494722700",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "-1",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-0380db23c41187dc0",
                          "self": false,
                          "source_security_group_id": null,
                          "timeouts": null,
                          "to_port": 0,
                          "type": "egress"
                        },
                        "sensitive_values": {
                          "cidr_blocks": [
                            false
                          ],
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_cluster_443",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Cluster API to node groups",
                          "from_port": 443,
                          "id": "sgrule-4180634791",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-094657b0de983f2ae",
                          "self": false,
                          "source_security_group_id": "sg-06c615f0d851c65d4",
                          "timeouts": null,
                          "to_port": 443,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_4443_webhook\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_cluster_4443_webhook",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Cluster API to node 4443/tcp webhook",
                          "from_port": 4443,
                          "id": "sgrule-3638363368",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-0dedf2fad28a414b2",
                          "self": false,
                          "source_security_group_id": "sg-06c615f0d851c65d4",
                          "timeouts": null,
                          "to_port": 4443,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_6443_webhook\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_cluster_6443_webhook",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Cluster API to node 6443/tcp webhook",
                          "from_port": 6443,
                          "id": "sgrule-295658366",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-0c28b8c04718e2fcd",
                          "self": false,
                          "source_security_group_id": "sg-06c615f0d851c65d4",
                          "timeouts": null,
                          "to_port": 6443,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_8443_webhook\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_cluster_8443_webhook",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Cluster API to node 8443/tcp webhook",
                          "from_port": 8443,
                          "id": "sgrule-46358367",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-0a9bcd456895cc071",
                          "self": false,
                          "source_security_group_id": "sg-06c615f0d851c65d4",
                          "timeouts": null,
                          "to_port": 8443,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_9443_webhook\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_cluster_9443_webhook",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Cluster API to node 9443/tcp webhook",
                          "from_port": 9443,
                          "id": "sgrule-1717726356",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-0a2a591ae92d34cee",
                          "self": false,
                          "source_security_group_id": "sg-06c615f0d851c65d4",
                          "timeouts": null,
                          "to_port": 9443,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_cluster_kubelet",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Cluster API to node kubelets",
                          "from_port": 10250,
                          "id": "sgrule-1462978612",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-03f20f90bc6f397cb",
                          "self": false,
                          "source_security_group_id": "sg-06c615f0d851c65d4",
                          "timeouts": null,
                          "to_port": 10250,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_nodes_ephemeral\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_nodes_ephemeral",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Node to node ingress on ephemeral ports",
                          "from_port": 1025,
                          "id": "sgrule-2253037681",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-058553ab1db369e91",
                          "self": true,
                          "source_security_group_id": null,
                          "timeouts": null,
                          "to_port": 65535,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_self_coredns_tcp",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Node to node CoreDNS",
                          "from_port": 53,
                          "id": "sgrule-3526934040",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-08f31c37a0598ab94",
                          "self": true,
                          "source_security_group_id": null,
                          "timeouts": null,
                          "to_port": 53,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "node",
                        "index": "ingress_self_coredns_udp",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                          "cidr_blocks": null,
                          "description": "Node to node CoreDNS UDP",
                          "from_port": 53,
                          "id": "sgrule-1986469367",
                          "ipv6_cidr_blocks": null,
                          "prefix_list_ids": [],
                          "protocol": "udp",
                          "security_group_id": "sg-0cd594b7fc78ab201",
                          "security_group_rule_id": "sgr-0005e5329ad501247",
                          "self": true,
                          "source_security_group_id": null,
                          "timeouts": null,
                          "to_port": 53,
                          "type": "ingress"
                        },
                        "sensitive_values": {
                          "prefix_list_ids": []
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
                        "mode": "managed",
                        "type": "time_sleep",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/time",
                        "schema_version": 0,
                        "values": {
                          "create_duration": "30s",
                          "destroy_duration": null,
                          "id": "2025-06-16T20:26:13Z",
                          "triggers": {
                            "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0tiTmtrOU1OSnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1UWXlNREUxTURGYUZ3MHpOVEEyTVRReU1ESXdNREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQ3WStzYUtGOE8ra2hCZHo4ZElodGdxRkNEZUIrUkN2bmVieXhFWTArVEJMdlZOb3BobzRudWdNSkEKa1VDNERSbkF6dG1weW0wRzVKR2lIZzVqcVc3SFZTWVc4ZTl6T1k3RGFIQVBxZCtxNmJraTlqV01qeVB1RGpZVApWWmJSbDZRMWI2OVY0QmFqaXNwMVdKeEpITGhSRThVYVhzS0tSU3N2ZkNlUjBqdlBoQXZqa2hqWlJvOWdZYU5uCmdXSUIzQnlhRjdEMk8zQUVxT2llbksydm4yY1VScWFELzFTZDMwMUo3STNkM0p3N3lkVkpqQnY1VmM3WkJHYWIKdys4a25FbFEwTjRjUHdyZUprRmNTbkp4U3BWMUQ0T3RCeU9NNmdQbmhNUkVTa2VXTnF2VnNuZnlGSkhJcjJndgp1V1JuM0hWaE5teWJranN3T01LZWt1SXFkUDJoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTnlKSVpvdmpuTjhpc0JxemIyK2xnbzZzbm5qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtPWjFVSnA5TQpMUWpUdnJCWDZmNzdLTHMxV2NDM0paZDQzV3VHOWhJNXcwYjJqTmYvTnRacmtQNXlJM21GSkRhbjVXaWg2MmZlCjkyUDk3a3h0VmFmek9xdGJkckg4ZkZMNWl1S0Q1M20wM2FKeUp1OEZjOEhUd01iWkhVVUltVFJaMldFMitxdjMKd1FYZ0Ryc2hiTmlYMXN2clhRZXV2TUpUZVFtY24zMWRnVlJ0UTZrRmdoMHFMSk4yQ1c2OGx5KzhPRHo4QThYTgprZStTNnhrQTVrQXhWbnk4QWZlTDhtRDVYZjFsMzdIR1RQdDBRVUZubnNjaXJhdUM4YXM3VkVSRkFjMlQwUlN1Cjl6Y2RaZ2xja2UzTGV1RllSVVFIb2pWVmVhb1hwRXl6L2xzcDZrM1gwRUFNdnpvcXNNdzBJNmtCdjJkQTBQc1UKdGZWbDdWK01vR0VXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "cluster_endpoint": "https://E8356FF502DD0AFB16A769E55143B595.gr7.us-east-1.eks.amazonaws.com",
                            "cluster_name": "gen3-eks-cluster-IcA3",
                            "cluster_service_cidr": "172.20.0.0/16",
                            "cluster_version": "1.33"
                          }
                        },
                        "sensitive_values": {
                          "triggers": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      }
                    ],
                    "address": "module.gen3-commons.module.gen3-eks.module.eks",
                    "child_modules": [
                      {
                        "resources": [
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].data.aws_caller_identity.current",
                            "mode": "data",
                            "type": "aws_caller_identity",
                            "name": "current",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "account_id": "682033468861",
                              "arn": "arn:aws:iam::682033468861:user/jimi-cto",
                              "id": "682033468861",
                              "user_id": "AIDAZ5TC42W66VBAS3KTX"
                            },
                            "sensitive_values": {}
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].data.aws_iam_policy_document.assume_role_policy[0]",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "assume_role_policy",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "id": "2560088296",
                              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                              "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
                              "override_json": null,
                              "override_policy_documents": null,
                              "policy_id": null,
                              "source_json": null,
                              "source_policy_documents": null,
                              "statement": [
                                {
                                  "actions": [
                                    "sts:AssumeRole"
                                  ],
                                  "condition": [],
                                  "effect": "Allow",
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        "ec2.amazonaws.com"
                                      ],
                                      "type": "Service"
                                    }
                                  ],
                                  "resources": [],
                                  "sid": "EKSNodeAssumeRole"
                                }
                              ],
                              "version": "2012-10-17"
                            },
                            "sensitive_values": {
                              "statement": [
                                {
                                  "actions": [
                                    false
                                  ],
                                  "condition": [],
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        false
                                      ]
                                    }
                                  ],
                                  "resources": []
                                }
                              ]
                            }
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].data.aws_partition.current",
                            "mode": "data",
                            "type": "aws_partition",
                            "name": "current",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "dns_suffix": "amazonaws.com",
                              "id": "aws",
                              "partition": "aws",
                              "reverse_dns_prefix": "com.amazonaws"
                            },
                            "sensitive_values": {}
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
                            "mode": "managed",
                            "type": "aws_eks_node_group",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "ami_type": "AL2023_x86_64_STANDARD",
                              "arn": "arn:aws:eks:us-east-1:682033468861:nodegroup/gen3-eks-cluster-IcA3/ack-controllers-20250616202619872400000015/2ecbbd35-f0d8-c40e-f214-955da595e44f",
                              "capacity_type": "ON_DEMAND",
                              "cluster_name": "gen3-eks-cluster-IcA3",
                              "disk_size": 0,
                              "force_update_version": null,
                              "id": "gen3-eks-cluster-IcA3:ack-controllers-20250616202619872400000015",
                              "instance_types": [
                                "t3.small"
                              ],
                              "labels": {},
                              "launch_template": [
                                {
                                  "id": "lt-0ab7ec77e56b808a9",
                                  "name": "one-20250616202614002700000013",
                                  "version": "1"
                                }
                              ],
                              "node_group_name": "ack-controllers-20250616202619872400000015",
                              "node_group_name_prefix": "ack-controllers-",
                              "node_repair_config": [],
                              "node_role_arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
                              "release_version": "1.33.0-20250610",
                              "remote_access": [],
                              "resources": [
                                {
                                  "autoscaling_groups": [
                                    {
                                      "name": "eks-ack-controllers-20250616202619872400000015-2ecbbd35-f0d8-c40e-f214-955da595e44f"
                                    }
                                  ],
                                  "remote_access_security_group_id": ""
                                }
                              ],
                              "scaling_config": [
                                {
                                  "desired_size": 1,
                                  "max_size": 3,
                                  "min_size": 1
                                }
                              ],
                              "status": "ACTIVE",
                              "subnet_ids": [
                                "subnet-059ded1cc017cf540",
                                "subnet-05c7ecccf262ba5c7",
                                "subnet-0ec84094faab8977b"
                              ],
                              "tags": {
                                "Name": "ack-controllers"
                              },
                              "tags_all": {
                                "Name": "ack-controllers"
                              },
                              "taint": [],
                              "timeouts": {
                                "create": null,
                                "delete": null,
                                "update": null
                              },
                              "update_config": [
                                {
                                  "max_unavailable": 0,
                                  "max_unavailable_percentage": 33
                                }
                              ],
                              "version": "1.33"
                            },
                            "sensitive_values": {
                              "instance_types": [
                                false
                              ],
                              "labels": {},
                              "launch_template": [
                                {}
                              ],
                              "node_repair_config": [],
                              "remote_access": [],
                              "resources": [
                                {
                                  "autoscaling_groups": [
                                    {}
                                  ]
                                }
                              ],
                              "scaling_config": [
                                {}
                              ],
                              "subnet_ids": [
                                false,
                                false,
                                false
                              ],
                              "tags": {},
                              "tags_all": {},
                              "taint": [],
                              "timeouts": {},
                              "update_config": [
                                {}
                              ]
                            },
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_placement_group.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this",
                              "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                              "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                              "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                              "module.gen3-commons.module.gen3-eks.random_string.suffix"
                            ]
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "arn": "arn:aws:iam::682033468861:role/ack-controllers-eks-node-group-20250616201451225000000001",
                              "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                              "create_date": "2025-06-16T20:14:51Z",
                              "description": "EKS managed node group IAM role",
                              "force_detach_policies": true,
                              "id": "ack-controllers-eks-node-group-20250616201451225000000001",
                              "inline_policy": [],
                              "managed_policy_arns": [
                                "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                                "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                                "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                              ],
                              "max_session_duration": 3600,
                              "name": "ack-controllers-eks-node-group-20250616201451225000000001",
                              "name_prefix": "ack-controllers-eks-node-group-",
                              "path": "/",
                              "permissions_boundary": "",
                              "tags": {},
                              "tags_all": {},
                              "unique_id": "AROAZ5TC42W6VA6P3GPDM"
                            },
                            "sensitive_values": {
                              "inline_policy": [],
                              "managed_policy_arns": [
                                false,
                                false,
                                false
                              ],
                              "tags": {},
                              "tags_all": {}
                            },
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
                            ]
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEC2ContainerRegistryReadOnly\"]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "this",
                            "index": "AmazonEC2ContainerRegistryReadOnly",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451895700000006",
                              "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                              "role": "ack-controllers-eks-node-group-20250616201451225000000001"
                            },
                            "sensitive_values": {},
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_partition.current"
                            ]
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEKSWorkerNodePolicy\"]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "this",
                            "index": "AmazonEKSWorkerNodePolicy",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "id": "ack-controllers-eks-node-group-20250616201451225000000001-2025061620145196900000000a",
                              "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                              "role": "ack-controllers-eks-node-group-20250616201451225000000001"
                            },
                            "sensitive_values": {},
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_partition.current"
                            ]
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role_policy_attachment.this[\"AmazonEKS_CNI_Policy\"]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "this",
                            "index": "AmazonEKS_CNI_Policy",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "id": "ack-controllers-eks-node-group-20250616201451225000000001-20250616201451932800000007",
                              "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                              "role": "ack-controllers-eks-node-group-20250616201451225000000001"
                            },
                            "sensitive_values": {},
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_partition.current"
                            ]
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
                            "mode": "managed",
                            "type": "aws_launch_template",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "arn": "arn:aws:ec2:us-east-1:682033468861:launch-template/lt-0ab7ec77e56b808a9",
                              "block_device_mappings": [],
                              "capacity_reservation_specification": [],
                              "cpu_options": [],
                              "credit_specification": [],
                              "default_version": 1,
                              "description": "Custom launch template for ack-controllers EKS managed node group",
                              "disable_api_stop": false,
                              "disable_api_termination": false,
                              "ebs_optimized": "",
                              "elastic_gpu_specifications": [],
                              "elastic_inference_accelerator": [],
                              "enclave_options": [],
                              "hibernation_options": [],
                              "iam_instance_profile": [],
                              "id": "lt-0ab7ec77e56b808a9",
                              "image_id": "",
                              "instance_initiated_shutdown_behavior": "",
                              "instance_market_options": [],
                              "instance_requirements": [],
                              "instance_type": "",
                              "kernel_id": "",
                              "key_name": "",
                              "latest_version": 1,
                              "license_specification": [],
                              "maintenance_options": [],
                              "metadata_options": [
                                {
                                  "http_endpoint": "enabled",
                                  "http_protocol_ipv6": "",
                                  "http_put_response_hop_limit": 2,
                                  "http_tokens": "required",
                                  "instance_metadata_tags": ""
                                }
                              ],
                              "monitoring": [
                                {
                                  "enabled": true
                                }
                              ],
                              "name": "one-20250616202614002700000013",
                              "name_prefix": "one-",
                              "network_interfaces": [],
                              "placement": [],
                              "private_dns_name_options": [],
                              "ram_disk_id": "",
                              "security_group_names": [],
                              "tag_specifications": [
                                {
                                  "resource_type": "instance",
                                  "tags": {
                                    "Name": "ack-controllers"
                                  }
                                },
                                {
                                  "resource_type": "network-interface",
                                  "tags": {
                                    "Name": "ack-controllers"
                                  }
                                },
                                {
                                  "resource_type": "volume",
                                  "tags": {
                                    "Name": "ack-controllers"
                                  }
                                }
                              ],
                              "tags": {},
                              "tags_all": {},
                              "update_default_version": true,
                              "user_data": "",
                              "vpc_security_group_ids": [
                                "sg-0cd594b7fc78ab201"
                              ]
                            },
                            "sensitive_values": {
                              "block_device_mappings": [],
                              "capacity_reservation_specification": [],
                              "cpu_options": [],
                              "credit_specification": [],
                              "elastic_gpu_specifications": [],
                              "elastic_inference_accelerator": [],
                              "enclave_options": [],
                              "hibernation_options": [],
                              "iam_instance_profile": [],
                              "instance_market_options": [],
                              "instance_requirements": [],
                              "license_specification": [],
                              "maintenance_options": [],
                              "metadata_options": [
                                {}
                              ],
                              "monitoring": [
                                {}
                              ],
                              "network_interfaces": [],
                              "placement": [],
                              "private_dns_name_options": [],
                              "security_group_names": [],
                              "tag_specifications": [
                                {
                                  "tags": {}
                                },
                                {
                                  "tags": {}
                                },
                                {
                                  "tags": {}
                                }
                              ],
                              "tags": {},
                              "tags_all": {},
                              "vpc_security_group_ids": [
                                false
                              ]
                            },
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_placement_group.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this",
                              "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                              "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                              "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                              "module.gen3-commons.module.gen3-eks.random_string.suffix"
                            ]
                          }
                        ],
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"]",
                        "child_modules": [
                          {
                            "resources": [
                              {
                                "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
                                "mode": "managed",
                                "type": "null_resource",
                                "name": "validate_cluster_service_cidr",
                                "provider_name": "registry.terraform.io/hashicorp/null",
                                "schema_version": 0,
                                "values": {
                                  "id": "1205457099937568073",
                                  "triggers": null
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                  "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                                  "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                                  "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                                  "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                                  "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                                  "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                                  "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                                  "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                                  "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                                  "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this",
                                  "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                                  "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                                  "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                                  "module.gen3-commons.module.gen3-eks.random_string.suffix"
                                ]
                              }
                            ],
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data"
                          }
                        ]
                      },
                      {
                        "resources": [
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current[0]",
                            "mode": "data",
                            "type": "aws_caller_identity",
                            "name": "current",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "account_id": "682033468861",
                              "arn": "arn:aws:iam::682033468861:user/jimi-cto",
                              "id": "682033468861",
                              "user_id": "AIDAZ5TC42W66VBAS3KTX"
                            },
                            "sensitive_values": {}
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this[0]",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "id": "3873614184",
                              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::682033468861:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::682033468861:user/jimi-cto\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002\"\n      }\n    }\n  ]\n}",
                              "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:user/jimi-cto\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002\"}}]}",
                              "override_json": null,
                              "override_policy_documents": null,
                              "policy_id": null,
                              "source_json": null,
                              "source_policy_documents": null,
                              "statement": [
                                {
                                  "actions": [
                                    "kms:*"
                                  ],
                                  "condition": [],
                                  "effect": "Allow",
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        "arn:aws:iam::682033468861:root"
                                      ],
                                      "type": "AWS"
                                    }
                                  ],
                                  "resources": [
                                    "*"
                                  ],
                                  "sid": "Default"
                                },
                                {
                                  "actions": [
                                    "kms:CancelKeyDeletion",
                                    "kms:Create*",
                                    "kms:Delete*",
                                    "kms:Describe*",
                                    "kms:Disable*",
                                    "kms:Enable*",
                                    "kms:Get*",
                                    "kms:ImportKeyMaterial",
                                    "kms:List*",
                                    "kms:Put*",
                                    "kms:ReplicateKey",
                                    "kms:Revoke*",
                                    "kms:ScheduleKeyDeletion",
                                    "kms:TagResource",
                                    "kms:UntagResource",
                                    "kms:Update*"
                                  ],
                                  "condition": [],
                                  "effect": "Allow",
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        "arn:aws:iam::682033468861:user/jimi-cto"
                                      ],
                                      "type": "AWS"
                                    }
                                  ],
                                  "resources": [
                                    "*"
                                  ],
                                  "sid": "KeyAdministration"
                                },
                                {
                                  "actions": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:GenerateDataKey*",
                                    "kms:ReEncrypt*"
                                  ],
                                  "condition": [],
                                  "effect": "Allow",
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        "arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002"
                                      ],
                                      "type": "AWS"
                                    }
                                  ],
                                  "resources": [
                                    "*"
                                  ],
                                  "sid": "KeyUsage"
                                }
                              ],
                              "version": "2012-10-17"
                            },
                            "sensitive_values": {
                              "statement": [
                                {
                                  "actions": [
                                    false
                                  ],
                                  "condition": [],
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        false
                                      ]
                                    }
                                  ],
                                  "resources": [
                                    false
                                  ]
                                },
                                {
                                  "actions": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                  ],
                                  "condition": [],
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        false
                                      ]
                                    }
                                  ],
                                  "resources": [
                                    false
                                  ]
                                },
                                {
                                  "actions": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                  ],
                                  "condition": [],
                                  "not_actions": [],
                                  "not_principals": [],
                                  "not_resources": [],
                                  "principals": [
                                    {
                                      "identifiers": [
                                        false
                                      ]
                                    }
                                  ],
                                  "resources": [
                                    false
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current[0]",
                            "mode": "data",
                            "type": "aws_partition",
                            "name": "current",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "dns_suffix": "amazonaws.com",
                              "id": "aws",
                              "partition": "aws",
                              "reverse_dns_prefix": "com.amazonaws"
                            },
                            "sensitive_values": {}
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_alias.this[\"cluster\"]",
                            "mode": "managed",
                            "type": "aws_kms_alias",
                            "name": "this",
                            "index": "cluster",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "arn": "arn:aws:kms:us-east-1:682033468861:alias/eks/gen3-eks-cluster-IcA3",
                              "id": "alias/eks/gen3-eks-cluster-IcA3",
                              "name": "alias/eks/gen3-eks-cluster-IcA3",
                              "name_prefix": "",
                              "target_key_arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
                              "target_key_id": "9961c795-4032-4548-8e77-d961338d308b"
                            },
                            "sensitive_values": {},
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.random_string.suffix"
                            ]
                          },
                          {
                            "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this[0]",
                            "mode": "managed",
                            "type": "aws_kms_key",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                              "arn": "arn:aws:kms:us-east-1:682033468861:key/9961c795-4032-4548-8e77-d961338d308b",
                              "bypass_policy_lockout_safety_check": false,
                              "custom_key_store_id": "",
                              "customer_master_key_spec": "SYMMETRIC_DEFAULT",
                              "deletion_window_in_days": null,
                              "description": "gen3-eks-cluster-IcA3 cluster encryption key",
                              "enable_key_rotation": true,
                              "id": "9961c795-4032-4548-8e77-d961338d308b",
                              "is_enabled": true,
                              "key_id": "9961c795-4032-4548-8e77-d961338d308b",
                              "key_usage": "ENCRYPT_DECRYPT",
                              "multi_region": false,
                              "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:user/jimi-cto\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::682033468861:role/gen3-eks-cluster-IcA3-cluster-20250616201451225200000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
                              "rotation_period_in_days": 365,
                              "tags": {
                                "terraform-aws-modules": "eks"
                              },
                              "tags_all": {
                                "terraform-aws-modules": "eks"
                              },
                              "timeouts": null,
                              "xks_key_id": ""
                            },
                            "sensitive_values": {
                              "tags": {},
                              "tags_all": {}
                            },
                            "depends_on": [
                              "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                              "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                              "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                              "module.gen3-commons.module.gen3-eks.random_string.suffix"
                            ]
                          }
                        ],
                        "address": "module.gen3-commons.module.gen3-eks.module.eks.module.kms"
                      }
                    ]
                  },
                  {
                    "resources": [
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_caller_identity.current",
                        "mode": "data",
                        "type": "aws_caller_identity",
                        "name": "current",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "account_id": "682033468861",
                          "arn": "arn:aws:iam::682033468861:user/jimi-cto",
                          "id": "682033468861",
                          "user_id": "AIDAZ5TC42W66VBAS3KTX"
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc[0]",
                        "mode": "data",
                        "type": "aws_iam_policy_document",
                        "name": "assume_role_with_oidc",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "3076118961",
                          "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRoleWithWebIdentity\"\n      ],\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\": \"system:serviceaccount:kube-system:ebs-csi-controller-sa\"\n        }\n      }\n    }\n  ]\n}",
                          "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"},\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}}}]}",
                          "override_json": null,
                          "override_policy_documents": null,
                          "policy_id": null,
                          "source_json": null,
                          "source_policy_documents": null,
                          "statement": [
                            {
                              "actions": [
                                "sts:AssumeRoleWithWebIdentity",
                                "sts:TagSession"
                              ],
                              "condition": [
                                {
                                  "test": "StringEquals",
                                  "values": [
                                    "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                                  ],
                                  "variable": "oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub"
                                }
                              ],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [
                                {
                                  "identifiers": [
                                    "arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595"
                                  ],
                                  "type": "Federated"
                                }
                              ],
                              "resources": [],
                              "sid": ""
                            }
                          ],
                          "version": "2012-10-17"
                        },
                        "sensitive_values": {
                          "statement": [
                            {
                              "actions": [
                                false,
                                false
                              ],
                              "condition": [
                                {
                                  "values": [
                                    false
                                  ]
                                }
                              ],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [
                                {
                                  "identifiers": [
                                    false
                                  ]
                                }
                              ],
                              "resources": []
                            }
                          ]
                        }
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_partition.current",
                        "mode": "data",
                        "type": "aws_partition",
                        "name": "current",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "dns_suffix": "amazonaws.com",
                          "id": "aws",
                          "partition": "aws",
                          "reverse_dns_prefix": "com.amazonaws"
                        },
                        "sensitive_values": {}
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
                        "mode": "managed",
                        "type": "aws_iam_role",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:iam::682033468861:role/AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                          "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRoleWithWebIdentity\"],\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::682033468861:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E8356FF502DD0AFB16A769E55143B595\"}}],\"Version\":\"2012-10-17\"}",
                          "create_date": "2025-06-16T20:25:45Z",
                          "description": "",
                          "force_detach_policies": false,
                          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                          "inline_policy": [],
                          "managed_policy_arns": [
                            "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
                          ],
                          "max_session_duration": 3600,
                          "name": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3",
                          "name_prefix": "",
                          "path": "/",
                          "permissions_boundary": "",
                          "tags": {},
                          "tags_all": {},
                          "unique_id": "AROAZ5TC42W6TOZ3BFEVD"
                        },
                        "sensitive_values": {
                          "inline_policy": [],
                          "managed_policy_arns": [
                            false
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]",
                        "mode": "managed",
                        "type": "aws_iam_role_policy_attachment",
                        "name": "custom",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3-20250616202545891800000012",
                          "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
                          "role": "AmazonEKSTFEBSCSIRole-gen3-eks-cluster-IcA3"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.data.aws_iam_policy.ebs_csi_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_policy.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.eks_auto",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role_policy_attachment.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.cluster",
                          "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group_rule.node",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_policy_document.node_assume_role_policy",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this",
                          "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_caller_identity.current",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc",
                          "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.data.aws_partition.current",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                          "module.gen3-commons.module.gen3-eks.random_string.suffix"
                        ]
                      }
                    ],
                    "address": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi"
                  },
                  {
                    "resources": [
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_network_acl.this[0]",
                        "mode": "managed",
                        "type": "aws_default_network_acl",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:network-acl/acl-0b068930a56d09c81",
                          "default_network_acl_id": "acl-0b068930a56d09c81",
                          "egress": [
                            {
                              "action": "allow",
                              "cidr_block": "",
                              "from_port": 0,
                              "icmp_code": 0,
                              "icmp_type": 0,
                              "ipv6_cidr_block": "::/0",
                              "protocol": "-1",
                              "rule_no": 101,
                              "to_port": 0
                            },
                            {
                              "action": "allow",
                              "cidr_block": "0.0.0.0/0",
                              "from_port": 0,
                              "icmp_code": 0,
                              "icmp_type": 0,
                              "ipv6_cidr_block": "",
                              "protocol": "-1",
                              "rule_no": 100,
                              "to_port": 0
                            }
                          ],
                          "id": "acl-0b068930a56d09c81",
                          "ingress": [
                            {
                              "action": "allow",
                              "cidr_block": "",
                              "from_port": 0,
                              "icmp_code": 0,
                              "icmp_type": 0,
                              "ipv6_cidr_block": "::/0",
                              "protocol": "-1",
                              "rule_no": 101,
                              "to_port": 0
                            },
                            {
                              "action": "allow",
                              "cidr_block": "0.0.0.0/0",
                              "from_port": 0,
                              "icmp_code": 0,
                              "icmp_type": 0,
                              "ipv6_cidr_block": "",
                              "protocol": "-1",
                              "rule_no": 100,
                              "to_port": 0
                            }
                          ],
                          "owner_id": "682033468861",
                          "subnet_ids": [
                            "subnet-059ded1cc017cf540",
                            "subnet-05c7ecccf262ba5c7",
                            "subnet-0b7e06de8d4d99ce8",
                            "subnet-0c2c042c7bb820a1d",
                            "subnet-0ec84094faab8977b",
                            "subnet-0fa7b61e3603a36a6"
                          ],
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-default"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-default"
                          },
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "egress": [
                            {},
                            {}
                          ],
                          "ingress": [
                            {},
                            {}
                          ],
                          "subnet_ids": [
                            false,
                            false,
                            false,
                            false,
                            false,
                            false
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_route_table.default[0]",
                        "mode": "managed",
                        "type": "aws_default_route_table",
                        "name": "default",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0715941188c0806bd",
                          "default_route_table_id": "rtb-0715941188c0806bd",
                          "id": "rtb-0715941188c0806bd",
                          "owner_id": "682033468861",
                          "propagating_vgws": [],
                          "route": [],
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-default"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-default"
                          },
                          "timeouts": {
                            "create": "5m",
                            "update": "5m"
                          },
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "propagating_vgws": [],
                          "route": [],
                          "tags": {},
                          "tags_all": {},
                          "timeouts": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_default_security_group.this[0]",
                        "mode": "managed",
                        "type": "aws_default_security_group",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:security-group/sg-01ed6e2c39aec4b16",
                          "description": "default VPC security group",
                          "egress": [],
                          "id": "sg-01ed6e2c39aec4b16",
                          "ingress": [],
                          "name": "default",
                          "name_prefix": "",
                          "owner_id": "682033468861",
                          "revoke_rules_on_delete": false,
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-default"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-default"
                          },
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "egress": [],
                          "ingress": [],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat[0]",
                        "mode": "managed",
                        "type": "aws_eip",
                        "name": "nat",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "address": null,
                          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
                          "arn": "arn:aws:ec2:us-east-1:682033468861:elastic-ip/eipalloc-0a3d7bc7e2af311bf",
                          "associate_with_private_ip": null,
                          "association_id": "eipassoc-0c2d7d052e239f642",
                          "carrier_ip": "",
                          "customer_owned_ip": "",
                          "customer_owned_ipv4_pool": "",
                          "domain": "vpc",
                          "id": "eipalloc-0a3d7bc7e2af311bf",
                          "instance": "",
                          "ipam_pool_id": null,
                          "network_border_group": "us-east-1",
                          "network_interface": "eni-02ea1b3c0294f49e5",
                          "private_dns": "ip-10-0-4-82.ec2.internal",
                          "private_ip": "10.0.4.82",
                          "ptr_record": "",
                          "public_dns": "ec2-52-45-251-205.compute-1.amazonaws.com",
                          "public_ip": "52.45.251.205",
                          "public_ipv4_pool": "amazon",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-us-east-1a"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-us-east-1a"
                          },
                          "timeouts": null,
                          "vpc": true
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this[0]",
                        "mode": "managed",
                        "type": "aws_internet_gateway",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:internet-gateway/igw-08c447be19c8c855b",
                          "id": "igw-08c447be19c8c855b",
                          "owner_id": "682033468861",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_nat_gateway.this[0]",
                        "mode": "managed",
                        "type": "aws_nat_gateway",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "allocation_id": "eipalloc-0a3d7bc7e2af311bf",
                          "association_id": "eipassoc-0c2d7d052e239f642",
                          "connectivity_type": "public",
                          "id": "nat-04e02b198cdb07701",
                          "network_interface_id": "eni-02ea1b3c0294f49e5",
                          "private_ip": "10.0.4.82",
                          "public_ip": "52.45.251.205",
                          "secondary_allocation_ids": [],
                          "secondary_private_ip_address_count": 0,
                          "secondary_private_ip_addresses": [],
                          "subnet_id": "subnet-0fa7b61e3603a36a6",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-us-east-1a"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-us-east-1a"
                          },
                          "timeouts": null
                        },
                        "sensitive_values": {
                          "secondary_allocation_ids": [],
                          "secondary_private_ip_addresses": [],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.private_nat_gateway[0]",
                        "mode": "managed",
                        "type": "aws_route",
                        "name": "private_nat_gateway",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "carrier_gateway_id": "",
                          "core_network_arn": "",
                          "destination_cidr_block": "0.0.0.0/0",
                          "destination_ipv6_cidr_block": "",
                          "destination_prefix_list_id": "",
                          "egress_only_gateway_id": "",
                          "gateway_id": "",
                          "id": "r-rtb-0957d9fc5bc7c2ebe1080289494",
                          "instance_id": "",
                          "instance_owner_id": "",
                          "local_gateway_id": "",
                          "nat_gateway_id": "nat-04e02b198cdb07701",
                          "network_interface_id": "",
                          "origin": "CreateRoute",
                          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                          "state": "active",
                          "timeouts": {
                            "create": "5m",
                            "delete": null,
                            "update": null
                          },
                          "transit_gateway_id": "",
                          "vpc_endpoint_id": "",
                          "vpc_peering_connection_id": ""
                        },
                        "sensitive_values": {
                          "timeouts": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_nat_gateway.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.public_internet_gateway[0]",
                        "mode": "managed",
                        "type": "aws_route",
                        "name": "public_internet_gateway",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "carrier_gateway_id": "",
                          "core_network_arn": "",
                          "destination_cidr_block": "0.0.0.0/0",
                          "destination_ipv6_cidr_block": "",
                          "destination_prefix_list_id": "",
                          "egress_only_gateway_id": "",
                          "gateway_id": "igw-08c447be19c8c855b",
                          "id": "r-rtb-0f571cf566c1ca6e71080289494",
                          "instance_id": "",
                          "instance_owner_id": "",
                          "local_gateway_id": "",
                          "nat_gateway_id": "",
                          "network_interface_id": "",
                          "origin": "CreateRoute",
                          "route_table_id": "rtb-0f571cf566c1ca6e7",
                          "state": "active",
                          "timeouts": {
                            "create": "5m",
                            "delete": null,
                            "update": null
                          },
                          "transit_gateway_id": "",
                          "vpc_endpoint_id": "",
                          "vpc_peering_connection_id": ""
                        },
                        "sensitive_values": {
                          "timeouts": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private[0]",
                        "mode": "managed",
                        "type": "aws_route_table",
                        "name": "private",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0957d9fc5bc7c2ebe",
                          "id": "rtb-0957d9fc5bc7c2ebe",
                          "owner_id": "682033468861",
                          "propagating_vgws": [],
                          "route": [
                            {
                              "carrier_gateway_id": "",
                              "cidr_block": "0.0.0.0/0",
                              "core_network_arn": "",
                              "destination_prefix_list_id": "",
                              "egress_only_gateway_id": "",
                              "gateway_id": "",
                              "ipv6_cidr_block": "",
                              "local_gateway_id": "",
                              "nat_gateway_id": "nat-04e02b198cdb07701",
                              "network_interface_id": "",
                              "transit_gateway_id": "",
                              "vpc_endpoint_id": "",
                              "vpc_peering_connection_id": ""
                            }
                          ],
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-private"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-private"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "propagating_vgws": [],
                          "route": [
                            {}
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public[0]",
                        "mode": "managed",
                        "type": "aws_route_table",
                        "name": "public",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:route-table/rtb-0f571cf566c1ca6e7",
                          "id": "rtb-0f571cf566c1ca6e7",
                          "owner_id": "682033468861",
                          "propagating_vgws": [],
                          "route": [
                            {
                              "carrier_gateway_id": "",
                              "cidr_block": "0.0.0.0/0",
                              "core_network_arn": "",
                              "destination_prefix_list_id": "",
                              "egress_only_gateway_id": "",
                              "gateway_id": "igw-08c447be19c8c855b",
                              "ipv6_cidr_block": "",
                              "local_gateway_id": "",
                              "nat_gateway_id": "",
                              "network_interface_id": "",
                              "transit_gateway_id": "",
                              "vpc_endpoint_id": "",
                              "vpc_peering_connection_id": ""
                            }
                          ],
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-public"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-public"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "propagating_vgws": [],
                          "route": [
                            {}
                          ],
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[0]",
                        "mode": "managed",
                        "type": "aws_route_table_association",
                        "name": "private",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "gateway_id": "",
                          "id": "rtbassoc-0b4c06bbd0023a7b7",
                          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                          "subnet_id": "subnet-05c7ecccf262ba5c7",
                          "timeouts": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[1]",
                        "mode": "managed",
                        "type": "aws_route_table_association",
                        "name": "private",
                        "index": 1,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "gateway_id": "",
                          "id": "rtbassoc-065ccdb63e53203b2",
                          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                          "subnet_id": "subnet-059ded1cc017cf540",
                          "timeouts": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private[2]",
                        "mode": "managed",
                        "type": "aws_route_table_association",
                        "name": "private",
                        "index": 2,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "gateway_id": "",
                          "id": "rtbassoc-0d6af0aff28a09621",
                          "route_table_id": "rtb-0957d9fc5bc7c2ebe",
                          "subnet_id": "subnet-0ec84094faab8977b",
                          "timeouts": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[0]",
                        "mode": "managed",
                        "type": "aws_route_table_association",
                        "name": "public",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "gateway_id": "",
                          "id": "rtbassoc-0e406b7695169580a",
                          "route_table_id": "rtb-0f571cf566c1ca6e7",
                          "subnet_id": "subnet-0fa7b61e3603a36a6",
                          "timeouts": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[1]",
                        "mode": "managed",
                        "type": "aws_route_table_association",
                        "name": "public",
                        "index": 1,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "gateway_id": "",
                          "id": "rtbassoc-026e02d338322a78b",
                          "route_table_id": "rtb-0f571cf566c1ca6e7",
                          "subnet_id": "subnet-0b7e06de8d4d99ce8",
                          "timeouts": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public[2]",
                        "mode": "managed",
                        "type": "aws_route_table_association",
                        "name": "public",
                        "index": 2,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "gateway_id": "",
                          "id": "rtbassoc-050de29121729d099",
                          "route_table_id": "rtb-0f571cf566c1ca6e7",
                          "subnet_id": "subnet-0c2c042c7bb820a1d",
                          "timeouts": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[0]",
                        "mode": "managed",
                        "type": "aws_subnet",
                        "name": "private",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-05c7ecccf262ba5c7",
                          "assign_ipv6_address_on_creation": false,
                          "availability_zone": "us-east-1a",
                          "availability_zone_id": "use1-az4",
                          "cidr_block": "10.0.1.0/24",
                          "customer_owned_ipv4_pool": "",
                          "enable_dns64": false,
                          "enable_lni_at_device_index": 0,
                          "enable_resource_name_dns_a_record_on_launch": false,
                          "enable_resource_name_dns_aaaa_record_on_launch": false,
                          "id": "subnet-05c7ecccf262ba5c7",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_association_id": "",
                          "ipv6_native": false,
                          "map_customer_owned_ip_on_launch": false,
                          "map_public_ip_on_launch": false,
                          "outpost_arn": "",
                          "owner_id": "682033468861",
                          "private_dns_hostname_type_on_launch": "ip-name",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
                            "kubernetes.io/role/internal-elb": "1"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-private-us-east-1a",
                            "kubernetes.io/role/internal-elb": "1"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[1]",
                        "mode": "managed",
                        "type": "aws_subnet",
                        "name": "private",
                        "index": 1,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-059ded1cc017cf540",
                          "assign_ipv6_address_on_creation": false,
                          "availability_zone": "us-east-1b",
                          "availability_zone_id": "use1-az6",
                          "cidr_block": "10.0.2.0/24",
                          "customer_owned_ipv4_pool": "",
                          "enable_dns64": false,
                          "enable_lni_at_device_index": 0,
                          "enable_resource_name_dns_a_record_on_launch": false,
                          "enable_resource_name_dns_aaaa_record_on_launch": false,
                          "id": "subnet-059ded1cc017cf540",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_association_id": "",
                          "ipv6_native": false,
                          "map_customer_owned_ip_on_launch": false,
                          "map_public_ip_on_launch": false,
                          "outpost_arn": "",
                          "owner_id": "682033468861",
                          "private_dns_hostname_type_on_launch": "ip-name",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
                            "kubernetes.io/role/internal-elb": "1"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-private-us-east-1b",
                            "kubernetes.io/role/internal-elb": "1"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private[2]",
                        "mode": "managed",
                        "type": "aws_subnet",
                        "name": "private",
                        "index": 2,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0ec84094faab8977b",
                          "assign_ipv6_address_on_creation": false,
                          "availability_zone": "us-east-1c",
                          "availability_zone_id": "use1-az1",
                          "cidr_block": "10.0.3.0/24",
                          "customer_owned_ipv4_pool": "",
                          "enable_dns64": false,
                          "enable_lni_at_device_index": 0,
                          "enable_resource_name_dns_a_record_on_launch": false,
                          "enable_resource_name_dns_aaaa_record_on_launch": false,
                          "id": "subnet-0ec84094faab8977b",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_association_id": "",
                          "ipv6_native": false,
                          "map_customer_owned_ip_on_launch": false,
                          "map_public_ip_on_launch": false,
                          "outpost_arn": "",
                          "owner_id": "682033468861",
                          "private_dns_hostname_type_on_launch": "ip-name",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
                            "kubernetes.io/role/internal-elb": "1"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-private-us-east-1c",
                            "kubernetes.io/role/internal-elb": "1"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[0]",
                        "mode": "managed",
                        "type": "aws_subnet",
                        "name": "public",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0fa7b61e3603a36a6",
                          "assign_ipv6_address_on_creation": false,
                          "availability_zone": "us-east-1a",
                          "availability_zone_id": "use1-az4",
                          "cidr_block": "10.0.4.0/24",
                          "customer_owned_ipv4_pool": "",
                          "enable_dns64": false,
                          "enable_lni_at_device_index": 0,
                          "enable_resource_name_dns_a_record_on_launch": false,
                          "enable_resource_name_dns_aaaa_record_on_launch": false,
                          "id": "subnet-0fa7b61e3603a36a6",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_association_id": "",
                          "ipv6_native": false,
                          "map_customer_owned_ip_on_launch": false,
                          "map_public_ip_on_launch": false,
                          "outpost_arn": "",
                          "owner_id": "682033468861",
                          "private_dns_hostname_type_on_launch": "ip-name",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
                            "kubernetes.io/role/elb": "1"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-public-us-east-1a",
                            "kubernetes.io/role/elb": "1"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[1]",
                        "mode": "managed",
                        "type": "aws_subnet",
                        "name": "public",
                        "index": 1,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0b7e06de8d4d99ce8",
                          "assign_ipv6_address_on_creation": false,
                          "availability_zone": "us-east-1b",
                          "availability_zone_id": "use1-az6",
                          "cidr_block": "10.0.5.0/24",
                          "customer_owned_ipv4_pool": "",
                          "enable_dns64": false,
                          "enable_lni_at_device_index": 0,
                          "enable_resource_name_dns_a_record_on_launch": false,
                          "enable_resource_name_dns_aaaa_record_on_launch": false,
                          "id": "subnet-0b7e06de8d4d99ce8",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_association_id": "",
                          "ipv6_native": false,
                          "map_customer_owned_ip_on_launch": false,
                          "map_public_ip_on_launch": false,
                          "outpost_arn": "",
                          "owner_id": "682033468861",
                          "private_dns_hostname_type_on_launch": "ip-name",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
                            "kubernetes.io/role/elb": "1"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-public-us-east-1b",
                            "kubernetes.io/role/elb": "1"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public[2]",
                        "mode": "managed",
                        "type": "aws_subnet",
                        "name": "public",
                        "index": 2,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:subnet/subnet-0c2c042c7bb820a1d",
                          "assign_ipv6_address_on_creation": false,
                          "availability_zone": "us-east-1c",
                          "availability_zone_id": "use1-az1",
                          "cidr_block": "10.0.6.0/24",
                          "customer_owned_ipv4_pool": "",
                          "enable_dns64": false,
                          "enable_lni_at_device_index": 0,
                          "enable_resource_name_dns_a_record_on_launch": false,
                          "enable_resource_name_dns_aaaa_record_on_launch": false,
                          "id": "subnet-0c2c042c7bb820a1d",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_association_id": "",
                          "ipv6_native": false,
                          "map_customer_owned_ip_on_launch": false,
                          "map_public_ip_on_launch": false,
                          "outpost_arn": "",
                          "owner_id": "682033468861",
                          "private_dns_hostname_type_on_launch": "ip-name",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
                            "kubernetes.io/role/elb": "1"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc-public-us-east-1c",
                            "kubernetes.io/role/elb": "1"
                          },
                          "timeouts": null,
                          "vpc_id": "vpc-010949b4d7c177dee"
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        },
                        "depends_on": [
                          "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this",
                          "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      {
                        "address": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
                        "mode": "managed",
                        "type": "aws_vpc",
                        "name": "this",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                          "arn": "arn:aws:ec2:us-east-1:682033468861:vpc/vpc-010949b4d7c177dee",
                          "assign_generated_ipv6_cidr_block": false,
                          "cidr_block": "10.0.0.0/16",
                          "default_network_acl_id": "acl-0b068930a56d09c81",
                          "default_route_table_id": "rtb-0715941188c0806bd",
                          "default_security_group_id": "sg-01ed6e2c39aec4b16",
                          "dhcp_options_id": "dopt-0ab4ec95fccd1714a",
                          "enable_dns_hostnames": true,
                          "enable_dns_support": true,
                          "enable_network_address_usage_metrics": false,
                          "id": "vpc-010949b4d7c177dee",
                          "instance_tenancy": "default",
                          "ipv4_ipam_pool_id": null,
                          "ipv4_netmask_length": null,
                          "ipv6_association_id": "",
                          "ipv6_cidr_block": "",
                          "ipv6_cidr_block_network_border_group": "",
                          "ipv6_ipam_pool_id": "",
                          "ipv6_netmask_length": 0,
                          "main_route_table_id": "rtb-0715941188c0806bd",
                          "owner_id": "682033468861",
                          "tags": {
                            "Name": "gen3-eks-cluster-vpc"
                          },
                          "tags_all": {
                            "Name": "gen3-eks-cluster-vpc"
                          }
                        },
                        "sensitive_values": {
                          "tags": {},
                          "tags_all": {}
                        }
                      }
                    ],
                    "address": "module.gen3-commons.module.gen3-eks.module.vpc"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "expressions": {
          "profile": {
            "constant_value": "jayadeyemi"
          },
          "region": {
            "constant_value": "us-east-1"
          }
        }
      },
      "cloudinit": {
        "name": "cloudinit",
        "full_name": "registry.terraform.io/hashicorp/cloudinit",
        "version_constraint": "~> 2.3.4"
      },
      "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "version_constraint": ">= 4.0.0",
        "module_address": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service"
      },
      "module.gen3-commons.module.gen3-ack-controllers:helm": {
        "name": "helm",
        "full_name": "registry.terraform.io/hashicorp/helm",
        "module_address": "module.gen3-commons.module.gen3-ack-controllers"
      },
      "module.gen3-commons.module.gen3-ack-controllers:null": {
        "name": "null",
        "full_name": "registry.terraform.io/hashicorp/null",
        "module_address": "module.gen3-commons.module.gen3-ack-controllers"
      },
      "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data:cloudinit": {
        "name": "cloudinit",
        "full_name": "registry.terraform.io/hashicorp/cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data"
      },
      "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data:null": {
        "name": "null",
        "full_name": "registry.terraform.io/hashicorp/null",
        "version_constraint": ">= 3.0.0",
        "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data"
      },
      "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data:cloudinit": {
        "name": "cloudinit",
        "full_name": "registry.terraform.io/hashicorp/cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data"
      },
      "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data:null": {
        "name": "null",
        "full_name": "registry.terraform.io/hashicorp/null",
        "version_constraint": ">= 3.0.0",
        "module_address": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data"
      },
      "module.gen3-commons.module.gen3-eks.module.eks:time": {
        "name": "time",
        "full_name": "registry.terraform.io/hashicorp/time",
        "version_constraint": ">= 0.9.0",
        "module_address": "module.gen3-commons.module.gen3-eks.module.eks"
      },
      "module.gen3-commons.module.gen3-eks.module.eks:tls": {
        "name": "tls",
        "full_name": "registry.terraform.io/hashicorp/tls",
        "version_constraint": ">= 3.0.0",
        "module_address": "module.gen3-commons.module.gen3-eks.module.eks"
      },
      "module.gen3-commons.module.gen3-eks:aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "module_address": "module.gen3-commons.module.gen3-eks"
      },
      "module.gen3-commons.module.gen3-eks:helm": {
        "name": "helm",
        "full_name": "registry.terraform.io/hashicorp/helm",
        "module_address": "module.gen3-commons.module.gen3-eks",
        "expressions": {
          "kubernetes": [
            {
              "cluster_ca_certificate": {
                "references": [
                  "module.eks.cluster_certificate_authority_data",
                  "module.eks"
                ]
              },
              "host": {
                "references": [
                  "module.eks.cluster_endpoint",
                  "module.eks"
                ]
              },
              "token": {
                "references": [
                  "data.aws_eks_cluster_auth.eks.token",
                  "data.aws_eks_cluster_auth.eks"
                ]
              }
            }
          ],
          "registry_config_path": {}
        }
      },
      "module.gen3-commons.module.gen3-eks:kubernetes": {
        "name": "kubernetes",
        "full_name": "registry.terraform.io/hashicorp/kubernetes",
        "module_address": "module.gen3-commons.module.gen3-eks",
        "expressions": {
          "cluster_ca_certificate": {
            "references": [
              "module.eks.cluster_certificate_authority_data",
              "module.eks"
            ]
          },
          "host": {
            "references": [
              "module.eks.cluster_endpoint",
              "module.eks"
            ]
          },
          "token": {
            "references": [
              "data.aws_eks_cluster_auth.eks.token",
              "data.aws_eks_cluster_auth.eks"
            ]
          }
        }
      },
      "module.gen3-commons.module.gen3-eks:random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "module_address": "module.gen3-commons.module.gen3-eks"
      },
      "random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "version_constraint": "~> 3.6.1"
      },
      "tls": {
        "name": "tls",
        "full_name": "registry.terraform.io/hashicorp/tls",
        "version_constraint": "~> 4.0.5"
      }
    },
    "root_module": {
      "outputs": {
        "ack_controller_role_arns": {
          "expression": {
            "references": [
              "module.gen3-commons.ack_controller_role_arns",
              "module.gen3-commons"
            ]
          },
          "description": "IAM role ARNs for each ACK controller, keyed by service"
        },
        "ack_controller_statuses": {
          "expression": {
            "references": [
              "module.gen3-commons.ack_controller_statuses",
              "module.gen3-commons"
            ]
          },
          "description": "Helm release status for each ACK controller"
        },
        "cluster_endpoint": {
          "expression": {
            "references": [
              "module.gen3-commons.cluster_endpoint",
              "module.gen3-commons"
            ]
          },
          "description": "Endpoint for EKS control plane"
        },
        "cluster_name": {
          "expression": {
            "references": [
              "module.gen3-commons.cluster_name",
              "module.gen3-commons"
            ]
          },
          "description": "Kubernetes Cluster Name"
        },
        "cluster_security_group_id": {
          "expression": {
            "references": [
              "module.gen3-commons.cluster_security_group_id",
              "module.gen3-commons"
            ]
          },
          "description": "Security group ids attached to the cluster control plane"
        },
        "region": {
          "expression": {
            "references": [
              "var.region"
            ]
          },
          "description": "AWS region"
        }
      },
      "module_calls": {
        "gen3-commons": {
          "source": "./scripts/terraform",
          "expressions": {
            "ack_service_map": {
              "references": [
                "var.ack_service_map"
              ]
            },
            "cluster_name": {
              "references": [
                "var.cluster_name"
              ]
            },
            "cluster_random_suffix": {
              "references": [
                "var.cluster_random_suffix"
              ]
            },
            "region": {
              "references": [
                "var.region"
              ]
            }
          },
          "module": {
            "outputs": {
              "ack_controller_role_arns": {
                "expression": {
                  "references": [
                    "module.gen3-ack-controllers.ack_controller_role_arns",
                    "module.gen3-ack-controllers"
                  ]
                },
                "description": "IAM role ARNs for each ACK controller, keyed by service"
              },
              "ack_controller_statuses": {
                "expression": {
                  "references": [
                    "module.gen3-ack-controllers.ack_controller_statuses",
                    "module.gen3-ack-controllers"
                  ]
                },
                "description": "Helm release status for each ACK controller"
              },
              "cluster_endpoint": {
                "expression": {
                  "references": [
                    "module.gen3-eks.cluster_endpoint",
                    "module.gen3-eks"
                  ]
                },
                "description": "Endpoint for EKS control plane"
              },
              "cluster_name": {
                "expression": {
                  "references": [
                    "module.gen3-eks.eks_cluster_name",
                    "module.gen3-eks"
                  ]
                },
                "description": "Kubernetes Cluster Name"
              },
              "cluster_security_group_id": {
                "expression": {
                  "references": [
                    "module.gen3-eks.cluster_security_group_id",
                    "module.gen3-eks"
                  ]
                },
                "description": "Security group ids attached to the cluster control plane"
              },
              "region": {
                "expression": {
                  "references": [
                    "var.region"
                  ]
                },
                "description": "AWS region"
              }
            },
            "module_calls": {
              "gen3-ack-controllers": {
                "source": "./ack-bootstrap",
                "expressions": {
                  "AWS_ACCOUNT_ID": {
                    "references": [
                      "var.AWS_ACCOUNT_ID"
                    ]
                  },
                  "ack_service_map": {
                    "references": [
                      "var.ack_service_map"
                    ]
                  },
                  "eks_cluster_name": {
                    "references": [
                      "module.gen3-eks.eks_cluster_name",
                      "module.gen3-eks"
                    ]
                  },
                  "region": {
                    "references": [
                      "var.region"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "ack_controller_role_arns": {
                      "expression": {
                        "references": [
                          "module.irsa_ack_service"
                        ]
                      },
                      "description": "IAM role ARNs for each ACK controller, keyed by service"
                    },
                    "ack_controller_statuses": {
                      "expression": {
                        "references": [
                          "helm_release.ack_service_controller"
                        ]
                      },
                      "description": "Helm release status for each ACK controller, keyed by service"
                    }
                  },
                  "resources": [
                    {
                      "address": "helm_release.ack_service_controller",
                      "mode": "managed",
                      "type": "helm_release",
                      "name": "ack_service_controller",
                      "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers:helm",
                      "expressions": {
                        "chart": {
                          "references": [
                            "each.key"
                          ]
                        },
                        "create_namespace": {
                          "constant_value": true
                        },
                        "name": {
                          "references": [
                            "each.key"
                          ]
                        },
                        "namespace": {
                          "references": [
                            "each.value.namespace",
                            "each.value"
                          ]
                        },
                        "set": [
                          {
                            "name": {
                              "constant_value": "aws.region"
                            },
                            "value": {
                              "references": [
                                "var.region"
                              ]
                            }
                          },
                          {
                            "name": {
                              "constant_value": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn"
                            },
                            "value": {
                              "references": [
                                "each.value.policy_arn",
                                "each.value"
                              ]
                            }
                          },
                          {
                            "name": {
                              "constant_value": "serviceAccount.name"
                            },
                            "value": {
                              "references": [
                                "each.value.service_account_name",
                                "each.value"
                              ]
                            }
                          }
                        ],
                        "version": {
                          "references": [
                            "each.value.version",
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "local.service_config"
                        ]
                      },
                      "depends_on": [
                        "module.irsa_ack_service"
                      ]
                    },
                    {
                      "address": "null_resource.helm_registry_login",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "helm_registry_login",
                      "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers:null",
                      "provisioners": [
                        {
                          "type": "local-exec",
                          "expressions": {
                            "command": {
                              "constant_value": "aws ecr-public get-login-password --region us-east-1 | \\\n  helm registry login --username AWS --password-stdin public.ecr.aws\n"
                            }
                          }
                        }
                      ],
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "irsa_ack_service": {
                      "source": "terraform-aws-modules/iam/aws//modules/iam-assumable-role-with-oidc",
                      "expressions": {
                        "create_role": {
                          "constant_value": true
                        },
                        "oidc_fully_qualified_subjects": {
                          "references": [
                            "each.value.namespace",
                            "each.value",
                            "each.value.service_account_name",
                            "each.value"
                          ]
                        },
                        "provider_url": {
                          "references": [
                            "var.eks_oidc_issuer_url"
                          ]
                        },
                        "role_name": {
                          "references": [
                            "var.eks_cluster_name",
                            "each.key"
                          ]
                        },
                        "role_policy_arns": {
                          "references": [
                            "each.value.policy_arn",
                            "each.value"
                          ]
                        }
                      },
                      "for_each_expression": {
                        "references": [
                          "local.service_config"
                        ]
                      },
                      "module": {
                        "outputs": {
                          "iam_role_arn": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].arn",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "ARN of IAM role"
                          },
                          "iam_role_name": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].name",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Name of IAM role"
                          },
                          "iam_role_path": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].path",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Path of IAM role"
                          },
                          "iam_role_unique_id": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].unique_id",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Unique ID of IAM role"
                          }
                        },
                        "resources": [
                          {
                            "address": "aws_iam_role.this",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "expressions": {
                              "assume_role_policy": {
                                "references": [
                                  "data.aws_iam_policy_document.assume_role_with_oidc[0].json",
                                  "data.aws_iam_policy_document.assume_role_with_oidc[0]",
                                  "data.aws_iam_policy_document.assume_role_with_oidc"
                                ]
                              },
                              "description": {
                                "references": [
                                  "var.role_description"
                                ]
                              },
                              "force_detach_policies": {
                                "references": [
                                  "var.force_detach_policies"
                                ]
                              },
                              "max_session_duration": {
                                "references": [
                                  "var.max_session_duration"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.role_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.role_name_prefix"
                                ]
                              },
                              "path": {
                                "references": [
                                  "var.role_path"
                                ]
                              },
                              "permissions_boundary": {
                                "references": [
                                  "var.role_permissions_boundary_arn"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy.inline",
                            "mode": "managed",
                            "type": "aws_iam_role_policy",
                            "name": "inline",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "expressions": {
                              "name_prefix": {
                                "references": [
                                  "var.role_name"
                                ]
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.inline[0].json",
                                  "data.aws_iam_policy_document.inline[0]",
                                  "data.aws_iam_policy_document.inline"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role_inline_policy"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.custom",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "custom",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "var.role_policy_arns",
                                  "count.index"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_role",
                                "local.number_of_role_policy_arns"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_caller_identity.current",
                            "mode": "data",
                            "type": "aws_caller_identity",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "schema_version": 0
                          },
                          {
                            "address": "data.aws_iam_policy_document.assume_role_with_oidc",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "assume_role_with_oidc",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_role"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.inline",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "inline",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role_inline_policy"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_partition.current",
                            "mode": "data",
                            "type": "aws_partition",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service:aws",
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "allow_self_assume_role": {
                            "default": false,
                            "description": "Determines whether to allow the role to be [assume itself](https://aws.amazon.com/blogs/security/announcing-an-update-to-iam-role-trust-policy-behavior/)"
                          },
                          "aws_account_id": {
                            "default": "",
                            "description": "The AWS account ID where the OIDC provider lives, leave empty to use the account for the AWS provider"
                          },
                          "create_role": {
                            "default": false,
                            "description": "Whether to create a role"
                          },
                          "force_detach_policies": {
                            "default": false,
                            "description": "Whether policies should be detached from this role when destroying"
                          },
                          "inline_policy_statements": {
                            "default": [],
                            "description": "List of inline policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) to attach to IAM role as an inline policy"
                          },
                          "max_session_duration": {
                            "default": 3600,
                            "description": "Maximum CLI/API session duration in seconds between 3600 and 43200"
                          },
                          "number_of_role_policy_arns": {
                            "default": null,
                            "description": "Number of IAM policies to attach to IAM role"
                          },
                          "oidc_fully_qualified_audiences": {
                            "default": [],
                            "description": "The audience to be added to the role policy. Set to sts.amazonaws.com for cross-account assumable role. Leave empty otherwise."
                          },
                          "oidc_fully_qualified_subjects": {
                            "default": [],
                            "description": "The fully qualified OIDC subjects to be added to the role policy"
                          },
                          "oidc_subjects_with_wildcards": {
                            "default": [],
                            "description": "The OIDC subject using wildcards to be added to the role policy"
                          },
                          "provider_trust_policy_conditions": {
                            "default": [],
                            "description": "[Condition constraints](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#condition) applied to the trust policy"
                          },
                          "provider_url": {
                            "default": "",
                            "description": "URL of the OIDC Provider. Use provider_urls to specify several URLs."
                          },
                          "provider_urls": {
                            "default": [],
                            "description": "List of URLs of the OIDC Providers"
                          },
                          "role_description": {
                            "default": "",
                            "description": "IAM Role description"
                          },
                          "role_name": {
                            "default": null,
                            "description": "IAM role name"
                          },
                          "role_name_prefix": {
                            "default": null,
                            "description": "IAM role name prefix"
                          },
                          "role_path": {
                            "default": "/",
                            "description": "Path of IAM role"
                          },
                          "role_permissions_boundary_arn": {
                            "default": "",
                            "description": "Permissions boundary ARN to use for IAM role"
                          },
                          "role_policy_arns": {
                            "default": [],
                            "description": "List of ARNs of IAM policies to attach to IAM role"
                          },
                          "tags": {
                            "default": {},
                            "description": "A map of tags to add to IAM role resources"
                          }
                        }
                      },
                      "version_constraint": "5.58.0"
                    }
                  },
                  "variables": {
                    "AWS_ACCOUNT_ID": {
                      "default": "123456789012",
                      "description": "AWS account ID"
                    },
                    "ack_namespace": {
                      "default": "ack-system",
                      "description": "Namespace for ACK services"
                    },
                    "ack_service_map": {
                      "default": {
                        "s3": "1.1.3"
                      },
                      "description": "Map of ACK service names to their versions"
                    },
                    "eks_cluster_name": {
                      "default": "gen3-eks-cluster",
                      "description": "unique name of the EKS cluster"
                    },
                    "eks_oidc_issuer_url": {
                      "default": "https://oidc.eks.us-east-1.amazonaws.com/id/EXAMPLE",
                      "description": "OIDC issuer URL for the EKS cluster"
                    },
                    "region": {
                      "default": "us-east-1",
                      "description": "AWS region"
                    }
                  }
                }
              },
              "gen3-eks": {
                "source": "./eks",
                "expressions": {
                  "ack_service_map": {
                    "references": [
                      "var.ack_service_map"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "cluster_random_suffix": {
                    "references": [
                      "var.cluster_random_suffix"
                    ]
                  },
                  "region": {
                    "references": [
                      "var.region"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "cluster_endpoint": {
                      "expression": {
                        "references": [
                          "module.eks.cluster_endpoint",
                          "module.eks"
                        ]
                      },
                      "description": "Endpoint for EKS control plane"
                    },
                    "cluster_security_group_id": {
                      "expression": {
                        "references": [
                          "module.eks.cluster_security_group_id",
                          "module.eks"
                        ]
                      },
                      "description": "Security group ids attached to the cluster control plane"
                    },
                    "eks_cluster_name": {
                      "expression": {
                        "references": [
                          "local.cluster_name"
                        ]
                      },
                      "description": "Unique name of the EKS cluster"
                    },
                    "eks_oidc_issuer_url": {
                      "expression": {
                        "references": [
                          "module.eks.oidc_provider",
                          "module.eks"
                        ]
                      },
                      "description": "OIDC issuer URL for the EKS cluster"
                    },
                    "region": {
                      "expression": {
                        "references": [
                          "var.region"
                        ]
                      },
                      "description": "AWS region"
                    }
                  },
                  "resources": [
                    {
                      "address": "random_string.suffix",
                      "mode": "managed",
                      "type": "random_string",
                      "name": "suffix",
                      "provider_config_key": "module.gen3-commons.module.gen3-eks:random",
                      "expressions": {
                        "length": {
                          "constant_value": 4
                        },
                        "special": {
                          "constant_value": false
                        }
                      },
                      "schema_version": 2
                    },
                    {
                      "address": "data.aws_availability_zones.available",
                      "mode": "data",
                      "type": "aws_availability_zones",
                      "name": "available",
                      "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                      "expressions": {
                        "filter": [
                          {
                            "name": {
                              "constant_value": "opt-in-status"
                            },
                            "values": {
                              "constant_value": [
                                "opt-in-not-required"
                              ]
                            }
                          }
                        ]
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy.ebs_csi_policy",
                      "mode": "data",
                      "type": "aws_iam_policy",
                      "name": "ebs_csi_policy",
                      "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                      "expressions": {
                        "arn": {
                          "constant_value": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "eks": {
                      "source": "terraform-aws-modules/eks/aws",
                      "expressions": {
                        "cluster_addons": {
                          "references": [
                            "module.irsa-ebs-csi.iam_role_arn",
                            "module.irsa-ebs-csi"
                          ]
                        },
                        "cluster_endpoint_public_access": {
                          "constant_value": true
                        },
                        "cluster_name": {
                          "references": [
                            "local.cluster_name"
                          ]
                        },
                        "cluster_version": {
                          "constant_value": "1.33"
                        },
                        "eks_managed_node_group_defaults": {
                          "constant_value": {
                            "ami_type": "AL2023_x86_64_STANDARD"
                          }
                        },
                        "eks_managed_node_groups": {
                          "constant_value": {
                            "one": {
                              "desired_size": 1,
                              "instance_types": [
                                "t3.small"
                              ],
                              "max_size": 3,
                              "min_size": 1,
                              "name": "ack-controllers"
                            }
                          }
                        },
                        "enable_cluster_creator_admin_permissions": {
                          "constant_value": true
                        },
                        "subnet_ids": {
                          "references": [
                            "module.vpc.private_subnets",
                            "module.vpc"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "module.vpc.vpc_id",
                            "module.vpc"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "access_entries": {
                            "expression": {
                              "references": [
                                "aws_eks_access_entry.this"
                              ]
                            },
                            "description": "Map of access entries created and their attributes"
                          },
                          "access_policy_associations": {
                            "expression": {
                              "references": [
                                "aws_eks_access_policy_association.this"
                              ]
                            },
                            "description": "Map of eks cluster access policy associations created and their attributes"
                          },
                          "cloudwatch_log_group_arn": {
                            "expression": {
                              "references": [
                                "aws_cloudwatch_log_group.this[0].arn",
                                "aws_cloudwatch_log_group.this[0]",
                                "aws_cloudwatch_log_group.this"
                              ]
                            },
                            "description": "Arn of cloudwatch log group created"
                          },
                          "cloudwatch_log_group_name": {
                            "expression": {
                              "references": [
                                "aws_cloudwatch_log_group.this[0].name",
                                "aws_cloudwatch_log_group.this[0]",
                                "aws_cloudwatch_log_group.this"
                              ]
                            },
                            "description": "Name of cloudwatch log group created"
                          },
                          "cluster_addons": {
                            "expression": {
                              "references": [
                                "aws_eks_addon.this",
                                "aws_eks_addon.before_compute"
                              ]
                            },
                            "description": "Map of attribute maps for all EKS cluster addons enabled"
                          },
                          "cluster_arn": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].arn",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "depends_on": [
                              "aws_eks_access_entry.this",
                              "aws_eks_access_policy_association.this"
                            ],
                            "description": "The Amazon Resource Name (ARN) of the cluster"
                          },
                          "cluster_certificate_authority_data": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].certificate_authority[0].data",
                                "aws_eks_cluster.this[0].certificate_authority[0]",
                                "aws_eks_cluster.this[0].certificate_authority",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "depends_on": [
                              "aws_eks_access_entry.this",
                              "aws_eks_access_policy_association.this"
                            ],
                            "description": "Base64 encoded certificate data required to communicate with the cluster"
                          },
                          "cluster_dualstack_oidc_issuer_url": {
                            "expression": {
                              "references": [
                                "local.dualstack_oidc_issuer_url"
                              ]
                            },
                            "description": "Dual-stack compatible URL on the EKS cluster for the OpenID Connect identity provider"
                          },
                          "cluster_endpoint": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].endpoint",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "depends_on": [
                              "aws_eks_access_entry.this",
                              "aws_eks_access_policy_association.this"
                            ],
                            "description": "Endpoint for your Kubernetes API server"
                          },
                          "cluster_iam_role_arn": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].arn",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Cluster IAM role ARN"
                          },
                          "cluster_iam_role_name": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].name",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Cluster IAM role name"
                          },
                          "cluster_iam_role_unique_id": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].unique_id",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Stable and unique string identifying the IAM role"
                          },
                          "cluster_id": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].cluster_id",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "The ID of the EKS cluster. Note: currently a value is returned only for local EKS clusters created on Outposts"
                          },
                          "cluster_identity_providers": {
                            "expression": {
                              "references": [
                                "aws_eks_identity_provider_config.this"
                              ]
                            },
                            "description": "Map of attribute maps for all EKS identity providers enabled"
                          },
                          "cluster_ip_family": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].kubernetes_network_config[0].ip_family",
                                "aws_eks_cluster.this[0].kubernetes_network_config[0]",
                                "aws_eks_cluster.this[0].kubernetes_network_config",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "The IP family used by the cluster (e.g. `ipv4` or `ipv6`)"
                          },
                          "cluster_name": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].name",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "depends_on": [
                              "aws_eks_access_entry.this",
                              "aws_eks_access_policy_association.this"
                            ],
                            "description": "The name of the EKS cluster"
                          },
                          "cluster_oidc_issuer_url": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                                "aws_eks_cluster.this[0].identity[0].oidc[0]",
                                "aws_eks_cluster.this[0].identity[0].oidc",
                                "aws_eks_cluster.this[0].identity[0]",
                                "aws_eks_cluster.this[0].identity",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "The URL on the EKS cluster for the OpenID Connect identity provider"
                          },
                          "cluster_platform_version": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].platform_version",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "Platform version for the cluster"
                          },
                          "cluster_primary_security_group_id": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                                "aws_eks_cluster.this[0].vpc_config[0]",
                                "aws_eks_cluster.this[0].vpc_config",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication. Referred to as 'Cluster security group' in the EKS console"
                          },
                          "cluster_security_group_arn": {
                            "expression": {
                              "references": [
                                "aws_security_group.cluster[0].arn",
                                "aws_security_group.cluster[0]",
                                "aws_security_group.cluster"
                              ]
                            },
                            "description": "Amazon Resource Name (ARN) of the cluster security group"
                          },
                          "cluster_security_group_id": {
                            "expression": {
                              "references": [
                                "aws_security_group.cluster[0].id",
                                "aws_security_group.cluster[0]",
                                "aws_security_group.cluster"
                              ]
                            },
                            "description": "ID of the cluster security group"
                          },
                          "cluster_service_cidr": {
                            "expression": {
                              "references": [
                                "var.cluster_ip_family",
                                "aws_eks_cluster.this[0].kubernetes_network_config[0].service_ipv6_cidr",
                                "aws_eks_cluster.this[0].kubernetes_network_config[0]",
                                "aws_eks_cluster.this[0].kubernetes_network_config",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this",
                                "aws_eks_cluster.this[0].kubernetes_network_config[0].service_ipv4_cidr",
                                "aws_eks_cluster.this[0].kubernetes_network_config[0]",
                                "aws_eks_cluster.this[0].kubernetes_network_config",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "The CIDR block where Kubernetes pod and service IP addresses are assigned from"
                          },
                          "cluster_status": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].status",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`"
                          },
                          "cluster_tls_certificate_sha1_fingerprint": {
                            "expression": {
                              "references": [
                                "data.tls_certificate.this[0].certificates[0].sha1_fingerprint",
                                "data.tls_certificate.this[0].certificates[0]",
                                "data.tls_certificate.this[0].certificates",
                                "data.tls_certificate.this[0]",
                                "data.tls_certificate.this"
                              ]
                            },
                            "description": "The SHA1 fingerprint of the public key of the cluster's certificate"
                          },
                          "cluster_version": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].version",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "The Kubernetes version for the cluster"
                          },
                          "eks_managed_node_groups": {
                            "expression": {
                              "references": [
                                "module.eks_managed_node_group"
                              ]
                            },
                            "description": "Map of attribute maps for all EKS managed node groups created"
                          },
                          "eks_managed_node_groups_autoscaling_group_names": {
                            "expression": {
                              "references": [
                                "module.eks_managed_node_group"
                              ]
                            },
                            "description": "List of the autoscaling group names created by EKS managed node groups"
                          },
                          "fargate_profiles": {
                            "expression": {
                              "references": [
                                "module.fargate_profile"
                              ]
                            },
                            "description": "Map of attribute maps for all EKS Fargate Profiles created"
                          },
                          "kms_key_arn": {
                            "expression": {
                              "references": [
                                "module.kms.key_arn",
                                "module.kms"
                              ]
                            },
                            "description": "The Amazon Resource Name (ARN) of the key"
                          },
                          "kms_key_id": {
                            "expression": {
                              "references": [
                                "module.kms.key_id",
                                "module.kms"
                              ]
                            },
                            "description": "The globally unique identifier for the key"
                          },
                          "kms_key_policy": {
                            "expression": {
                              "references": [
                                "module.kms.key_policy",
                                "module.kms"
                              ]
                            },
                            "description": "The IAM resource policy set on the key"
                          },
                          "node_iam_role_arn": {
                            "expression": {
                              "references": [
                                "aws_iam_role.eks_auto[0].arn",
                                "aws_iam_role.eks_auto[0]",
                                "aws_iam_role.eks_auto"
                              ]
                            },
                            "description": "EKS Auto node IAM role ARN"
                          },
                          "node_iam_role_name": {
                            "expression": {
                              "references": [
                                "aws_iam_role.eks_auto[0].name",
                                "aws_iam_role.eks_auto[0]",
                                "aws_iam_role.eks_auto"
                              ]
                            },
                            "description": "EKS Auto node IAM role name"
                          },
                          "node_iam_role_unique_id": {
                            "expression": {
                              "references": [
                                "aws_iam_role.eks_auto[0].unique_id",
                                "aws_iam_role.eks_auto[0]",
                                "aws_iam_role.eks_auto"
                              ]
                            },
                            "description": "Stable and unique string identifying the IAM role"
                          },
                          "node_security_group_arn": {
                            "expression": {
                              "references": [
                                "aws_security_group.node[0].arn",
                                "aws_security_group.node[0]",
                                "aws_security_group.node"
                              ]
                            },
                            "description": "Amazon Resource Name (ARN) of the node shared security group"
                          },
                          "node_security_group_id": {
                            "expression": {
                              "references": [
                                "aws_security_group.node[0].id",
                                "aws_security_group.node[0]",
                                "aws_security_group.node"
                              ]
                            },
                            "description": "ID of the node shared security group"
                          },
                          "oidc_provider": {
                            "expression": {
                              "references": [
                                "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                                "aws_eks_cluster.this[0].identity[0].oidc[0]",
                                "aws_eks_cluster.this[0].identity[0].oidc",
                                "aws_eks_cluster.this[0].identity[0]",
                                "aws_eks_cluster.this[0].identity",
                                "aws_eks_cluster.this[0]",
                                "aws_eks_cluster.this"
                              ]
                            },
                            "description": "The OpenID Connect identity provider (issuer URL without leading `https://`)"
                          },
                          "oidc_provider_arn": {
                            "expression": {
                              "references": [
                                "aws_iam_openid_connect_provider.oidc_provider[0].arn",
                                "aws_iam_openid_connect_provider.oidc_provider[0]",
                                "aws_iam_openid_connect_provider.oidc_provider"
                              ]
                            },
                            "description": "The ARN of the OIDC Provider if `enable_irsa = true`"
                          },
                          "self_managed_node_groups": {
                            "expression": {
                              "references": [
                                "module.self_managed_node_group"
                              ]
                            },
                            "description": "Map of attribute maps for all self managed node groups created"
                          },
                          "self_managed_node_groups_autoscaling_group_names": {
                            "expression": {
                              "references": [
                                "module.self_managed_node_group"
                              ]
                            },
                            "description": "List of the autoscaling group names created by self-managed node groups"
                          }
                        },
                        "resources": [
                          {
                            "address": "aws_cloudwatch_log_group.this",
                            "mode": "managed",
                            "type": "aws_cloudwatch_log_group",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "kms_key_id": {
                                "references": [
                                  "var.cloudwatch_log_group_kms_key_id"
                                ]
                              },
                              "log_group_class": {
                                "references": [
                                  "var.cloudwatch_log_group_class"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.cluster_name"
                                ]
                              },
                              "retention_in_days": {
                                "references": [
                                  "var.cloudwatch_log_group_retention_in_days"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.cloudwatch_log_group_tags",
                                  "var.cluster_name"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create",
                                "var.create_cloudwatch_log_group"
                              ]
                            }
                          },
                          {
                            "address": "aws_ec2_tag.cluster_primary_security_group",
                            "mode": "managed",
                            "type": "aws_ec2_tag",
                            "name": "cluster_primary_security_group",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "key": {
                                "references": [
                                  "each.key"
                                ]
                              },
                              "resource_id": {
                                "references": [
                                  "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                                  "aws_eks_cluster.this[0].vpc_config[0]",
                                  "aws_eks_cluster.this[0].vpc_config",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "value": {
                                "references": [
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.tags",
                                "var.cluster_tags",
                                "local.create",
                                "var.create_cluster_primary_security_group_tags"
                              ]
                            }
                          },
                          {
                            "address": "aws_eks_access_entry.this",
                            "mode": "managed",
                            "type": "aws_eks_access_entry",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cluster_name": {
                                "references": [
                                  "aws_eks_cluster.this[0].id",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "kubernetes_groups": {
                                "references": [
                                  "each.value.kubernetes_groups",
                                  "each.value"
                                ]
                              },
                              "principal_arn": {
                                "references": [
                                  "each.value.principal_arn",
                                  "each.value"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value"
                                ]
                              },
                              "type": {
                                "references": [
                                  "each.value.type",
                                  "each.value"
                                ]
                              },
                              "user_name": {
                                "references": [
                                  "each.value.user_name",
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "local.merged_access_entries",
                                "local.create"
                              ]
                            }
                          },
                          {
                            "address": "aws_eks_access_policy_association.this",
                            "mode": "managed",
                            "type": "aws_eks_access_policy_association",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "access_scope": [
                                {
                                  "namespaces": {
                                    "references": [
                                      "each.value.association_access_scope_namespaces",
                                      "each.value"
                                    ]
                                  },
                                  "type": {
                                    "references": [
                                      "each.value.association_access_scope_type",
                                      "each.value"
                                    ]
                                  }
                                }
                              ],
                              "cluster_name": {
                                "references": [
                                  "aws_eks_cluster.this[0].id",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "policy_arn": {
                                "references": [
                                  "each.value.association_policy_arn",
                                  "each.value"
                                ]
                              },
                              "principal_arn": {
                                "references": [
                                  "each.value.principal_arn",
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "local.flattened_access_entries",
                                "local.create"
                              ]
                            },
                            "depends_on": [
                              "aws_eks_access_entry.this"
                            ]
                          },
                          {
                            "address": "aws_eks_addon.before_compute",
                            "mode": "managed",
                            "type": "aws_eks_addon",
                            "name": "before_compute",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "addon_name": {
                                "references": [
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "addon_version": {
                                "references": [
                                  "each.value.addon_version",
                                  "each.value",
                                  "data.aws_eks_addon_version.this",
                                  "each.key"
                                ]
                              },
                              "cluster_name": {
                                "references": [
                                  "aws_eks_cluster.this[0].id",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "configuration_values": {
                                "references": [
                                  "each.value.configuration_values",
                                  "each.value"
                                ]
                              },
                              "preserve": {
                                "references": [
                                  "each.value.preserve",
                                  "each.value"
                                ]
                              },
                              "resolve_conflicts_on_create": {
                                "references": [
                                  "each.value.resolve_conflicts_on_create",
                                  "each.value",
                                  "local.resolve_conflicts_on_create_default"
                                ]
                              },
                              "resolve_conflicts_on_update": {
                                "references": [
                                  "each.value.resolve_conflicts_on_update",
                                  "each.value"
                                ]
                              },
                              "service_account_role_arn": {
                                "references": [
                                  "each.value.service_account_role_arn",
                                  "each.value"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "references": [
                                    "each.value.timeouts.create",
                                    "each.value.timeouts",
                                    "each.value",
                                    "var.cluster_addons_timeouts.create",
                                    "var.cluster_addons_timeouts"
                                  ]
                                },
                                "delete": {
                                  "references": [
                                    "each.value.timeouts.delete",
                                    "each.value.timeouts",
                                    "each.value",
                                    "var.cluster_addons_timeouts.delete",
                                    "var.cluster_addons_timeouts"
                                  ]
                                },
                                "update": {
                                  "references": [
                                    "each.value.timeouts.update",
                                    "each.value.timeouts",
                                    "each.value",
                                    "var.cluster_addons_timeouts.update",
                                    "var.cluster_addons_timeouts"
                                  ]
                                }
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.cluster_addons",
                                "local.create",
                                "local.create_outposts_local_cluster"
                              ]
                            }
                          },
                          {
                            "address": "aws_eks_addon.this",
                            "mode": "managed",
                            "type": "aws_eks_addon",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "addon_name": {
                                "references": [
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "addon_version": {
                                "references": [
                                  "each.value.addon_version",
                                  "each.value",
                                  "data.aws_eks_addon_version.this",
                                  "each.key"
                                ]
                              },
                              "cluster_name": {
                                "references": [
                                  "aws_eks_cluster.this[0].id",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "configuration_values": {
                                "references": [
                                  "each.value.configuration_values",
                                  "each.value"
                                ]
                              },
                              "preserve": {
                                "references": [
                                  "each.value.preserve",
                                  "each.value"
                                ]
                              },
                              "resolve_conflicts_on_create": {
                                "references": [
                                  "each.value.resolve_conflicts_on_create",
                                  "each.value",
                                  "local.resolve_conflicts_on_create_default"
                                ]
                              },
                              "resolve_conflicts_on_update": {
                                "references": [
                                  "each.value.resolve_conflicts_on_update",
                                  "each.value"
                                ]
                              },
                              "service_account_role_arn": {
                                "references": [
                                  "each.value.service_account_role_arn",
                                  "each.value"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "references": [
                                    "each.value.timeouts.create",
                                    "each.value.timeouts",
                                    "each.value",
                                    "var.cluster_addons_timeouts.create",
                                    "var.cluster_addons_timeouts"
                                  ]
                                },
                                "delete": {
                                  "references": [
                                    "each.value.timeouts.delete",
                                    "each.value.timeouts",
                                    "each.value",
                                    "var.cluster_addons_timeouts.delete",
                                    "var.cluster_addons_timeouts"
                                  ]
                                },
                                "update": {
                                  "references": [
                                    "each.value.timeouts.update",
                                    "each.value.timeouts",
                                    "each.value",
                                    "var.cluster_addons_timeouts.update",
                                    "var.cluster_addons_timeouts"
                                  ]
                                }
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.cluster_addons",
                                "local.create",
                                "local.create_outposts_local_cluster"
                              ]
                            },
                            "depends_on": [
                              "module.fargate_profile",
                              "module.eks_managed_node_group",
                              "module.self_managed_node_group"
                            ]
                          },
                          {
                            "address": "aws_eks_cluster.this",
                            "mode": "managed",
                            "type": "aws_eks_cluster",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "access_config": [
                                {
                                  "authentication_mode": {
                                    "references": [
                                      "var.authentication_mode"
                                    ]
                                  },
                                  "bootstrap_cluster_creator_admin_permissions": {
                                    "constant_value": false
                                  }
                                }
                              ],
                              "bootstrap_self_managed_addons": {
                                "references": [
                                  "local.auto_mode_enabled",
                                  "var.bootstrap_self_managed_addons",
                                  "var.bootstrap_self_managed_addons"
                                ]
                              },
                              "enabled_cluster_log_types": {
                                "references": [
                                  "var.cluster_enabled_log_types"
                                ]
                              },
                              "force_update_version": {
                                "references": [
                                  "var.cluster_force_update_version"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.cluster_name"
                                ]
                              },
                              "role_arn": {
                                "references": [
                                  "local.cluster_role"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.cluster_tags"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "references": [
                                    "var.cluster_timeouts.create",
                                    "var.cluster_timeouts"
                                  ]
                                },
                                "delete": {
                                  "references": [
                                    "var.cluster_timeouts.delete",
                                    "var.cluster_timeouts"
                                  ]
                                },
                                "update": {
                                  "references": [
                                    "var.cluster_timeouts.update",
                                    "var.cluster_timeouts"
                                  ]
                                }
                              },
                              "version": {
                                "references": [
                                  "var.cluster_version"
                                ]
                              },
                              "vpc_config": [
                                {
                                  "endpoint_private_access": {
                                    "references": [
                                      "var.cluster_endpoint_private_access"
                                    ]
                                  },
                                  "endpoint_public_access": {
                                    "references": [
                                      "var.cluster_endpoint_public_access"
                                    ]
                                  },
                                  "public_access_cidrs": {
                                    "references": [
                                      "var.cluster_endpoint_public_access_cidrs"
                                    ]
                                  },
                                  "security_group_ids": {
                                    "references": [
                                      "var.cluster_additional_security_group_ids",
                                      "local.cluster_security_group_id"
                                    ]
                                  },
                                  "subnet_ids": {
                                    "references": [
                                      "var.control_plane_subnet_ids",
                                      "var.subnet_ids"
                                    ]
                                  }
                                }
                              ]
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create"
                              ]
                            },
                            "depends_on": [
                              "aws_iam_role_policy_attachment.this",
                              "aws_security_group_rule.cluster",
                              "aws_security_group_rule.node",
                              "aws_cloudwatch_log_group.this",
                              "aws_iam_policy.cni_ipv6_policy"
                            ]
                          },
                          {
                            "address": "aws_eks_identity_provider_config.this",
                            "mode": "managed",
                            "type": "aws_eks_identity_provider_config",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cluster_name": {
                                "references": [
                                  "aws_eks_cluster.this[0].id",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "oidc": [
                                {
                                  "client_id": {
                                    "references": [
                                      "each.value.client_id",
                                      "each.value"
                                    ]
                                  },
                                  "groups_claim": {
                                    "references": [
                                      "each.value"
                                    ]
                                  },
                                  "groups_prefix": {
                                    "references": [
                                      "each.value"
                                    ]
                                  },
                                  "identity_provider_config_name": {
                                    "references": [
                                      "each.value.identity_provider_config_name",
                                      "each.value",
                                      "each.key"
                                    ]
                                  },
                                  "issuer_url": {
                                    "references": [
                                      "each.value.issuer_url",
                                      "each.value",
                                      "local.idpc_issuer_url"
                                    ]
                                  },
                                  "required_claims": {
                                    "references": [
                                      "each.value"
                                    ]
                                  },
                                  "username_claim": {
                                    "references": [
                                      "each.value"
                                    ]
                                  },
                                  "username_prefix": {
                                    "references": [
                                      "each.value"
                                    ]
                                  }
                                }
                              ],
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.cluster_identity_providers",
                                "local.create",
                                "local.create_outposts_local_cluster"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_openid_connect_provider.oidc_provider",
                            "mode": "managed",
                            "type": "aws_iam_openid_connect_provider",
                            "name": "oidc_provider",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "client_id_list": {
                                "references": [
                                  "var.openid_connect_audiences"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.cluster_name",
                                  "var.tags"
                                ]
                              },
                              "thumbprint_list": {
                                "references": [
                                  "local.oidc_root_ca_thumbprint",
                                  "var.custom_oidc_thumbprints"
                                ]
                              },
                              "url": {
                                "references": [
                                  "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                                  "aws_eks_cluster.this[0].identity[0].oidc[0]",
                                  "aws_eks_cluster.this[0].identity[0].oidc",
                                  "aws_eks_cluster.this[0].identity[0]",
                                  "aws_eks_cluster.this[0].identity",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_oidc_provider"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_policy.cluster_encryption",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "cluster_encryption",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.cluster_encryption_policy_description"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.cluster_encryption_policy_use_name_prefix",
                                  "local.cluster_encryption_policy_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.cluster_encryption_policy_use_name_prefix",
                                  "local.cluster_encryption_policy_name"
                                ]
                              },
                              "path": {
                                "references": [
                                  "var.cluster_encryption_policy_path"
                                ]
                              },
                              "policy": {
                                "references": [
                                  "var.create_kms_key",
                                  "module.kms.key_arn",
                                  "module.kms",
                                  "var.cluster_encryption_config.provider_key_arn",
                                  "var.cluster_encryption_config"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.cluster_encryption_policy_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role",
                                "var.attach_cluster_encryption_policy",
                                "local.enable_cluster_encryption_config"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_policy.cni_ipv6_policy",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "cni_ipv6_policy",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "constant_value": "IAM policy for EKS CNI to assign IPV6 addresses"
                              },
                              "name": {
                                "constant_value": "AmazonEKS_CNI_IPv6_Policy"
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.cni_ipv6_policy[0].json",
                                  "data.aws_iam_policy_document.cni_ipv6_policy[0]",
                                  "data.aws_iam_policy_document.cni_ipv6_policy"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create",
                                "var.create_cni_ipv6_iam_policy"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_policy.custom",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "custom",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.iam_role_description"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.iam_role_use_name_prefix",
                                  "local.iam_role_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.iam_role_use_name_prefix",
                                  "local.iam_role_name"
                                ]
                              },
                              "path": {
                                "references": [
                                  "var.iam_role_path"
                                ]
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.custom[0].json",
                                  "data.aws_iam_policy_document.custom[0]",
                                  "data.aws_iam_policy_document.custom"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.iam_role_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role",
                                "var.enable_auto_mode_custom_tags"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role.eks_auto",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "eks_auto",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assume_role_policy": {
                                "references": [
                                  "data.aws_iam_policy_document.node_assume_role_policy[0].json",
                                  "data.aws_iam_policy_document.node_assume_role_policy[0]",
                                  "data.aws_iam_policy_document.node_assume_role_policy"
                                ]
                              },
                              "description": {
                                "references": [
                                  "var.node_iam_role_description"
                                ]
                              },
                              "force_detach_policies": {
                                "constant_value": true
                              },
                              "name": {
                                "references": [
                                  "var.node_iam_role_use_name_prefix",
                                  "local.node_iam_role_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.node_iam_role_use_name_prefix",
                                  "local.node_iam_role_name"
                                ]
                              },
                              "path": {
                                "references": [
                                  "var.node_iam_role_path"
                                ]
                              },
                              "permissions_boundary": {
                                "references": [
                                  "var.node_iam_role_permissions_boundary"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.node_iam_role_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_node_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role.this",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assume_role_policy": {
                                "references": [
                                  "data.aws_iam_policy_document.assume_role_policy[0].json",
                                  "data.aws_iam_policy_document.assume_role_policy[0]",
                                  "data.aws_iam_policy_document.assume_role_policy"
                                ]
                              },
                              "description": {
                                "references": [
                                  "var.iam_role_description"
                                ]
                              },
                              "force_detach_policies": {
                                "constant_value": true
                              },
                              "name": {
                                "references": [
                                  "var.iam_role_use_name_prefix",
                                  "local.iam_role_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.iam_role_use_name_prefix",
                                  "local.iam_role_name",
                                  "var.prefix_separator"
                                ]
                              },
                              "path": {
                                "references": [
                                  "var.iam_role_path"
                                ]
                              },
                              "permissions_boundary": {
                                "references": [
                                  "var.iam_role_permissions_boundary"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.iam_role_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.additional",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "additional",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.iam_role_additional_policies",
                                "local.create_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.cluster_encryption",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "cluster_encryption",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "aws_iam_policy.cluster_encryption[0].arn",
                                  "aws_iam_policy.cluster_encryption[0]",
                                  "aws_iam_policy.cluster_encryption"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role",
                                "var.attach_cluster_encryption_policy",
                                "local.enable_cluster_encryption_config"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.custom",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "custom",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "aws_iam_policy.custom[0].arn",
                                  "aws_iam_policy.custom[0]",
                                  "aws_iam_policy.custom"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role",
                                "var.enable_auto_mode_custom_tags"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.eks_auto",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "eks_auto",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.eks_auto[0].name",
                                  "aws_iam_role.eks_auto[0]",
                                  "aws_iam_role.eks_auto"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "local.iam_role_policy_prefix",
                                "local.iam_role_policy_prefix",
                                "local.create_node_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.eks_auto_additional",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "eks_auto_additional",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.eks_auto[0].name",
                                  "aws_iam_role.eks_auto[0]",
                                  "aws_iam_role.eks_auto"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.node_iam_role_additional_policies",
                                "local.create_node_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.this",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "local.eks_standard_iam_role_policies",
                                "local.eks_auto_mode_iam_role_policies",
                                "local.eks_outpost_iam_role_policies",
                                "local.eks_sgpp_iam_role_policies",
                                "local.create_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group.cluster",
                            "mode": "managed",
                            "type": "aws_security_group",
                            "name": "cluster",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.cluster_security_group_description"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.cluster_security_group_use_name_prefix",
                                  "local.cluster_sg_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.cluster_security_group_use_name_prefix",
                                  "local.cluster_sg_name",
                                  "var.prefix_separator"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "local.cluster_sg_name",
                                  "var.cluster_security_group_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "var.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_cluster_sg"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group.node",
                            "mode": "managed",
                            "type": "aws_security_group",
                            "name": "node",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.node_security_group_description"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.node_security_group_use_name_prefix",
                                  "local.node_sg_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.node_security_group_use_name_prefix",
                                  "local.node_sg_name",
                                  "var.prefix_separator"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "local.node_sg_name",
                                  "var.cluster_name",
                                  "var.node_security_group_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "var.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_node_sg"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.cluster",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "cluster",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "description": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "each.value.from_port",
                                  "each.value"
                                ]
                              },
                              "ipv6_cidr_blocks": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "prefix_list_ids": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "each.value.protocol",
                                  "each.value"
                                ]
                              },
                              "security_group_id": {
                                "references": [
                                  "aws_security_group.cluster[0].id",
                                  "aws_security_group.cluster[0]",
                                  "aws_security_group.cluster"
                                ]
                              },
                              "self": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "each.value.source_node_security_group",
                                  "each.value",
                                  "local.node_security_group_id",
                                  "each.value"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "each.value.to_port",
                                  "each.value"
                                ]
                              },
                              "type": {
                                "references": [
                                  "each.value.type",
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 2,
                            "for_each_expression": {
                              "references": [
                                "local.cluster_security_group_rules",
                                "var.cluster_security_group_additional_rules",
                                "local.create_cluster_sg"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.node",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "node",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "description": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "each.value.from_port",
                                  "each.value"
                                ]
                              },
                              "ipv6_cidr_blocks": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "prefix_list_ids": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "each.value.protocol",
                                  "each.value"
                                ]
                              },
                              "security_group_id": {
                                "references": [
                                  "aws_security_group.node[0].id",
                                  "aws_security_group.node[0]",
                                  "aws_security_group.node"
                                ]
                              },
                              "self": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "each.value.source_cluster_security_group",
                                  "each.value",
                                  "local.cluster_security_group_id",
                                  "each.value"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "each.value.to_port",
                                  "each.value"
                                ]
                              },
                              "type": {
                                "references": [
                                  "each.value.type",
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 2,
                            "for_each_expression": {
                              "references": [
                                "local.efa_security_group_rules",
                                "local.node_security_group_rules",
                                "local.node_security_group_recommended_rules",
                                "var.node_security_group_additional_rules",
                                "local.create_node_sg"
                              ]
                            }
                          },
                          {
                            "address": "time_sleep.this",
                            "mode": "managed",
                            "type": "time_sleep",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks:time",
                            "expressions": {
                              "create_duration": {
                                "references": [
                                  "var.dataplane_wait_duration"
                                ]
                              },
                              "triggers": {
                                "references": [
                                  "aws_eks_cluster.this[0].id",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this",
                                  "aws_eks_cluster.this[0].endpoint",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this",
                                  "aws_eks_cluster.this[0].version",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this",
                                  "var.cluster_ip_family",
                                  "local.kubernetes_network_config.service_ipv6_cidr",
                                  "local.kubernetes_network_config",
                                  "local.kubernetes_network_config.service_ipv4_cidr",
                                  "local.kubernetes_network_config",
                                  "aws_eks_cluster.this[0].certificate_authority[0].data",
                                  "aws_eks_cluster.this[0].certificate_authority[0]",
                                  "aws_eks_cluster.this[0].certificate_authority",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_caller_identity.current",
                            "mode": "data",
                            "type": "aws_caller_identity",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_eks_addon_version.this",
                            "mode": "data",
                            "type": "aws_eks_addon_version",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "addon_name": {
                                "references": [
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "kubernetes_version": {
                                "references": [
                                  "var.cluster_version",
                                  "aws_eks_cluster.this[0].version",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "most_recent": {
                                "references": [
                                  "each.value.most_recent",
                                  "each.value"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.cluster_addons",
                                "local.create",
                                "local.create_outposts_local_cluster"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.assume_role_policy",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "assume_role_policy",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "sts:AssumeRole",
                                      "sts:TagSession"
                                    ]
                                  },
                                  "principals": [
                                    {
                                      "identifiers": {
                                        "constant_value": [
                                          "eks.amazonaws.com"
                                        ]
                                      },
                                      "type": {
                                        "constant_value": "Service"
                                      }
                                    }
                                  ],
                                  "sid": {
                                    "constant_value": "EKSClusterAssumeRole"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create",
                                "var.create_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.cni_ipv6_policy",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "cni_ipv6_policy",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "ec2:AssignIpv6Addresses",
                                      "ec2:DescribeInstances",
                                      "ec2:DescribeTags",
                                      "ec2:DescribeNetworkInterfaces",
                                      "ec2:DescribeInstanceTypes"
                                    ]
                                  },
                                  "resources": {
                                    "constant_value": [
                                      "*"
                                    ]
                                  },
                                  "sid": {
                                    "constant_value": "AssignDescribe"
                                  }
                                },
                                {
                                  "actions": {
                                    "constant_value": [
                                      "ec2:CreateTags"
                                    ]
                                  },
                                  "resources": {
                                    "references": [
                                      "local.partition"
                                    ]
                                  },
                                  "sid": {
                                    "constant_value": "CreateTags"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create",
                                "var.create_cni_ipv6_iam_policy"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.custom",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "custom",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role",
                                "var.enable_auto_mode_custom_tags"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.node_assume_role_policy",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "node_assume_role_policy",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "sts:AssumeRole",
                                      "sts:TagSession"
                                    ]
                                  },
                                  "principals": [
                                    {
                                      "identifiers": {
                                        "constant_value": [
                                          "ec2.amazonaws.com"
                                        ]
                                      },
                                      "type": {
                                        "constant_value": "Service"
                                      }
                                    }
                                  ],
                                  "sid": {
                                    "constant_value": "EKSAutoNodeAssumeRole"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_node_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_session_context.current",
                            "mode": "data",
                            "type": "aws_iam_session_context",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "arn": {
                                "references": [
                                  "data.aws_caller_identity.current[0].arn",
                                  "data.aws_caller_identity.current[0]",
                                  "data.aws_caller_identity.current"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_partition.current",
                            "mode": "data",
                            "type": "aws_partition",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create"
                              ]
                            }
                          },
                          {
                            "address": "data.tls_certificate.this",
                            "mode": "data",
                            "type": "tls_certificate",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks:tls",
                            "expressions": {
                              "url": {
                                "references": [
                                  "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                                  "aws_eks_cluster.this[0].identity[0].oidc[0]",
                                  "aws_eks_cluster.this[0].identity[0].oidc",
                                  "aws_eks_cluster.this[0].identity[0]",
                                  "aws_eks_cluster.this[0].identity",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_oidc_provider",
                                "var.include_oidc_root_ca_thumbprint"
                              ]
                            }
                          }
                        ],
                        "module_calls": {
                          "eks_managed_node_group": {
                            "source": "./modules/eks-managed-node-group",
                            "expressions": {
                              "ami_id": {
                                "references": [
                                  "each.value.ami_id",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.ami_id",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "ami_release_version": {
                                "references": [
                                  "each.value.ami_release_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.ami_release_version",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "ami_type": {
                                "references": [
                                  "each.value.ami_type",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.ami_type",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "block_device_mappings": {
                                "references": [
                                  "each.value.block_device_mappings",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.block_device_mappings",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "bootstrap_extra_args": {
                                "references": [
                                  "each.value.bootstrap_extra_args",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.bootstrap_extra_args",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "capacity_reservation_specification": {
                                "references": [
                                  "each.value.capacity_reservation_specification",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.capacity_reservation_specification",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "capacity_type": {
                                "references": [
                                  "each.value.capacity_type",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.capacity_type",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "cloudinit_post_nodeadm": {
                                "references": [
                                  "each.value.cloudinit_post_nodeadm",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.cloudinit_post_nodeadm",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "cloudinit_pre_nodeadm": {
                                "references": [
                                  "each.value.cloudinit_pre_nodeadm",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.cloudinit_pre_nodeadm",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "cluster_auth_base64": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_certificate_authority_data\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_endpoint": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_endpoint\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_ip_family": {
                                "references": [
                                  "var.cluster_ip_family"
                                ]
                              },
                              "cluster_name": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_name\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_primary_security_group_id": {
                                "references": [
                                  "each.value.attach_cluster_primary_security_group",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.attach_cluster_primary_security_group",
                                  "var.eks_managed_node_group_defaults",
                                  "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                                  "aws_eks_cluster.this[0].vpc_config[0]",
                                  "aws_eks_cluster.this[0].vpc_config",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "cluster_service_cidr": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_service_cidr\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_service_ipv4_cidr": {
                                "references": [
                                  "var.cluster_service_ipv4_cidr"
                                ]
                              },
                              "cluster_version": {
                                "references": [
                                  "each.value.cluster_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.cluster_version",
                                  "var.eks_managed_node_group_defaults",
                                  "time_sleep.this[0].triggers[\"cluster_version\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cpu_options": {
                                "references": [
                                  "each.value.cpu_options",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.cpu_options",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "create": {
                                "references": [
                                  "each.value.create",
                                  "each.value"
                                ]
                              },
                              "create_iam_role": {
                                "references": [
                                  "each.value.create_iam_role",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.create_iam_role",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "create_iam_role_policy": {
                                "references": [
                                  "each.value.create_iam_role_policy",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.create_iam_role_policy",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "create_launch_template": {
                                "references": [
                                  "each.value.create_launch_template",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.create_launch_template",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "create_placement_group": {
                                "references": [
                                  "each.value.create_placement_group",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.create_placement_group",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "create_schedule": {
                                "references": [
                                  "each.value.create_schedule",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.create_schedule",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "credit_specification": {
                                "references": [
                                  "each.value.credit_specification",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.credit_specification",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "desired_size": {
                                "references": [
                                  "each.value.desired_size",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.desired_size",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "disable_api_termination": {
                                "references": [
                                  "each.value.disable_api_termination",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.disable_api_termination",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "disk_size": {
                                "references": [
                                  "each.value.disk_size",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.disk_size",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "ebs_optimized": {
                                "references": [
                                  "each.value.ebs_optimized",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.ebs_optimized",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "efa_indices": {
                                "references": [
                                  "each.value.efa_indices",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.efa_indices",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "elastic_gpu_specifications": {
                                "references": [
                                  "each.value.elastic_gpu_specifications",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.elastic_gpu_specifications",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "elastic_inference_accelerator": {
                                "references": [
                                  "each.value.elastic_inference_accelerator",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.elastic_inference_accelerator",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "enable_bootstrap_user_data": {
                                "references": [
                                  "each.value.enable_bootstrap_user_data",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.enable_bootstrap_user_data",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "enable_efa_only": {
                                "references": [
                                  "each.value.enable_efa_only",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.enable_efa_only",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "enable_efa_support": {
                                "references": [
                                  "each.value.enable_efa_support",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.enable_efa_support",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "enable_monitoring": {
                                "references": [
                                  "each.value.enable_monitoring",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.enable_monitoring",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "enclave_options": {
                                "references": [
                                  "each.value.enclave_options",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.enclave_options",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "force_update_version": {
                                "references": [
                                  "each.value.force_update_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.force_update_version",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_additional_policies": {
                                "references": [
                                  "each.value",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_arn": {
                                "references": [
                                  "each.value.iam_role_arn",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_arn",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_attach_cni_policy": {
                                "references": [
                                  "each.value.iam_role_attach_cni_policy",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_attach_cni_policy",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_description": {
                                "references": [
                                  "each.value.iam_role_description",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_description",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_name": {
                                "references": [
                                  "each.value.iam_role_name",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_name",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_path": {
                                "references": [
                                  "each.value.iam_role_path",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_path",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_permissions_boundary": {
                                "references": [
                                  "each.value.iam_role_permissions_boundary",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_permissions_boundary",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_policy_statements": {
                                "references": [
                                  "each.value.iam_role_policy_statements",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_policy_statements",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_tags": {
                                "references": [
                                  "each.value.iam_role_tags",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_tags",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_use_name_prefix": {
                                "references": [
                                  "each.value.iam_role_use_name_prefix",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.iam_role_use_name_prefix",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "instance_market_options": {
                                "references": [
                                  "each.value.instance_market_options",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.instance_market_options",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "instance_types": {
                                "references": [
                                  "each.value.instance_types",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.instance_types",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "kernel_id": {
                                "references": [
                                  "each.value.kernel_id",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.kernel_id",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "key_name": {
                                "references": [
                                  "each.value.key_name",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.key_name",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "labels": {
                                "references": [
                                  "each.value.labels",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.labels",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_default_version": {
                                "references": [
                                  "each.value.launch_template_default_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_default_version",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_description": {
                                "references": [
                                  "each.value.launch_template_description",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_description",
                                  "var.eks_managed_node_group_defaults",
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "launch_template_id": {
                                "references": [
                                  "each.value.launch_template_id",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_id",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_name": {
                                "references": [
                                  "each.value.launch_template_name",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_name",
                                  "var.eks_managed_node_group_defaults",
                                  "each.key"
                                ]
                              },
                              "launch_template_tags": {
                                "references": [
                                  "each.value.launch_template_tags",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_tags",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_use_name_prefix": {
                                "references": [
                                  "each.value.launch_template_use_name_prefix",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_use_name_prefix",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_version": {
                                "references": [
                                  "each.value.launch_template_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.launch_template_version",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "license_specifications": {
                                "references": [
                                  "each.value.license_specifications",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.license_specifications",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "maintenance_options": {
                                "references": [
                                  "each.value.maintenance_options",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.maintenance_options",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "max_size": {
                                "references": [
                                  "each.value.max_size",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.max_size",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "metadata_options": {
                                "references": [
                                  "each.value.metadata_options",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.metadata_options",
                                  "var.eks_managed_node_group_defaults",
                                  "local.metadata_options"
                                ]
                              },
                              "min_size": {
                                "references": [
                                  "each.value.min_size",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.min_size",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "name": {
                                "references": [
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "network_interfaces": {
                                "references": [
                                  "each.value.network_interfaces",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.network_interfaces",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "node_repair_config": {
                                "references": [
                                  "each.value.node_repair_config",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.node_repair_config",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "placement": {
                                "references": [
                                  "each.value.placement",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.placement",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "placement_group_az": {
                                "references": [
                                  "each.value.placement_group_az",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.placement_group_az",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "placement_group_strategy": {
                                "references": [
                                  "each.value.placement_group_strategy",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.placement_group_strategy",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "platform": {
                                "references": [
                                  "each.value.platform",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.platform",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "post_bootstrap_user_data": {
                                "references": [
                                  "each.value.post_bootstrap_user_data",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.post_bootstrap_user_data",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "pre_bootstrap_user_data": {
                                "references": [
                                  "each.value.pre_bootstrap_user_data",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.pre_bootstrap_user_data",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "private_dns_name_options": {
                                "references": [
                                  "each.value.private_dns_name_options",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.private_dns_name_options",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "ram_disk_id": {
                                "references": [
                                  "each.value.ram_disk_id",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.ram_disk_id",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "remote_access": {
                                "references": [
                                  "each.value.remote_access",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.remote_access",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "schedules": {
                                "references": [
                                  "each.value.schedules",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.schedules",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "subnet_ids": {
                                "references": [
                                  "each.value.subnet_ids",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.subnet_ids",
                                  "var.eks_managed_node_group_defaults",
                                  "var.subnet_ids"
                                ]
                              },
                              "tag_specifications": {
                                "references": [
                                  "each.value.tag_specifications",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.tag_specifications",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.tags",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "taints": {
                                "references": [
                                  "each.value.taints",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.taints",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "timeouts": {
                                "references": [
                                  "each.value.timeouts",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.timeouts",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "update_config": {
                                "references": [
                                  "each.value.update_config",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.update_config",
                                  "var.eks_managed_node_group_defaults",
                                  "local.default_update_config"
                                ]
                              },
                              "update_launch_template_default_version": {
                                "references": [
                                  "each.value.update_launch_template_default_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.update_launch_template_default_version",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "use_custom_launch_template": {
                                "references": [
                                  "each.value.use_custom_launch_template",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.use_custom_launch_template",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "use_latest_ami_release_version": {
                                "references": [
                                  "each.value.use_latest_ami_release_version",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.use_latest_ami_release_version",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "use_name_prefix": {
                                "references": [
                                  "each.value.use_name_prefix",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.use_name_prefix",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "user_data_template_path": {
                                "references": [
                                  "each.value.user_data_template_path",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.user_data_template_path",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              },
                              "vpc_security_group_ids": {
                                "references": [
                                  "local.node_security_group_id",
                                  "each.value.vpc_security_group_ids",
                                  "each.value",
                                  "var.eks_managed_node_group_defaults.vpc_security_group_ids",
                                  "var.eks_managed_node_group_defaults"
                                ]
                              }
                            },
                            "for_each_expression": {
                              "references": [
                                "var.eks_managed_node_groups",
                                "var.create",
                                "local.create_outposts_local_cluster"
                              ]
                            },
                            "module": {
                              "outputs": {
                                "autoscaling_group_schedule_arns": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_schedule.this"
                                    ]
                                  },
                                  "description": "ARNs of autoscaling group schedules"
                                },
                                "iam_role_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].arn",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this",
                                      "var.iam_role_arn"
                                    ]
                                  },
                                  "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                                },
                                "iam_role_name": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].name",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "The name of the IAM role"
                                },
                                "iam_role_unique_id": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].unique_id",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "Stable and unique string identifying the IAM role"
                                },
                                "launch_template_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].arn",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The ARN of the launch template"
                                },
                                "launch_template_id": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].id",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The ID of the launch template"
                                },
                                "launch_template_latest_version": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].latest_version",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The latest version of the launch template"
                                },
                                "launch_template_name": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].name",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The name of the launch template"
                                },
                                "node_group_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].arn",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "Amazon Resource Name (ARN) of the EKS Node Group"
                                },
                                "node_group_autoscaling_group_names": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].resources",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "List of the autoscaling group names"
                                },
                                "node_group_id": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].id",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "EKS Cluster name and EKS Node Group name separated by a colon (`:`)"
                                },
                                "node_group_labels": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].labels",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "Map of labels applied to the node group"
                                },
                                "node_group_resources": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].resources",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "List of objects containing information about underlying resources"
                                },
                                "node_group_status": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].status",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "Status of the EKS Node Group"
                                },
                                "node_group_taints": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_node_group.this[0].taint",
                                      "aws_eks_node_group.this[0]",
                                      "aws_eks_node_group.this"
                                    ]
                                  },
                                  "description": "List of objects containing information about taints applied to the node group"
                                },
                                "platform": {
                                  "expression": {
                                    "references": [
                                      "module.user_data.platform",
                                      "module.user_data"
                                    ]
                                  },
                                  "description": "[DEPRECATED - Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023`, or `windows`"
                                }
                              },
                              "resources": [
                                {
                                  "address": "aws_autoscaling_schedule.this",
                                  "mode": "managed",
                                  "type": "aws_autoscaling_schedule",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "autoscaling_group_name": {
                                      "references": [
                                        "aws_eks_node_group.this[0].resources[0].autoscaling_groups[0].name",
                                        "aws_eks_node_group.this[0].resources[0].autoscaling_groups[0]",
                                        "aws_eks_node_group.this[0].resources[0].autoscaling_groups",
                                        "aws_eks_node_group.this[0].resources[0]",
                                        "aws_eks_node_group.this[0].resources",
                                        "aws_eks_node_group.this[0]",
                                        "aws_eks_node_group.this"
                                      ]
                                    },
                                    "desired_capacity": {
                                      "references": [
                                        "each.value.desired_size",
                                        "each.value"
                                      ]
                                    },
                                    "end_time": {
                                      "references": [
                                        "each.value.end_time",
                                        "each.value"
                                      ]
                                    },
                                    "max_size": {
                                      "references": [
                                        "each.value.max_size",
                                        "each.value"
                                      ]
                                    },
                                    "min_size": {
                                      "references": [
                                        "each.value.min_size",
                                        "each.value"
                                      ]
                                    },
                                    "recurrence": {
                                      "references": [
                                        "each.value.recurrence",
                                        "each.value"
                                      ]
                                    },
                                    "scheduled_action_name": {
                                      "references": [
                                        "each.key"
                                      ]
                                    },
                                    "start_time": {
                                      "references": [
                                        "each.value.start_time",
                                        "each.value"
                                      ]
                                    },
                                    "time_zone": {
                                      "references": [
                                        "each.value.time_zone",
                                        "each.value"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "var.schedules",
                                      "var.create",
                                      "var.create_schedule"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_eks_node_group.this",
                                  "mode": "managed",
                                  "type": "aws_eks_node_group",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "ami_type": {
                                      "references": [
                                        "var.ami_id",
                                        "var.ami_type"
                                      ]
                                    },
                                    "capacity_type": {
                                      "references": [
                                        "var.capacity_type"
                                      ]
                                    },
                                    "cluster_name": {
                                      "references": [
                                        "var.cluster_name"
                                      ]
                                    },
                                    "disk_size": {
                                      "references": [
                                        "var.use_custom_launch_template",
                                        "var.disk_size"
                                      ]
                                    },
                                    "force_update_version": {
                                      "references": [
                                        "var.force_update_version"
                                      ]
                                    },
                                    "instance_types": {
                                      "references": [
                                        "var.capacity_type",
                                        "var.instance_types"
                                      ]
                                    },
                                    "labels": {
                                      "references": [
                                        "var.labels"
                                      ]
                                    },
                                    "node_group_name": {
                                      "references": [
                                        "var.use_name_prefix",
                                        "var.name"
                                      ]
                                    },
                                    "node_group_name_prefix": {
                                      "references": [
                                        "var.use_name_prefix",
                                        "var.name"
                                      ]
                                    },
                                    "node_role_arn": {
                                      "references": [
                                        "var.create_iam_role",
                                        "aws_iam_role.this[0].arn",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this",
                                        "var.iam_role_arn"
                                      ]
                                    },
                                    "release_version": {
                                      "references": [
                                        "var.ami_id",
                                        "var.use_latest_ami_release_version",
                                        "local.latest_ami_release_version",
                                        "var.ami_release_version"
                                      ]
                                    },
                                    "scaling_config": [
                                      {
                                        "desired_size": {
                                          "references": [
                                            "var.desired_size"
                                          ]
                                        },
                                        "max_size": {
                                          "references": [
                                            "var.max_size"
                                          ]
                                        },
                                        "min_size": {
                                          "references": [
                                            "var.min_size"
                                          ]
                                        }
                                      }
                                    ],
                                    "subnet_ids": {
                                      "references": [
                                        "local.create_placement_group",
                                        "data.aws_subnets.placement_group[0].ids",
                                        "data.aws_subnets.placement_group[0]",
                                        "data.aws_subnets.placement_group",
                                        "var.subnet_ids"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags",
                                        "var.name"
                                      ]
                                    },
                                    "timeouts": {
                                      "create": {
                                        "references": [
                                          "var.timeouts"
                                        ]
                                      },
                                      "delete": {
                                        "references": [
                                          "var.timeouts"
                                        ]
                                      },
                                      "update": {
                                        "references": [
                                          "var.timeouts"
                                        ]
                                      }
                                    },
                                    "version": {
                                      "references": [
                                        "var.ami_id",
                                        "var.cluster_version"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "assume_role_policy": {
                                      "references": [
                                        "data.aws_iam_policy_document.assume_role_policy[0].json",
                                        "data.aws_iam_policy_document.assume_role_policy[0]",
                                        "data.aws_iam_policy_document.assume_role_policy"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.iam_role_description"
                                      ]
                                    },
                                    "force_detach_policies": {
                                      "constant_value": true
                                    },
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "path": {
                                      "references": [
                                        "var.iam_role_path"
                                      ]
                                    },
                                    "permissions_boundary": {
                                      "references": [
                                        "var.iam_role_permissions_boundary"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags",
                                        "var.iam_role_tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "data.aws_iam_policy_document.role[0].json",
                                        "data.aws_iam_policy_document.role[0]",
                                        "data.aws_iam_policy_document.role"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].id",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role_policy"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy_attachment.additional",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy_attachment",
                                  "name": "additional",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "policy_arn": {
                                      "references": [
                                        "each.value"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "var.iam_role_additional_policies",
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy_attachment.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy_attachment",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "policy_arn": {
                                      "references": [
                                        "each.value"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "local.iam_role_policy_prefix",
                                      "local.iam_role_policy_prefix",
                                      "local.ipv4_cni_policy",
                                      "local.ipv6_cni_policy",
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_launch_template.this",
                                  "mode": "managed",
                                  "type": "aws_launch_template",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "default_version": {
                                      "references": [
                                        "var.launch_template_default_version"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.launch_template_description"
                                      ]
                                    },
                                    "disable_api_termination": {
                                      "references": [
                                        "var.disable_api_termination"
                                      ]
                                    },
                                    "ebs_optimized": {
                                      "references": [
                                        "var.ebs_optimized"
                                      ]
                                    },
                                    "image_id": {
                                      "references": [
                                        "var.ami_id"
                                      ]
                                    },
                                    "instance_type": {
                                      "references": [
                                        "var.capacity_type",
                                        "var.instance_types"
                                      ]
                                    },
                                    "kernel_id": {
                                      "references": [
                                        "var.kernel_id"
                                      ]
                                    },
                                    "key_name": {
                                      "references": [
                                        "var.key_name"
                                      ]
                                    },
                                    "name": {
                                      "references": [
                                        "var.launch_template_use_name_prefix",
                                        "local.launch_template_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.launch_template_use_name_prefix",
                                        "local.launch_template_name"
                                      ]
                                    },
                                    "ram_disk_id": {
                                      "references": [
                                        "var.ram_disk_id"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags",
                                        "var.launch_template_tags"
                                      ]
                                    },
                                    "update_default_version": {
                                      "references": [
                                        "var.update_launch_template_default_version"
                                      ]
                                    },
                                    "user_data": {
                                      "references": [
                                        "module.user_data.user_data",
                                        "module.user_data"
                                      ]
                                    },
                                    "vpc_security_group_ids": {
                                      "references": [
                                        "local.network_interfaces",
                                        "local.security_group_ids"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_launch_template",
                                      "var.use_custom_launch_template"
                                    ]
                                  },
                                  "depends_on": [
                                    "aws_iam_role_policy_attachment.this",
                                    "aws_iam_role_policy_attachment.additional"
                                  ]
                                },
                                {
                                  "address": "aws_placement_group.this",
                                  "mode": "managed",
                                  "type": "aws_placement_group",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.cluster_name",
                                        "var.name"
                                      ]
                                    },
                                    "strategy": {
                                      "references": [
                                        "var.placement_group_strategy"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_placement_group"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_caller_identity.current",
                                  "mode": "data",
                                  "type": "aws_caller_identity",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                },
                                {
                                  "address": "data.aws_ec2_instance_type.this",
                                  "mode": "data",
                                  "type": "aws_ec2_instance_type",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "instance_type": {
                                      "references": [
                                        "local.efa_instance_type"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.enable_efa_support"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_ec2_instance_type_offerings.this",
                                  "mode": "data",
                                  "type": "aws_ec2_instance_type_offerings",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "filter": [
                                      {
                                        "name": {
                                          "constant_value": "instance-type"
                                        },
                                        "values": {
                                          "references": [
                                            "local.efa_instance_type"
                                          ]
                                        }
                                      }
                                    ],
                                    "location_type": {
                                      "constant_value": "availability-zone-id"
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.enable_efa_support"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_iam_policy_document.assume_role_policy",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "assume_role_policy",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "statement": [
                                      {
                                        "actions": {
                                          "constant_value": [
                                            "sts:AssumeRole"
                                          ]
                                        },
                                        "principals": [
                                          {
                                            "identifiers": {
                                              "constant_value": [
                                                "ec2.amazonaws.com"
                                              ]
                                            },
                                            "type": {
                                              "constant_value": "Service"
                                            }
                                          }
                                        ],
                                        "sid": {
                                          "constant_value": "EKSNodeAssumeRole"
                                        }
                                      }
                                    ]
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_iam_policy_document.role",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "role",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role_policy"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_partition.current",
                                  "mode": "data",
                                  "type": "aws_partition",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                },
                                {
                                  "address": "data.aws_ssm_parameter.ami",
                                  "mode": "data",
                                  "type": "aws_ssm_parameter",
                                  "name": "ami",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "local.ssm_ami_type_to_ssm_param",
                                        "var.ami_type"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.use_latest_ami_release_version"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_subnets.placement_group",
                                  "mode": "data",
                                  "type": "aws_subnets",
                                  "name": "placement_group",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "filter": [
                                      {
                                        "name": {
                                          "constant_value": "subnet-id"
                                        },
                                        "values": {
                                          "references": [
                                            "var.subnet_ids"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_placement_group"
                                    ]
                                  }
                                }
                              ],
                              "module_calls": {
                                "user_data": {
                                  "source": "../_user_data",
                                  "expressions": {
                                    "ami_type": {
                                      "references": [
                                        "var.ami_type"
                                      ]
                                    },
                                    "bootstrap_extra_args": {
                                      "references": [
                                        "var.bootstrap_extra_args"
                                      ]
                                    },
                                    "cloudinit_post_nodeadm": {
                                      "references": [
                                        "var.cloudinit_post_nodeadm"
                                      ]
                                    },
                                    "cloudinit_pre_nodeadm": {
                                      "references": [
                                        "var.cloudinit_pre_nodeadm"
                                      ]
                                    },
                                    "cluster_auth_base64": {
                                      "references": [
                                        "var.cluster_auth_base64"
                                      ]
                                    },
                                    "cluster_endpoint": {
                                      "references": [
                                        "var.cluster_endpoint"
                                      ]
                                    },
                                    "cluster_ip_family": {
                                      "references": [
                                        "var.cluster_ip_family"
                                      ]
                                    },
                                    "cluster_name": {
                                      "references": [
                                        "var.cluster_name"
                                      ]
                                    },
                                    "cluster_service_cidr": {
                                      "references": [
                                        "var.cluster_service_cidr",
                                        "var.cluster_service_ipv4_cidr"
                                      ]
                                    },
                                    "create": {
                                      "references": [
                                        "var.create"
                                      ]
                                    },
                                    "enable_bootstrap_user_data": {
                                      "references": [
                                        "var.enable_bootstrap_user_data"
                                      ]
                                    },
                                    "platform": {
                                      "references": [
                                        "var.platform"
                                      ]
                                    },
                                    "post_bootstrap_user_data": {
                                      "references": [
                                        "var.post_bootstrap_user_data"
                                      ]
                                    },
                                    "pre_bootstrap_user_data": {
                                      "references": [
                                        "var.pre_bootstrap_user_data"
                                      ]
                                    },
                                    "user_data_template_path": {
                                      "references": [
                                        "var.user_data_template_path"
                                      ]
                                    }
                                  },
                                  "module": {
                                    "outputs": {
                                      "platform": {
                                        "expression": {
                                          "references": [
                                            "local.user_data_type"
                                          ]
                                        },
                                        "description": "[DEPRECATED - Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023, or `windows`"
                                      },
                                      "user_data": {
                                        "expression": {
                                          "references": [
                                            "local.user_data_type_to_rendered",
                                            "local.user_data_type"
                                          ]
                                        },
                                        "description": "Base64 encoded user data rendered for the provided inputs"
                                      }
                                    },
                                    "resources": [
                                      {
                                        "address": "null_resource.validate_cluster_service_cidr",
                                        "mode": "managed",
                                        "type": "null_resource",
                                        "name": "validate_cluster_service_cidr",
                                        "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data:null",
                                        "schema_version": 0
                                      },
                                      {
                                        "address": "data.cloudinit_config.al2023_eks_managed_node_group",
                                        "mode": "data",
                                        "type": "cloudinit_config",
                                        "name": "al2023_eks_managed_node_group",
                                        "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data:cloudinit",
                                        "expressions": {
                                          "base64_encode": {
                                            "constant_value": true
                                          },
                                          "boundary": {
                                            "constant_value": "MIMEBOUNDARY"
                                          },
                                          "gzip": {
                                            "constant_value": false
                                          }
                                        },
                                        "schema_version": 0,
                                        "count_expression": {
                                          "references": [
                                            "var.create",
                                            "local.user_data_type",
                                            "local.nodeadm_cloudinit"
                                          ]
                                        }
                                      },
                                      {
                                        "address": "data.cloudinit_config.linux_eks_managed_node_group",
                                        "mode": "data",
                                        "type": "cloudinit_config",
                                        "name": "linux_eks_managed_node_group",
                                        "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data:cloudinit",
                                        "expressions": {
                                          "base64_encode": {
                                            "constant_value": true
                                          },
                                          "boundary": {
                                            "constant_value": "//"
                                          },
                                          "gzip": {
                                            "constant_value": false
                                          },
                                          "part": [
                                            {
                                              "content": {
                                                "references": [
                                                  "var.pre_bootstrap_user_data"
                                                ]
                                              },
                                              "content_type": {
                                                "constant_value": "text/x-shellscript"
                                              }
                                            }
                                          ]
                                        },
                                        "schema_version": 0,
                                        "count_expression": {
                                          "references": [
                                            "var.create",
                                            "local.user_data_type",
                                            "var.is_eks_managed_node_group",
                                            "var.enable_bootstrap_user_data",
                                            "var.pre_bootstrap_user_data",
                                            "var.user_data_template_path"
                                          ]
                                        }
                                      }
                                    ],
                                    "variables": {
                                      "additional_cluster_dns_ips": {
                                        "default": [],
                                        "description": "Additional DNS IP addresses to use for the cluster. Only used when `ami_type` = `BOTTLEROCKET_*`"
                                      },
                                      "ami_type": {
                                        "default": null,
                                        "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values"
                                      },
                                      "bootstrap_extra_args": {
                                        "default": "",
                                        "description": "Additional arguments passed to the bootstrap script. When `ami_type` = `BOTTLEROCKET_*`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                                      },
                                      "cloudinit_post_nodeadm": {
                                        "default": [],
                                        "description": "Array of cloud-init document parts that are created after the nodeadm document part"
                                      },
                                      "cloudinit_pre_nodeadm": {
                                        "default": [],
                                        "description": "Array of cloud-init document parts that are created before the nodeadm document part"
                                      },
                                      "cluster_auth_base64": {
                                        "default": "",
                                        "description": "Base64 encoded CA of associated EKS cluster"
                                      },
                                      "cluster_endpoint": {
                                        "default": "",
                                        "description": "Endpoint of associated EKS cluster"
                                      },
                                      "cluster_ip_family": {
                                        "default": "ipv4",
                                        "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                                      },
                                      "cluster_name": {
                                        "default": "",
                                        "description": "Name of the EKS cluster"
                                      },
                                      "cluster_service_cidr": {
                                        "default": "",
                                        "description": "The CIDR block (IPv4 or IPv6) used by the cluster to assign Kubernetes service IP addresses. This is derived from the cluster itself"
                                      },
                                      "cluster_service_ipv4_cidr": {
                                        "default": null,
                                        "description": "[Deprecated] The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                                      },
                                      "create": {
                                        "default": true,
                                        "description": "Determines whether to create user-data or not"
                                      },
                                      "enable_bootstrap_user_data": {
                                        "default": false,
                                        "description": "Determines whether the bootstrap configurations are populated within the user data template"
                                      },
                                      "is_eks_managed_node_group": {
                                        "default": true,
                                        "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
                                      },
                                      "platform": {
                                        "default": "linux",
                                        "description": "[DEPRECATED - use `ami_type` instead. Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023`, or `windows`"
                                      },
                                      "post_bootstrap_user_data": {
                                        "default": "",
                                        "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                      },
                                      "pre_bootstrap_user_data": {
                                        "default": "",
                                        "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                      },
                                      "user_data_template_path": {
                                        "default": "",
                                        "description": "Path to a local, custom user data template file to use when rendering user data"
                                      }
                                    }
                                  }
                                }
                              },
                              "variables": {
                                "ami_id": {
                                  "default": "",
                                  "description": "The AMI from which to launch the instance. If not supplied, EKS will use its own default image"
                                },
                                "ami_release_version": {
                                  "default": null,
                                  "description": "The AMI version. Defaults to latest AMI release version for the given Kubernetes version and AMI type"
                                },
                                "ami_type": {
                                  "default": null,
                                  "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values"
                                },
                                "block_device_mappings": {
                                  "default": {},
                                  "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
                                },
                                "bootstrap_extra_args": {
                                  "default": "",
                                  "description": "Additional arguments passed to the bootstrap script. When `ami_type` = `BOTTLEROCKET_*`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                                },
                                "capacity_reservation_specification": {
                                  "default": {},
                                  "description": "Targeting for EC2 capacity reservations"
                                },
                                "capacity_type": {
                                  "default": "ON_DEMAND",
                                  "description": "Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`"
                                },
                                "cloudinit_post_nodeadm": {
                                  "default": [],
                                  "description": "Array of cloud-init document parts that are created after the nodeadm document part"
                                },
                                "cloudinit_pre_nodeadm": {
                                  "default": [],
                                  "description": "Array of cloud-init document parts that are created before the nodeadm document part"
                                },
                                "cluster_auth_base64": {
                                  "default": "",
                                  "description": "Base64 encoded CA of associated EKS cluster"
                                },
                                "cluster_endpoint": {
                                  "default": "",
                                  "description": "Endpoint of associated EKS cluster"
                                },
                                "cluster_ip_family": {
                                  "default": "ipv4",
                                  "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                                },
                                "cluster_name": {
                                  "default": null,
                                  "description": "Name of associated EKS cluster"
                                },
                                "cluster_primary_security_group_id": {
                                  "default": null,
                                  "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
                                },
                                "cluster_service_cidr": {
                                  "default": "",
                                  "description": "The CIDR block (IPv4 or IPv6) used by the cluster to assign Kubernetes service IP addresses. This is derived from the cluster itself"
                                },
                                "cluster_service_ipv4_cidr": {
                                  "default": null,
                                  "description": "[Deprecated] The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                                },
                                "cluster_version": {
                                  "default": null,
                                  "description": "Kubernetes version. Defaults to EKS Cluster Kubernetes version"
                                },
                                "cpu_options": {
                                  "default": {},
                                  "description": "The CPU options for the instance"
                                },
                                "create": {
                                  "default": true,
                                  "description": "Determines whether to create EKS managed node group or not"
                                },
                                "create_iam_role": {
                                  "default": true,
                                  "description": "Determines whether an IAM role is created or to use an existing IAM role"
                                },
                                "create_iam_role_policy": {
                                  "default": true,
                                  "description": "Determines whether an IAM role policy is created or not"
                                },
                                "create_launch_template": {
                                  "default": true,
                                  "description": "Determines whether to create a launch template or not. If set to `false`, EKS will use its own default launch template"
                                },
                                "create_placement_group": {
                                  "default": false,
                                  "description": "Determines whether a placement group is created & used by the node group"
                                },
                                "create_schedule": {
                                  "default": true,
                                  "description": "Determines whether to create autoscaling group schedule or not"
                                },
                                "credit_specification": {
                                  "default": {},
                                  "description": "Customize the credit specification of the instance"
                                },
                                "desired_size": {
                                  "default": 1,
                                  "description": "Desired number of instances/nodes"
                                },
                                "disable_api_termination": {
                                  "default": null,
                                  "description": "If true, enables EC2 instance termination protection"
                                },
                                "disk_size": {
                                  "default": null,
                                  "description": "Disk size in GiB for nodes. Defaults to `20`. Only valid when `use_custom_launch_template` = `false`"
                                },
                                "ebs_optimized": {
                                  "default": null,
                                  "description": "If true, the launched EC2 instance(s) will be EBS-optimized"
                                },
                                "efa_indices": {
                                  "default": [
                                    0
                                  ],
                                  "description": "The indices of the network interfaces that should be EFA-enabled. Only valid when `enable_efa_support` = `true`"
                                },
                                "elastic_gpu_specifications": {
                                  "default": {},
                                  "description": "The elastic GPU to attach to the instance"
                                },
                                "elastic_inference_accelerator": {
                                  "default": {},
                                  "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
                                },
                                "enable_bootstrap_user_data": {
                                  "default": false,
                                  "description": "Determines whether the bootstrap configurations are populated within the user data template. Only valid when using a custom AMI via `ami_id`"
                                },
                                "enable_efa_only": {
                                  "default": false,
                                  "description": "Determines whether to enable EFA (`false`, default) or EFA and EFA-only (`true`) network interfaces. Note: requires vpc-cni version `v1.18.4` or later"
                                },
                                "enable_efa_support": {
                                  "default": false,
                                  "description": "Determines whether to enable Elastic Fabric Adapter (EFA) support"
                                },
                                "enable_monitoring": {
                                  "default": true,
                                  "description": "Enables/disables detailed monitoring"
                                },
                                "enclave_options": {
                                  "default": {},
                                  "description": "Enable Nitro Enclaves on launched instances"
                                },
                                "force_update_version": {
                                  "default": null,
                                  "description": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue"
                                },
                                "iam_role_additional_policies": {
                                  "default": {},
                                  "description": "Additional policies to be added to the IAM role"
                                },
                                "iam_role_arn": {
                                  "default": null,
                                  "description": "Existing IAM role ARN for the node group. Required if `create_iam_role` is set to `false`"
                                },
                                "iam_role_attach_cni_policy": {
                                  "default": true,
                                  "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
                                },
                                "iam_role_description": {
                                  "default": null,
                                  "description": "Description of the role"
                                },
                                "iam_role_name": {
                                  "default": null,
                                  "description": "Name to use on IAM role created"
                                },
                                "iam_role_path": {
                                  "default": null,
                                  "description": "IAM role path"
                                },
                                "iam_role_permissions_boundary": {
                                  "default": null,
                                  "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                                },
                                "iam_role_policy_statements": {
                                  "default": [],
                                  "description": "A list of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) - used for adding specific IAM permissions as needed"
                                },
                                "iam_role_tags": {
                                  "default": {},
                                  "description": "A map of additional tags to add to the IAM role created"
                                },
                                "iam_role_use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
                                },
                                "instance_market_options": {
                                  "default": {},
                                  "description": "The market (purchasing) option for the instance"
                                },
                                "instance_types": {
                                  "default": null,
                                  "description": "Set of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`"
                                },
                                "kernel_id": {
                                  "default": null,
                                  "description": "The kernel ID"
                                },
                                "key_name": {
                                  "default": null,
                                  "description": "The key name that should be used for the instance(s)"
                                },
                                "labels": {
                                  "default": null,
                                  "description": "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed"
                                },
                                "launch_template_default_version": {
                                  "default": null,
                                  "description": "Default version of the launch template"
                                },
                                "launch_template_description": {
                                  "default": null,
                                  "description": "Description of the launch template"
                                },
                                "launch_template_id": {
                                  "default": "",
                                  "description": "The ID of an existing launch template to use. Required when `create_launch_template` = `false` and `use_custom_launch_template` = `true`"
                                },
                                "launch_template_name": {
                                  "default": null,
                                  "description": "Name of launch template to be created"
                                },
                                "launch_template_tags": {
                                  "default": {},
                                  "description": "A map of additional tags to add to the tag_specifications of launch template created"
                                },
                                "launch_template_use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
                                },
                                "launch_template_version": {
                                  "default": null,
                                  "description": "Launch template version number. The default is `$Default`"
                                },
                                "license_specifications": {
                                  "default": {},
                                  "description": "A map of license specifications to associate with"
                                },
                                "maintenance_options": {
                                  "default": {},
                                  "description": "The maintenance options for the instance"
                                },
                                "max_size": {
                                  "default": 3,
                                  "description": "Maximum number of instances/nodes"
                                },
                                "metadata_options": {
                                  "default": {
                                    "http_endpoint": "enabled",
                                    "http_put_response_hop_limit": "2",
                                    "http_tokens": "required"
                                  },
                                  "description": "Customize the metadata options for the instance"
                                },
                                "min_size": {
                                  "default": 0,
                                  "description": "Minimum number of instances/nodes"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the EKS managed node group"
                                },
                                "network_interfaces": {
                                  "default": [],
                                  "description": "Customize network interfaces to be attached at instance boot time"
                                },
                                "node_repair_config": {
                                  "default": null,
                                  "description": "The node auto repair configuration for the node group"
                                },
                                "placement": {
                                  "default": {},
                                  "description": "The placement of the instance"
                                },
                                "placement_group_az": {
                                  "default": null,
                                  "description": "Availability zone where placement group is created (ex. `eu-west-1c`)"
                                },
                                "placement_group_strategy": {
                                  "default": "cluster",
                                  "description": "The placement group strategy"
                                },
                                "platform": {
                                  "default": "linux",
                                  "description": "[DEPRECATED - use `ami_type` instead. Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023`, or `windows`"
                                },
                                "post_bootstrap_user_data": {
                                  "default": "",
                                  "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                },
                                "pre_bootstrap_user_data": {
                                  "default": "",
                                  "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                },
                                "private_dns_name_options": {
                                  "default": {},
                                  "description": "The options for the instance hostname. The default values are inherited from the subnet"
                                },
                                "ram_disk_id": {
                                  "default": null,
                                  "description": "The ID of the ram disk"
                                },
                                "remote_access": {
                                  "default": {},
                                  "description": "Configuration block with remote access settings. Only valid when `use_custom_launch_template` = `false`"
                                },
                                "schedules": {
                                  "default": {},
                                  "description": "Map of autoscaling group schedule to create"
                                },
                                "subnet_ids": {
                                  "default": null,
                                  "description": "Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME`"
                                },
                                "tag_specifications": {
                                  "default": [
                                    "instance",
                                    "volume",
                                    "network-interface"
                                  ],
                                  "description": "The tags to apply to the resources during launch"
                                },
                                "tags": {
                                  "default": {},
                                  "description": "A map of tags to add to all resources"
                                },
                                "taints": {
                                  "default": {},
                                  "description": "The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group"
                                },
                                "timeouts": {
                                  "default": {},
                                  "description": "Create, update, and delete timeout configurations for the node group"
                                },
                                "update_config": {
                                  "default": {
                                    "max_unavailable_percentage": "33"
                                  },
                                  "description": "Configuration block of settings for max unavailable resources during node group updates"
                                },
                                "update_launch_template_default_version": {
                                  "default": true,
                                  "description": "Whether to update the launch templates default version on each update. Conflicts with `launch_template_default_version`"
                                },
                                "use_custom_launch_template": {
                                  "default": true,
                                  "description": "Determines whether to use a custom launch template or not. If set to `false`, EKS will use its own default launch template"
                                },
                                "use_latest_ami_release_version": {
                                  "default": false,
                                  "description": "Determines whether to use the latest AMI release version for the given `ami_type` (except for `CUSTOM`). Note: `ami_type` and `cluster_version` must be supplied in order to enable this feature"
                                },
                                "use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
                                },
                                "user_data_template_path": {
                                  "default": "",
                                  "description": "Path to a local, custom user data template file to use when rendering user data"
                                },
                                "vpc_security_group_ids": {
                                  "default": [],
                                  "description": "A list of security group IDs to associate"
                                }
                              }
                            }
                          },
                          "fargate_profile": {
                            "source": "./modules/fargate-profile",
                            "expressions": {
                              "cluster_ip_family": {
                                "references": [
                                  "var.cluster_ip_family"
                                ]
                              },
                              "cluster_name": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_name\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "create": {
                                "references": [
                                  "each.value.create",
                                  "each.value"
                                ]
                              },
                              "create_iam_role": {
                                "references": [
                                  "each.value.create_iam_role",
                                  "each.value",
                                  "var.fargate_profile_defaults.create_iam_role",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "create_iam_role_policy": {
                                "references": [
                                  "each.value.create_iam_role_policy",
                                  "each.value",
                                  "var.fargate_profile_defaults.create_iam_role_policy",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_additional_policies": {
                                "references": [
                                  "each.value",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_arn": {
                                "references": [
                                  "each.value.iam_role_arn",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_arn",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_attach_cni_policy": {
                                "references": [
                                  "each.value.iam_role_attach_cni_policy",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_attach_cni_policy",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_description": {
                                "references": [
                                  "each.value.iam_role_description",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_description",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_name": {
                                "references": [
                                  "each.value.iam_role_name",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_name",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_path": {
                                "references": [
                                  "each.value.iam_role_path",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_path",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_permissions_boundary": {
                                "references": [
                                  "each.value.iam_role_permissions_boundary",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_permissions_boundary",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_policy_statements": {
                                "references": [
                                  "each.value.iam_role_policy_statements",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_policy_statements",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_tags": {
                                "references": [
                                  "each.value.iam_role_tags",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_tags",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "iam_role_use_name_prefix": {
                                "references": [
                                  "each.value.iam_role_use_name_prefix",
                                  "each.value",
                                  "var.fargate_profile_defaults.iam_role_use_name_prefix",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "name": {
                                "references": [
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "selectors": {
                                "references": [
                                  "each.value.selectors",
                                  "each.value",
                                  "var.fargate_profile_defaults.selectors",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "subnet_ids": {
                                "references": [
                                  "each.value.subnet_ids",
                                  "each.value",
                                  "var.fargate_profile_defaults.subnet_ids",
                                  "var.fargate_profile_defaults",
                                  "var.subnet_ids"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value",
                                  "var.fargate_profile_defaults.tags",
                                  "var.fargate_profile_defaults"
                                ]
                              },
                              "timeouts": {
                                "references": [
                                  "each.value.timeouts",
                                  "each.value",
                                  "var.fargate_profile_defaults.timeouts",
                                  "var.fargate_profile_defaults"
                                ]
                              }
                            },
                            "for_each_expression": {
                              "references": [
                                "var.fargate_profiles",
                                "var.create",
                                "local.create_outposts_local_cluster"
                              ]
                            },
                            "module": {
                              "outputs": {
                                "fargate_profile_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_fargate_profile.this[0].arn",
                                      "aws_eks_fargate_profile.this[0]",
                                      "aws_eks_fargate_profile.this"
                                    ]
                                  },
                                  "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile"
                                },
                                "fargate_profile_id": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_fargate_profile.this[0].id",
                                      "aws_eks_fargate_profile.this[0]",
                                      "aws_eks_fargate_profile.this"
                                    ]
                                  },
                                  "description": "EKS Cluster name and EKS Fargate Profile name separated by a colon (`:`)"
                                },
                                "fargate_profile_pod_execution_role_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_fargate_profile.this[0].pod_execution_role_arn",
                                      "aws_eks_fargate_profile.this[0]",
                                      "aws_eks_fargate_profile.this"
                                    ]
                                  },
                                  "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile Pod execution role ARN"
                                },
                                "fargate_profile_status": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_fargate_profile.this[0].status",
                                      "aws_eks_fargate_profile.this[0]",
                                      "aws_eks_fargate_profile.this"
                                    ]
                                  },
                                  "description": "Status of the EKS Fargate Profile"
                                },
                                "iam_role_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].arn",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this",
                                      "var.iam_role_arn"
                                    ]
                                  },
                                  "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                                },
                                "iam_role_name": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].name",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "The name of the IAM role"
                                },
                                "iam_role_unique_id": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].unique_id",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "Stable and unique string identifying the IAM role"
                                }
                              },
                              "resources": [
                                {
                                  "address": "aws_eks_fargate_profile.this",
                                  "mode": "managed",
                                  "type": "aws_eks_fargate_profile",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "cluster_name": {
                                      "references": [
                                        "var.cluster_name"
                                      ]
                                    },
                                    "fargate_profile_name": {
                                      "references": [
                                        "var.name"
                                      ]
                                    },
                                    "pod_execution_role_arn": {
                                      "references": [
                                        "var.create_iam_role",
                                        "aws_iam_role.this[0].arn",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this",
                                        "var.iam_role_arn"
                                      ]
                                    },
                                    "subnet_ids": {
                                      "references": [
                                        "var.subnet_ids"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "assume_role_policy": {
                                      "references": [
                                        "data.aws_iam_policy_document.assume_role_policy[0].json",
                                        "data.aws_iam_policy_document.assume_role_policy[0]",
                                        "data.aws_iam_policy_document.assume_role_policy"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.iam_role_description"
                                      ]
                                    },
                                    "force_detach_policies": {
                                      "constant_value": true
                                    },
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "path": {
                                      "references": [
                                        "var.iam_role_path"
                                      ]
                                    },
                                    "permissions_boundary": {
                                      "references": [
                                        "var.iam_role_permissions_boundary"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags",
                                        "var.iam_role_tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "data.aws_iam_policy_document.role[0].json",
                                        "data.aws_iam_policy_document.role[0]",
                                        "data.aws_iam_policy_document.role"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].id",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role_policy"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy_attachment.additional",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy_attachment",
                                  "name": "additional",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "policy_arn": {
                                      "references": [
                                        "each.value"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "var.iam_role_additional_policies",
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy_attachment.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy_attachment",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "policy_arn": {
                                      "references": [
                                        "each.value"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "local.iam_role_policy_prefix",
                                      "local.ipv4_cni_policy",
                                      "local.ipv6_cni_policy",
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_caller_identity.current",
                                  "mode": "data",
                                  "type": "aws_caller_identity",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                },
                                {
                                  "address": "data.aws_iam_policy_document.assume_role_policy",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "assume_role_policy",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "statement": [
                                      {
                                        "actions": {
                                          "constant_value": [
                                            "sts:AssumeRole"
                                          ]
                                        },
                                        "condition": [
                                          {
                                            "test": {
                                              "constant_value": "ArnLike"
                                            },
                                            "values": {
                                              "references": [
                                                "data.aws_partition.current.partition",
                                                "data.aws_partition.current",
                                                "data.aws_region.current.name",
                                                "data.aws_region.current",
                                                "data.aws_caller_identity.current.account_id",
                                                "data.aws_caller_identity.current",
                                                "var.cluster_name"
                                              ]
                                            },
                                            "variable": {
                                              "constant_value": "aws:SourceArn"
                                            }
                                          }
                                        ],
                                        "effect": {
                                          "constant_value": "Allow"
                                        },
                                        "principals": [
                                          {
                                            "identifiers": {
                                              "constant_value": [
                                                "eks-fargate-pods.amazonaws.com"
                                              ]
                                            },
                                            "type": {
                                              "constant_value": "Service"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_iam_policy_document.role",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "role",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role_policy"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_partition.current",
                                  "mode": "data",
                                  "type": "aws_partition",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                },
                                {
                                  "address": "data.aws_region.current",
                                  "mode": "data",
                                  "type": "aws_region",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                }
                              ],
                              "variables": {
                                "cluster_ip_family": {
                                  "default": "ipv4",
                                  "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                                },
                                "cluster_name": {
                                  "default": null,
                                  "description": "Name of the EKS cluster"
                                },
                                "create": {
                                  "default": true,
                                  "description": "Determines whether to create Fargate profile or not"
                                },
                                "create_iam_role": {
                                  "default": true,
                                  "description": "Determines whether an IAM role is created or to use an existing IAM role"
                                },
                                "create_iam_role_policy": {
                                  "default": true,
                                  "description": "Determines whether an IAM role policy is created or not"
                                },
                                "iam_role_additional_policies": {
                                  "default": {},
                                  "description": "Additional policies to be added to the IAM role"
                                },
                                "iam_role_arn": {
                                  "default": null,
                                  "description": "Existing IAM role ARN for the Fargate profile. Required if `create_iam_role` is set to `false`"
                                },
                                "iam_role_attach_cni_policy": {
                                  "default": true,
                                  "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
                                },
                                "iam_role_description": {
                                  "default": null,
                                  "description": "Description of the role"
                                },
                                "iam_role_name": {
                                  "default": "",
                                  "description": "Name to use on IAM role created"
                                },
                                "iam_role_path": {
                                  "default": null,
                                  "description": "IAM role path"
                                },
                                "iam_role_permissions_boundary": {
                                  "default": null,
                                  "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                                },
                                "iam_role_policy_statements": {
                                  "default": [],
                                  "description": "A list of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) - used for adding specific IAM permissions as needed"
                                },
                                "iam_role_tags": {
                                  "default": {},
                                  "description": "A map of additional tags to add to the IAM role created"
                                },
                                "iam_role_use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the EKS Fargate Profile"
                                },
                                "selectors": {
                                  "default": [],
                                  "description": "Configuration block(s) for selecting Kubernetes Pods to execute with this Fargate Profile"
                                },
                                "subnet_ids": {
                                  "default": [],
                                  "description": "A list of subnet IDs for the EKS Fargate Profile"
                                },
                                "tags": {
                                  "default": {},
                                  "description": "A map of tags to add to all resources"
                                },
                                "timeouts": {
                                  "default": {},
                                  "description": "Create and delete timeout configurations for the Fargate Profile"
                                }
                              }
                            }
                          },
                          "kms": {
                            "source": "terraform-aws-modules/kms/aws",
                            "expressions": {
                              "aliases": {
                                "references": [
                                  "var.kms_key_aliases"
                                ]
                              },
                              "computed_aliases": {
                                "references": [
                                  "var.cluster_name"
                                ]
                              },
                              "create": {
                                "references": [
                                  "local.create",
                                  "var.create_kms_key",
                                  "local.enable_cluster_encryption_config"
                                ]
                              },
                              "deletion_window_in_days": {
                                "references": [
                                  "var.kms_key_deletion_window_in_days"
                                ]
                              },
                              "description": {
                                "references": [
                                  "var.kms_key_description",
                                  "var.cluster_name"
                                ]
                              },
                              "enable_default_policy": {
                                "references": [
                                  "var.kms_key_enable_default_policy"
                                ]
                              },
                              "enable_key_rotation": {
                                "references": [
                                  "var.enable_kms_key_rotation"
                                ]
                              },
                              "key_administrators": {
                                "references": [
                                  "var.kms_key_administrators",
                                  "data.aws_iam_session_context.current[0].issuer_arn",
                                  "data.aws_iam_session_context.current[0]",
                                  "data.aws_iam_session_context.current"
                                ]
                              },
                              "key_owners": {
                                "references": [
                                  "var.kms_key_owners"
                                ]
                              },
                              "key_service_users": {
                                "references": [
                                  "var.kms_key_service_users"
                                ]
                              },
                              "key_usage": {
                                "constant_value": "ENCRYPT_DECRYPT"
                              },
                              "key_users": {
                                "references": [
                                  "local.cluster_role",
                                  "var.kms_key_users"
                                ]
                              },
                              "override_policy_documents": {
                                "references": [
                                  "var.kms_key_override_policy_documents"
                                ]
                              },
                              "source_policy_documents": {
                                "references": [
                                  "var.kms_key_source_policy_documents"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags"
                                ]
                              }
                            },
                            "module": {
                              "outputs": {
                                "aliases": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_alias.this"
                                    ]
                                  },
                                  "description": "A map of aliases created and their attributes"
                                },
                                "external_key_expiration_model": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_external_key.this[0].expiration_model",
                                      "aws_kms_external_key.this[0]",
                                      "aws_kms_external_key.this",
                                      "aws_kms_replica_external_key.this[0].expiration_model",
                                      "aws_kms_replica_external_key.this[0]",
                                      "aws_kms_replica_external_key.this"
                                    ]
                                  },
                                  "description": "Whether the key material expires. Empty when pending key material import, otherwise `KEY_MATERIAL_EXPIRES` or `KEY_MATERIAL_DOES_NOT_EXPIRE`"
                                },
                                "external_key_state": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_external_key.this[0].key_state",
                                      "aws_kms_external_key.this[0]",
                                      "aws_kms_external_key.this",
                                      "aws_kms_replica_external_key.this[0].key_state",
                                      "aws_kms_replica_external_key.this[0]",
                                      "aws_kms_replica_external_key.this"
                                    ]
                                  },
                                  "description": "The state of the CMK"
                                },
                                "external_key_usage": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_external_key.this[0].key_usage",
                                      "aws_kms_external_key.this[0]",
                                      "aws_kms_external_key.this",
                                      "aws_kms_replica_external_key.this[0].key_usage",
                                      "aws_kms_replica_external_key.this[0]",
                                      "aws_kms_replica_external_key.this"
                                    ]
                                  },
                                  "description": "The cryptographic operations for which you can use the CMK"
                                },
                                "grants": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_grant.this"
                                    ]
                                  },
                                  "description": "A map of grants created and their attributes"
                                },
                                "key_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_key.this[0].arn",
                                      "aws_kms_key.this[0]",
                                      "aws_kms_key.this",
                                      "aws_kms_external_key.this[0].arn",
                                      "aws_kms_external_key.this[0]",
                                      "aws_kms_external_key.this",
                                      "aws_kms_replica_key.this[0].arn",
                                      "aws_kms_replica_key.this[0]",
                                      "aws_kms_replica_key.this",
                                      "aws_kms_replica_external_key.this[0].arn",
                                      "aws_kms_replica_external_key.this[0]",
                                      "aws_kms_replica_external_key.this"
                                    ]
                                  },
                                  "description": "The Amazon Resource Name (ARN) of the key"
                                },
                                "key_id": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_key.this[0].key_id",
                                      "aws_kms_key.this[0]",
                                      "aws_kms_key.this",
                                      "aws_kms_external_key.this[0].id",
                                      "aws_kms_external_key.this[0]",
                                      "aws_kms_external_key.this",
                                      "aws_kms_replica_key.this[0].key_id",
                                      "aws_kms_replica_key.this[0]",
                                      "aws_kms_replica_key.this",
                                      "aws_kms_replica_external_key.this[0].key_id",
                                      "aws_kms_replica_external_key.this[0]",
                                      "aws_kms_replica_external_key.this"
                                    ]
                                  },
                                  "description": "The globally unique identifier for the key"
                                },
                                "key_policy": {
                                  "expression": {
                                    "references": [
                                      "aws_kms_key.this[0].policy",
                                      "aws_kms_key.this[0]",
                                      "aws_kms_key.this",
                                      "aws_kms_external_key.this[0].policy",
                                      "aws_kms_external_key.this[0]",
                                      "aws_kms_external_key.this",
                                      "aws_kms_replica_key.this[0].policy",
                                      "aws_kms_replica_key.this[0]",
                                      "aws_kms_replica_key.this",
                                      "aws_kms_replica_external_key.this[0].policy",
                                      "aws_kms_replica_external_key.this[0]",
                                      "aws_kms_replica_external_key.this"
                                    ]
                                  },
                                  "description": "The IAM resource policy set on the key"
                                }
                              },
                              "resources": [
                                {
                                  "address": "aws_kms_alias.this",
                                  "mode": "managed",
                                  "type": "aws_kms_alias",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.aliases_use_name_prefix",
                                        "each.value.name",
                                        "each.value"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.aliases_use_name_prefix",
                                        "each.value.name",
                                        "each.value"
                                      ]
                                    },
                                    "target_key_id": {
                                      "references": [
                                        "aws_kms_key.this[0].key_id",
                                        "aws_kms_key.this[0]",
                                        "aws_kms_key.this",
                                        "aws_kms_external_key.this[0].id",
                                        "aws_kms_external_key.this[0]",
                                        "aws_kms_external_key.this",
                                        "aws_kms_replica_key.this[0].key_id",
                                        "aws_kms_replica_key.this[0]",
                                        "aws_kms_replica_key.this",
                                        "aws_kms_replica_external_key.this[0].key_id",
                                        "aws_kms_replica_external_key.this[0]",
                                        "aws_kms_replica_external_key.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "local.aliases",
                                      "var.computed_aliases",
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_kms_external_key.this",
                                  "mode": "managed",
                                  "type": "aws_kms_external_key",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "bypass_policy_lockout_safety_check": {
                                      "references": [
                                        "var.bypass_policy_lockout_safety_check"
                                      ]
                                    },
                                    "deletion_window_in_days": {
                                      "references": [
                                        "var.deletion_window_in_days"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.description"
                                      ]
                                    },
                                    "enabled": {
                                      "references": [
                                        "var.is_enabled"
                                      ]
                                    },
                                    "key_material_base64": {
                                      "references": [
                                        "var.key_material_base64"
                                      ]
                                    },
                                    "multi_region": {
                                      "references": [
                                        "var.multi_region"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "var.policy",
                                        "data.aws_iam_policy_document.this[0].json",
                                        "data.aws_iam_policy_document.this[0]",
                                        "data.aws_iam_policy_document.this"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    },
                                    "valid_to": {
                                      "references": [
                                        "var.valid_to"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_external",
                                      "var.create_replica",
                                      "var.create_replica_external"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_kms_grant.this",
                                  "mode": "managed",
                                  "type": "aws_kms_grant",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "grant_creation_tokens": {
                                      "references": [
                                        "each.value.grant_creation_tokens",
                                        "each.value"
                                      ]
                                    },
                                    "grantee_principal": {
                                      "references": [
                                        "each.value.grantee_principal",
                                        "each.value"
                                      ]
                                    },
                                    "key_id": {
                                      "references": [
                                        "aws_kms_key.this[0].key_id",
                                        "aws_kms_key.this[0]",
                                        "aws_kms_key.this",
                                        "aws_kms_external_key.this[0].id",
                                        "aws_kms_external_key.this[0]",
                                        "aws_kms_external_key.this",
                                        "aws_kms_replica_key.this[0].key_id",
                                        "aws_kms_replica_key.this[0]",
                                        "aws_kms_replica_key.this",
                                        "aws_kms_replica_external_key.this[0].key_id",
                                        "aws_kms_replica_external_key.this[0]",
                                        "aws_kms_replica_external_key.this"
                                      ]
                                    },
                                    "name": {
                                      "references": [
                                        "each.value.name",
                                        "each.value",
                                        "each.key"
                                      ]
                                    },
                                    "operations": {
                                      "references": [
                                        "each.value.operations",
                                        "each.value"
                                      ]
                                    },
                                    "retire_on_delete": {
                                      "references": [
                                        "each.value.retire_on_delete",
                                        "each.value"
                                      ]
                                    },
                                    "retiring_principal": {
                                      "references": [
                                        "each.value.retiring_principal",
                                        "each.value"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "var.grants",
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_kms_key.this",
                                  "mode": "managed",
                                  "type": "aws_kms_key",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "bypass_policy_lockout_safety_check": {
                                      "references": [
                                        "var.bypass_policy_lockout_safety_check"
                                      ]
                                    },
                                    "custom_key_store_id": {
                                      "references": [
                                        "var.custom_key_store_id"
                                      ]
                                    },
                                    "customer_master_key_spec": {
                                      "references": [
                                        "var.customer_master_key_spec"
                                      ]
                                    },
                                    "deletion_window_in_days": {
                                      "references": [
                                        "var.deletion_window_in_days"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.description"
                                      ]
                                    },
                                    "enable_key_rotation": {
                                      "references": [
                                        "var.enable_key_rotation"
                                      ]
                                    },
                                    "is_enabled": {
                                      "references": [
                                        "var.is_enabled"
                                      ]
                                    },
                                    "key_usage": {
                                      "references": [
                                        "var.key_usage"
                                      ]
                                    },
                                    "multi_region": {
                                      "references": [
                                        "var.multi_region"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "var.policy",
                                        "data.aws_iam_policy_document.this[0].json",
                                        "data.aws_iam_policy_document.this[0]",
                                        "data.aws_iam_policy_document.this"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_external",
                                      "var.create_replica",
                                      "var.create_replica_external"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_kms_replica_external_key.this",
                                  "mode": "managed",
                                  "type": "aws_kms_replica_external_key",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "bypass_policy_lockout_safety_check": {
                                      "references": [
                                        "var.bypass_policy_lockout_safety_check"
                                      ]
                                    },
                                    "deletion_window_in_days": {
                                      "references": [
                                        "var.deletion_window_in_days"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.description"
                                      ]
                                    },
                                    "enabled": {
                                      "references": [
                                        "var.is_enabled"
                                      ]
                                    },
                                    "key_material_base64": {
                                      "references": [
                                        "var.key_material_base64"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "var.policy",
                                        "data.aws_iam_policy_document.this[0].json",
                                        "data.aws_iam_policy_document.this[0]",
                                        "data.aws_iam_policy_document.this"
                                      ]
                                    },
                                    "primary_key_arn": {
                                      "references": [
                                        "var.primary_external_key_arn"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    },
                                    "valid_to": {
                                      "references": [
                                        "var.valid_to"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_replica",
                                      "var.create_external",
                                      "var.create_replica_external"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_kms_replica_key.this",
                                  "mode": "managed",
                                  "type": "aws_kms_replica_key",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "bypass_policy_lockout_safety_check": {
                                      "references": [
                                        "var.bypass_policy_lockout_safety_check"
                                      ]
                                    },
                                    "deletion_window_in_days": {
                                      "references": [
                                        "var.deletion_window_in_days"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.description"
                                      ]
                                    },
                                    "enabled": {
                                      "references": [
                                        "var.is_enabled"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "var.policy",
                                        "data.aws_iam_policy_document.this[0].json",
                                        "data.aws_iam_policy_document.this[0]",
                                        "data.aws_iam_policy_document.this"
                                      ]
                                    },
                                    "primary_key_arn": {
                                      "references": [
                                        "var.primary_key_arn"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_replica",
                                      "var.create_external",
                                      "var.create_replica_external"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_caller_identity.current",
                                  "mode": "data",
                                  "type": "aws_caller_identity",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_iam_policy_document.this",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "override_policy_documents": {
                                      "references": [
                                        "var.override_policy_documents"
                                      ]
                                    },
                                    "source_policy_documents": {
                                      "references": [
                                        "var.source_policy_documents"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_partition.current",
                                  "mode": "data",
                                  "type": "aws_partition",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create"
                                    ]
                                  }
                                }
                              ],
                              "variables": {
                                "aliases": {
                                  "default": [],
                                  "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
                                },
                                "aliases_use_name_prefix": {
                                  "default": false,
                                  "description": "Determines whether the alias name is used as a prefix"
                                },
                                "bypass_policy_lockout_safety_check": {
                                  "default": null,
                                  "description": "A flag to indicate whether to bypass the key policy lockout safety check. Setting this value to true increases the risk that the KMS key becomes unmanageable"
                                },
                                "computed_aliases": {
                                  "default": {},
                                  "description": "A map of aliases to create. Values provided via the `name` key of the map can be computed from upstream resources"
                                },
                                "create": {
                                  "default": true,
                                  "description": "Determines whether resources will be created (affects all resources)"
                                },
                                "create_external": {
                                  "default": false,
                                  "description": "Determines whether an external CMK (externally provided material) will be created or a standard CMK (AWS provided material)"
                                },
                                "create_replica": {
                                  "default": false,
                                  "description": "Determines whether a replica standard CMK will be created (AWS provided material)"
                                },
                                "create_replica_external": {
                                  "default": false,
                                  "description": "Determines whether a replica external CMK will be created (externally provided material)"
                                },
                                "custom_key_store_id": {
                                  "default": null,
                                  "description": "ID of the KMS Custom Key Store where the key will be stored instead of KMS (eg CloudHSM)."
                                },
                                "customer_master_key_spec": {
                                  "default": null,
                                  "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports. Valid values: `SYMMETRIC_DEFAULT`, `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`"
                                },
                                "deletion_window_in_days": {
                                  "default": null,
                                  "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
                                },
                                "description": {
                                  "default": null,
                                  "description": "The description of the key as viewed in AWS console"
                                },
                                "enable_default_policy": {
                                  "default": true,
                                  "description": "Specifies whether to enable the default key policy. Defaults to `true`"
                                },
                                "enable_key_rotation": {
                                  "default": true,
                                  "description": "Specifies whether key rotation is enabled. Defaults to `true`"
                                },
                                "enable_route53_dnssec": {
                                  "default": false,
                                  "description": "Determines whether the KMS policy used for Route53 DNSSEC signing is enabled"
                                },
                                "grants": {
                                  "default": {},
                                  "description": "A map of grant definitions to create"
                                },
                                "is_enabled": {
                                  "default": null,
                                  "description": "Specifies whether the key is enabled. Defaults to `true`"
                                },
                                "key_administrators": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators)"
                                },
                                "key_asymmetric_public_encryption_users": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key asymmetric public encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
                                },
                                "key_asymmetric_sign_verify_users": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key asymmetric sign and verify users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
                                },
                                "key_hmac_users": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key HMAC users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
                                },
                                "key_material_base64": {
                                  "default": null,
                                  "description": "Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. External key only"
                                },
                                "key_owners": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
                                },
                                "key_service_roles_for_autoscaling": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [AWSServiceRoleForAutoScaling roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html#policy-example-cmk-access)"
                                },
                                "key_service_users": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
                                },
                                "key_statements": {
                                  "default": {},
                                  "description": "A map of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) for custom permission usage"
                                },
                                "key_symmetric_encryption_users": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key symmetric encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
                                },
                                "key_usage": {
                                  "default": null,
                                  "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT` or `SIGN_VERIFY`. Defaults to `ENCRYPT_DECRYPT`"
                                },
                                "key_users": {
                                  "default": [],
                                  "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
                                },
                                "multi_region": {
                                  "default": false,
                                  "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`"
                                },
                                "override_policy_documents": {
                                  "default": [],
                                  "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
                                },
                                "policy": {
                                  "default": null,
                                  "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws_iam_policy_document`, in the form that designates a principal, can be used"
                                },
                                "primary_external_key_arn": {
                                  "default": null,
                                  "description": "The primary external key arn of a multi-region replica external key"
                                },
                                "primary_key_arn": {
                                  "default": null,
                                  "description": "The primary key arn of a multi-region replica key"
                                },
                                "route53_dnssec_sources": {
                                  "default": [],
                                  "description": "A list of maps containing `account_ids` and Route53 `hosted_zone_arn` that will be allowed to sign DNSSEC records"
                                },
                                "source_policy_documents": {
                                  "default": [],
                                  "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
                                },
                                "tags": {
                                  "default": {},
                                  "description": "A map of tags to add to all resources"
                                },
                                "valid_to": {
                                  "default": null,
                                  "description": "Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire"
                                }
                              }
                            },
                            "version_constraint": "2.1.0"
                          },
                          "self_managed_node_group": {
                            "source": "./modules/self-managed-node-group",
                            "expressions": {
                              "additional_cluster_dns_ips": {
                                "references": [
                                  "each.value.additional_cluster_dns_ips",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.additional_cluster_dns_ips",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "ami_id": {
                                "references": [
                                  "each.value.ami_id",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.ami_id",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "ami_type": {
                                "references": [
                                  "each.value.ami_type",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.ami_type",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "autoscaling_group_tags": {
                                "references": [
                                  "each.value.autoscaling_group_tags",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.autoscaling_group_tags",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "availability_zones": {
                                "references": [
                                  "each.value.availability_zones",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.availability_zones",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "block_device_mappings": {
                                "references": [
                                  "each.value.block_device_mappings",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.block_device_mappings",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "bootstrap_extra_args": {
                                "references": [
                                  "each.value.bootstrap_extra_args",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.bootstrap_extra_args",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "capacity_rebalance": {
                                "references": [
                                  "each.value.capacity_rebalance",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.capacity_rebalance",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "capacity_reservation_specification": {
                                "references": [
                                  "each.value.capacity_reservation_specification",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.capacity_reservation_specification",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "cloudinit_post_nodeadm": {
                                "references": [
                                  "each.value.cloudinit_post_nodeadm",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.cloudinit_post_nodeadm",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "cloudinit_pre_nodeadm": {
                                "references": [
                                  "each.value.cloudinit_pre_nodeadm",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.cloudinit_pre_nodeadm",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "cluster_auth_base64": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_certificate_authority_data\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_endpoint": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_endpoint\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_ip_family": {
                                "references": [
                                  "var.cluster_ip_family"
                                ]
                              },
                              "cluster_name": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_name\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_primary_security_group_id": {
                                "references": [
                                  "each.value.attach_cluster_primary_security_group",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.attach_cluster_primary_security_group",
                                  "var.self_managed_node_group_defaults",
                                  "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                                  "aws_eks_cluster.this[0].vpc_config[0]",
                                  "aws_eks_cluster.this[0].vpc_config",
                                  "aws_eks_cluster.this[0]",
                                  "aws_eks_cluster.this"
                                ]
                              },
                              "cluster_service_cidr": {
                                "references": [
                                  "time_sleep.this[0].triggers[\"cluster_service_cidr\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "cluster_version": {
                                "references": [
                                  "each.value.cluster_version",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.cluster_version",
                                  "var.self_managed_node_group_defaults",
                                  "time_sleep.this[0].triggers[\"cluster_version\"]",
                                  "time_sleep.this[0].triggers",
                                  "time_sleep.this[0]",
                                  "time_sleep.this"
                                ]
                              },
                              "context": {
                                "references": [
                                  "each.value.context",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.context",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "cpu_options": {
                                "references": [
                                  "each.value.cpu_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.cpu_options",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create": {
                                "references": [
                                  "each.value.create",
                                  "each.value"
                                ]
                              },
                              "create_access_entry": {
                                "references": [
                                  "each.value.create_access_entry",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_access_entry",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create_autoscaling_group": {
                                "references": [
                                  "each.value.create_autoscaling_group",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_autoscaling_group",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create_iam_instance_profile": {
                                "references": [
                                  "each.value.create_iam_instance_profile",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_iam_instance_profile",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create_iam_role_policy": {
                                "references": [
                                  "each.value.create_iam_role_policy",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_iam_role_policy",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create_launch_template": {
                                "references": [
                                  "each.value.create_launch_template",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_launch_template",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create_placement_group": {
                                "references": [
                                  "each.value.create_placement_group",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_placement_group",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "create_schedule": {
                                "references": [
                                  "each.value.create_schedule",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.create_schedule",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "credit_specification": {
                                "references": [
                                  "each.value.credit_specification",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.credit_specification",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "default_cooldown": {
                                "references": [
                                  "each.value.default_cooldown",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.default_cooldown",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "default_instance_warmup": {
                                "references": [
                                  "each.value.default_instance_warmup",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.default_instance_warmup",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "delete_timeout": {
                                "references": [
                                  "each.value.delete_timeout",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.delete_timeout",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "desired_size": {
                                "references": [
                                  "each.value.desired_size",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.desired_size",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "desired_size_type": {
                                "references": [
                                  "each.value.desired_size_type",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.desired_size_type",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "disable_api_termination": {
                                "references": [
                                  "each.value.disable_api_termination",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.disable_api_termination",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "ebs_optimized": {
                                "references": [
                                  "each.value.ebs_optimized",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.ebs_optimized",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "efa_indices": {
                                "references": [
                                  "each.value.efa_indices",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.efa_indices",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "elastic_gpu_specifications": {
                                "references": [
                                  "each.value.elastic_gpu_specifications",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.elastic_gpu_specifications",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "elastic_inference_accelerator": {
                                "references": [
                                  "each.value.elastic_inference_accelerator",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.elastic_inference_accelerator",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "enable_efa_only": {
                                "references": [
                                  "each.value.enable_efa_only",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.enable_efa_only",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "enable_efa_support": {
                                "references": [
                                  "each.value.enable_efa_support",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.enable_efa_support",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "enable_monitoring": {
                                "references": [
                                  "each.value.enable_monitoring",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.enable_monitoring",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "enabled_metrics": {
                                "references": [
                                  "each.value.enabled_metrics",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.enabled_metrics",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "enclave_options": {
                                "references": [
                                  "each.value.enclave_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.enclave_options",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "force_delete": {
                                "references": [
                                  "each.value.force_delete",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.force_delete",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "force_delete_warm_pool": {
                                "references": [
                                  "each.value.force_delete_warm_pool",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.force_delete_warm_pool",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "health_check_grace_period": {
                                "references": [
                                  "each.value.health_check_grace_period",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.health_check_grace_period",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "health_check_type": {
                                "references": [
                                  "each.value.health_check_type",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.health_check_type",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "hibernation_options": {
                                "references": [
                                  "each.value.hibernation_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.hibernation_options",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_instance_profile_arn": {
                                "references": [
                                  "each.value.iam_instance_profile_arn",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_instance_profile_arn",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_additional_policies": {
                                "references": [
                                  "each.value",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_arn": {
                                "references": [
                                  "each.value.iam_role_arn",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_arn",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_attach_cni_policy": {
                                "references": [
                                  "each.value.iam_role_attach_cni_policy",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_attach_cni_policy",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_description": {
                                "references": [
                                  "each.value.iam_role_description",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_description",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_name": {
                                "references": [
                                  "each.value.iam_role_name",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_name",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_path": {
                                "references": [
                                  "each.value.iam_role_path",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_path",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_permissions_boundary": {
                                "references": [
                                  "each.value.iam_role_permissions_boundary",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_permissions_boundary",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_policy_statements": {
                                "references": [
                                  "each.value.iam_role_policy_statements",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_policy_statements",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_tags": {
                                "references": [
                                  "each.value.iam_role_tags",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_tags",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "iam_role_use_name_prefix": {
                                "references": [
                                  "each.value.iam_role_use_name_prefix",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.iam_role_use_name_prefix",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "ignore_failed_scaling_activities": {
                                "references": [
                                  "each.value.ignore_failed_scaling_activities",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.ignore_failed_scaling_activities",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "initial_lifecycle_hooks": {
                                "references": [
                                  "each.value.initial_lifecycle_hooks",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.initial_lifecycle_hooks",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "instance_initiated_shutdown_behavior": {
                                "references": [
                                  "each.value.instance_initiated_shutdown_behavior",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.instance_initiated_shutdown_behavior",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "instance_maintenance_policy": {
                                "references": [
                                  "each.value.instance_maintenance_policy",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.instance_maintenance_policy",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "instance_market_options": {
                                "references": [
                                  "each.value.instance_market_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.instance_market_options",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "instance_refresh": {
                                "references": [
                                  "each.value.instance_refresh",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.instance_refresh",
                                  "var.self_managed_node_group_defaults",
                                  "local.default_instance_refresh"
                                ]
                              },
                              "instance_requirements": {
                                "references": [
                                  "each.value.instance_requirements",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.instance_requirements",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "instance_type": {
                                "references": [
                                  "each.value.instance_type",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.instance_type",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "kernel_id": {
                                "references": [
                                  "each.value.kernel_id",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.kernel_id",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "key_name": {
                                "references": [
                                  "each.value.key_name",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.key_name",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_default_version": {
                                "references": [
                                  "each.value.launch_template_default_version",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_default_version",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_description": {
                                "references": [
                                  "each.value.launch_template_description",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_description",
                                  "var.self_managed_node_group_defaults",
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "launch_template_id": {
                                "references": [
                                  "each.value.launch_template_id",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_id",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_name": {
                                "references": [
                                  "each.value.launch_template_name",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_name",
                                  "var.self_managed_node_group_defaults",
                                  "each.key"
                                ]
                              },
                              "launch_template_tags": {
                                "references": [
                                  "each.value.launch_template_tags",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_tags",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_use_name_prefix": {
                                "references": [
                                  "each.value.launch_template_use_name_prefix",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_use_name_prefix",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "launch_template_version": {
                                "references": [
                                  "each.value.launch_template_version",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.launch_template_version",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "license_specifications": {
                                "references": [
                                  "each.value.license_specifications",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.license_specifications",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "maintenance_options": {
                                "references": [
                                  "each.value.maintenance_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.maintenance_options",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "max_instance_lifetime": {
                                "references": [
                                  "each.value.max_instance_lifetime",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.max_instance_lifetime",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "max_size": {
                                "references": [
                                  "each.value.max_size",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.max_size",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "metadata_options": {
                                "references": [
                                  "each.value.metadata_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.metadata_options",
                                  "var.self_managed_node_group_defaults",
                                  "local.metadata_options"
                                ]
                              },
                              "metrics_granularity": {
                                "references": [
                                  "each.value.metrics_granularity",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.metrics_granularity",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "min_elb_capacity": {
                                "references": [
                                  "each.value.min_elb_capacity",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.min_elb_capacity",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "min_size": {
                                "references": [
                                  "each.value.min_size",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.min_size",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "mixed_instances_policy": {
                                "references": [
                                  "each.value.mixed_instances_policy",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.mixed_instances_policy",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "name": {
                                "references": [
                                  "each.value.name",
                                  "each.value",
                                  "each.key"
                                ]
                              },
                              "network_interfaces": {
                                "references": [
                                  "each.value.network_interfaces",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.network_interfaces",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "placement": {
                                "references": [
                                  "each.value.placement",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.placement",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "placement_group": {
                                "references": [
                                  "each.value.placement_group",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.placement_group",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "placement_group_az": {
                                "references": [
                                  "each.value.placement_group_az",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.placement_group_az",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "platform": {
                                "references": [
                                  "each.value.platform",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.platform",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "post_bootstrap_user_data": {
                                "references": [
                                  "each.value.post_bootstrap_user_data",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.post_bootstrap_user_data",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "pre_bootstrap_user_data": {
                                "references": [
                                  "each.value.pre_bootstrap_user_data",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.pre_bootstrap_user_data",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "private_dns_name_options": {
                                "references": [
                                  "each.value.private_dns_name_options",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.private_dns_name_options",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "protect_from_scale_in": {
                                "references": [
                                  "each.value.protect_from_scale_in",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.protect_from_scale_in",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "ram_disk_id": {
                                "references": [
                                  "each.value.ram_disk_id",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.ram_disk_id",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "schedules": {
                                "references": [
                                  "each.value.schedules",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.schedules",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "service_linked_role_arn": {
                                "references": [
                                  "each.value.service_linked_role_arn",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.service_linked_role_arn",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "subnet_ids": {
                                "references": [
                                  "each.value.subnet_ids",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.subnet_ids",
                                  "var.self_managed_node_group_defaults",
                                  "var.subnet_ids"
                                ]
                              },
                              "suspended_processes": {
                                "references": [
                                  "each.value.suspended_processes",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.suspended_processes",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "tag_specifications": {
                                "references": [
                                  "each.value.tag_specifications",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.tag_specifications",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.tags",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "target_group_arns": {
                                "references": [
                                  "each.value.target_group_arns",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.target_group_arns",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "termination_policies": {
                                "references": [
                                  "each.value.termination_policies",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.termination_policies",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "update_launch_template_default_version": {
                                "references": [
                                  "each.value.update_launch_template_default_version",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.update_launch_template_default_version",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "use_mixed_instances_policy": {
                                "references": [
                                  "each.value.use_mixed_instances_policy",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.use_mixed_instances_policy",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "use_name_prefix": {
                                "references": [
                                  "each.value.use_name_prefix",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.use_name_prefix",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "user_data_template_path": {
                                "references": [
                                  "each.value.user_data_template_path",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.user_data_template_path",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "vpc_security_group_ids": {
                                "references": [
                                  "local.node_security_group_id",
                                  "each.value.vpc_security_group_ids",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.vpc_security_group_ids",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "wait_for_capacity_timeout": {
                                "references": [
                                  "each.value.wait_for_capacity_timeout",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.wait_for_capacity_timeout",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "wait_for_elb_capacity": {
                                "references": [
                                  "each.value.wait_for_elb_capacity",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.wait_for_elb_capacity",
                                  "var.self_managed_node_group_defaults"
                                ]
                              },
                              "warm_pool": {
                                "references": [
                                  "each.value.warm_pool",
                                  "each.value",
                                  "var.self_managed_node_group_defaults.warm_pool",
                                  "var.self_managed_node_group_defaults"
                                ]
                              }
                            },
                            "for_each_expression": {
                              "references": [
                                "var.self_managed_node_groups",
                                "var.create"
                              ]
                            },
                            "module": {
                              "outputs": {
                                "access_entry_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_eks_access_entry.this[0].access_entry_arn",
                                      "aws_eks_access_entry.this[0]",
                                      "aws_eks_access_entry.this"
                                    ]
                                  },
                                  "description": "Amazon Resource Name (ARN) of the Access Entry"
                                },
                                "autoscaling_group_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].arn",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The ARN for this autoscaling group"
                                },
                                "autoscaling_group_availability_zones": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].availability_zones",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The availability zones of the autoscaling group"
                                },
                                "autoscaling_group_default_cooldown": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].default_cooldown",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "Time between a scaling activity and the succeeding scaling activity"
                                },
                                "autoscaling_group_desired_capacity": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].desired_capacity",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The number of Amazon EC2 instances that should be running in the group"
                                },
                                "autoscaling_group_health_check_grace_period": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].health_check_grace_period",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "Time after instance comes into service before checking health"
                                },
                                "autoscaling_group_health_check_type": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].health_check_type",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "EC2 or ELB. Controls how health checking is done"
                                },
                                "autoscaling_group_id": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].id",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The autoscaling group id"
                                },
                                "autoscaling_group_max_size": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].max_size",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The maximum size of the autoscaling group"
                                },
                                "autoscaling_group_min_size": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].min_size",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The minimum size of the autoscaling group"
                                },
                                "autoscaling_group_name": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].name",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The autoscaling group name"
                                },
                                "autoscaling_group_schedule_arns": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_schedule.this"
                                    ]
                                  },
                                  "description": "ARNs of autoscaling group schedules"
                                },
                                "autoscaling_group_vpc_zone_identifier": {
                                  "expression": {
                                    "references": [
                                      "aws_autoscaling_group.this[0].vpc_zone_identifier",
                                      "aws_autoscaling_group.this[0]",
                                      "aws_autoscaling_group.this"
                                    ]
                                  },
                                  "description": "The VPC zone identifier"
                                },
                                "iam_instance_profile_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_instance_profile.this[0].arn",
                                      "aws_iam_instance_profile.this[0]",
                                      "aws_iam_instance_profile.this",
                                      "var.iam_instance_profile_arn"
                                    ]
                                  },
                                  "description": "ARN assigned by AWS to the instance profile"
                                },
                                "iam_instance_profile_id": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_instance_profile.this[0].id",
                                      "aws_iam_instance_profile.this[0]",
                                      "aws_iam_instance_profile.this"
                                    ]
                                  },
                                  "description": "Instance profile's ID"
                                },
                                "iam_instance_profile_unique": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_instance_profile.this[0].unique_id",
                                      "aws_iam_instance_profile.this[0]",
                                      "aws_iam_instance_profile.this"
                                    ]
                                  },
                                  "description": "Stable and unique string identifying the IAM instance profile"
                                },
                                "iam_role_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].arn",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                                },
                                "iam_role_name": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].name",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "The name of the IAM role"
                                },
                                "iam_role_unique_id": {
                                  "expression": {
                                    "references": [
                                      "aws_iam_role.this[0].unique_id",
                                      "aws_iam_role.this[0]",
                                      "aws_iam_role.this"
                                    ]
                                  },
                                  "description": "Stable and unique string identifying the IAM role"
                                },
                                "image_id": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].image_id",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "ID of the image"
                                },
                                "launch_template_arn": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].arn",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The ARN of the launch template"
                                },
                                "launch_template_id": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].id",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The ID of the launch template"
                                },
                                "launch_template_latest_version": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].latest_version",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The latest version of the launch template"
                                },
                                "launch_template_name": {
                                  "expression": {
                                    "references": [
                                      "aws_launch_template.this[0].name",
                                      "aws_launch_template.this[0]",
                                      "aws_launch_template.this"
                                    ]
                                  },
                                  "description": "The name of the launch template"
                                },
                                "platform": {
                                  "expression": {
                                    "references": [
                                      "module.user_data.platform",
                                      "module.user_data"
                                    ]
                                  },
                                  "description": "[DEPRECATED - Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023`, or `windows`"
                                },
                                "user_data": {
                                  "expression": {
                                    "references": [
                                      "module.user_data.user_data",
                                      "module.user_data"
                                    ]
                                  },
                                  "description": "Base64 encoded user data"
                                }
                              },
                              "resources": [
                                {
                                  "address": "aws_autoscaling_group.this",
                                  "mode": "managed",
                                  "type": "aws_autoscaling_group",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "availability_zones": {
                                      "references": [
                                        "var.availability_zones"
                                      ]
                                    },
                                    "capacity_rebalance": {
                                      "references": [
                                        "var.capacity_rebalance"
                                      ]
                                    },
                                    "context": {
                                      "references": [
                                        "var.context"
                                      ]
                                    },
                                    "default_cooldown": {
                                      "references": [
                                        "var.default_cooldown"
                                      ]
                                    },
                                    "default_instance_warmup": {
                                      "references": [
                                        "var.default_instance_warmup"
                                      ]
                                    },
                                    "desired_capacity": {
                                      "references": [
                                        "var.desired_size"
                                      ]
                                    },
                                    "desired_capacity_type": {
                                      "references": [
                                        "var.desired_size_type"
                                      ]
                                    },
                                    "enabled_metrics": {
                                      "references": [
                                        "var.enabled_metrics"
                                      ]
                                    },
                                    "force_delete": {
                                      "references": [
                                        "var.force_delete"
                                      ]
                                    },
                                    "force_delete_warm_pool": {
                                      "references": [
                                        "var.force_delete_warm_pool"
                                      ]
                                    },
                                    "health_check_grace_period": {
                                      "references": [
                                        "var.health_check_grace_period"
                                      ]
                                    },
                                    "health_check_type": {
                                      "references": [
                                        "var.health_check_type"
                                      ]
                                    },
                                    "ignore_failed_scaling_activities": {
                                      "references": [
                                        "var.ignore_failed_scaling_activities"
                                      ]
                                    },
                                    "max_instance_lifetime": {
                                      "references": [
                                        "var.max_instance_lifetime"
                                      ]
                                    },
                                    "max_size": {
                                      "references": [
                                        "var.max_size"
                                      ]
                                    },
                                    "metrics_granularity": {
                                      "references": [
                                        "var.metrics_granularity"
                                      ]
                                    },
                                    "min_elb_capacity": {
                                      "references": [
                                        "var.min_elb_capacity"
                                      ]
                                    },
                                    "min_size": {
                                      "references": [
                                        "var.min_size"
                                      ]
                                    },
                                    "name": {
                                      "references": [
                                        "var.use_name_prefix",
                                        "var.name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.use_name_prefix",
                                        "var.name"
                                      ]
                                    },
                                    "placement_group": {
                                      "references": [
                                        "var.placement_group"
                                      ]
                                    },
                                    "protect_from_scale_in": {
                                      "references": [
                                        "var.protect_from_scale_in"
                                      ]
                                    },
                                    "service_linked_role_arn": {
                                      "references": [
                                        "var.service_linked_role_arn"
                                      ]
                                    },
                                    "suspended_processes": {
                                      "references": [
                                        "var.suspended_processes"
                                      ]
                                    },
                                    "target_group_arns": {
                                      "references": [
                                        "var.target_group_arns"
                                      ]
                                    },
                                    "termination_policies": {
                                      "references": [
                                        "var.termination_policies"
                                      ]
                                    },
                                    "timeouts": {
                                      "delete": {
                                        "references": [
                                          "var.delete_timeout"
                                        ]
                                      }
                                    },
                                    "vpc_zone_identifier": {
                                      "references": [
                                        "local.enable_efa_support",
                                        "data.aws_subnets.placement_group[0].ids",
                                        "data.aws_subnets.placement_group[0]",
                                        "data.aws_subnets.placement_group",
                                        "var.subnet_ids"
                                      ]
                                    },
                                    "wait_for_capacity_timeout": {
                                      "references": [
                                        "var.wait_for_capacity_timeout"
                                      ]
                                    },
                                    "wait_for_elb_capacity": {
                                      "references": [
                                        "var.wait_for_elb_capacity"
                                      ]
                                    }
                                  },
                                  "schema_version": 1,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_autoscaling_group"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_autoscaling_schedule.this",
                                  "mode": "managed",
                                  "type": "aws_autoscaling_schedule",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "autoscaling_group_name": {
                                      "references": [
                                        "aws_autoscaling_group.this[0].name",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this"
                                      ]
                                    },
                                    "desired_capacity": {
                                      "references": [
                                        "each.value.desired_size",
                                        "each.value"
                                      ]
                                    },
                                    "end_time": {
                                      "references": [
                                        "each.value.end_time",
                                        "each.value"
                                      ]
                                    },
                                    "max_size": {
                                      "references": [
                                        "each.value.max_size",
                                        "each.value"
                                      ]
                                    },
                                    "min_size": {
                                      "references": [
                                        "each.value.min_size",
                                        "each.value"
                                      ]
                                    },
                                    "recurrence": {
                                      "references": [
                                        "each.value.recurrence",
                                        "each.value"
                                      ]
                                    },
                                    "scheduled_action_name": {
                                      "references": [
                                        "each.key"
                                      ]
                                    },
                                    "start_time": {
                                      "references": [
                                        "each.value.start_time",
                                        "each.value"
                                      ]
                                    },
                                    "time_zone": {
                                      "references": [
                                        "each.value.time_zone",
                                        "each.value"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "var.schedules",
                                      "var.create",
                                      "var.create_schedule"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_eks_access_entry.this",
                                  "mode": "managed",
                                  "type": "aws_eks_access_entry",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "cluster_name": {
                                      "references": [
                                        "var.cluster_name"
                                      ]
                                    },
                                    "principal_arn": {
                                      "references": [
                                        "var.create_iam_instance_profile",
                                        "aws_iam_role.this[0].arn",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this",
                                        "var.iam_role_arn"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    },
                                    "type": {
                                      "references": [
                                        "local.user_data_type"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_access_entry"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_instance_profile.this",
                                  "mode": "managed",
                                  "type": "aws_iam_instance_profile",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "path": {
                                      "references": [
                                        "var.iam_role_path"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags",
                                        "var.iam_role_tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_instance_profile"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "assume_role_policy": {
                                      "references": [
                                        "data.aws_iam_policy_document.assume_role_policy[0].json",
                                        "data.aws_iam_policy_document.assume_role_policy[0]",
                                        "data.aws_iam_policy_document.assume_role_policy"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.iam_role_description"
                                      ]
                                    },
                                    "force_detach_policies": {
                                      "constant_value": true
                                    },
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "path": {
                                      "references": [
                                        "var.iam_role_path"
                                      ]
                                    },
                                    "permissions_boundary": {
                                      "references": [
                                        "var.iam_role_permissions_boundary"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags",
                                        "var.iam_role_tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_instance_profile"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.iam_role_use_name_prefix",
                                        "local.iam_role_name"
                                      ]
                                    },
                                    "policy": {
                                      "references": [
                                        "data.aws_iam_policy_document.role[0].json",
                                        "data.aws_iam_policy_document.role[0]",
                                        "data.aws_iam_policy_document.role"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].id",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role_policy"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy_attachment.additional",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy_attachment",
                                  "name": "additional",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "policy_arn": {
                                      "references": [
                                        "each.value"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "var.iam_role_additional_policies",
                                      "local.create_iam_instance_profile"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_iam_role_policy_attachment.this",
                                  "mode": "managed",
                                  "type": "aws_iam_role_policy_attachment",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "policy_arn": {
                                      "references": [
                                        "each.value"
                                      ]
                                    },
                                    "role": {
                                      "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "for_each_expression": {
                                    "references": [
                                      "local.iam_role_policy_prefix",
                                      "local.iam_role_policy_prefix",
                                      "local.ipv4_cni_policy",
                                      "local.ipv6_cni_policy",
                                      "local.create_iam_instance_profile"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_launch_template.this",
                                  "mode": "managed",
                                  "type": "aws_launch_template",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "default_version": {
                                      "references": [
                                        "var.launch_template_default_version"
                                      ]
                                    },
                                    "description": {
                                      "references": [
                                        "var.launch_template_description"
                                      ]
                                    },
                                    "disable_api_termination": {
                                      "references": [
                                        "var.disable_api_termination"
                                      ]
                                    },
                                    "ebs_optimized": {
                                      "references": [
                                        "var.ebs_optimized"
                                      ]
                                    },
                                    "iam_instance_profile": [
                                      {
                                        "arn": {
                                          "references": [
                                            "var.create_iam_instance_profile",
                                            "aws_iam_instance_profile.this[0].arn",
                                            "aws_iam_instance_profile.this[0]",
                                            "aws_iam_instance_profile.this",
                                            "var.iam_instance_profile_arn"
                                          ]
                                        }
                                      }
                                    ],
                                    "image_id": {
                                      "references": [
                                        "var.ami_id",
                                        "data.aws_ssm_parameter.ami[0].value",
                                        "data.aws_ssm_parameter.ami[0]",
                                        "data.aws_ssm_parameter.ami"
                                      ]
                                    },
                                    "instance_initiated_shutdown_behavior": {
                                      "references": [
                                        "var.instance_initiated_shutdown_behavior"
                                      ]
                                    },
                                    "instance_type": {
                                      "references": [
                                        "var.instance_type"
                                      ]
                                    },
                                    "kernel_id": {
                                      "references": [
                                        "var.kernel_id"
                                      ]
                                    },
                                    "key_name": {
                                      "references": [
                                        "var.key_name"
                                      ]
                                    },
                                    "name": {
                                      "references": [
                                        "var.launch_template_use_name_prefix",
                                        "local.launch_template_name"
                                      ]
                                    },
                                    "name_prefix": {
                                      "references": [
                                        "var.launch_template_use_name_prefix",
                                        "local.launch_template_name"
                                      ]
                                    },
                                    "ram_disk_id": {
                                      "references": [
                                        "var.ram_disk_id"
                                      ]
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    },
                                    "update_default_version": {
                                      "references": [
                                        "var.update_launch_template_default_version"
                                      ]
                                    },
                                    "user_data": {
                                      "references": [
                                        "module.user_data.user_data",
                                        "module.user_data"
                                      ]
                                    },
                                    "vpc_security_group_ids": {
                                      "references": [
                                        "local.network_interfaces",
                                        "local.security_group_ids"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.create_launch_template"
                                    ]
                                  },
                                  "depends_on": [
                                    "aws_iam_role_policy_attachment.this",
                                    "aws_iam_role_policy_attachment.additional"
                                  ]
                                },
                                {
                                  "address": "aws_placement_group.this",
                                  "mode": "managed",
                                  "type": "aws_placement_group",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.cluster_name",
                                        "var.name"
                                      ]
                                    },
                                    "strategy": {
                                      "constant_value": "cluster"
                                    },
                                    "tags": {
                                      "references": [
                                        "var.tags"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_placement_group"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_caller_identity.current",
                                  "mode": "data",
                                  "type": "aws_caller_identity",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                },
                                {
                                  "address": "data.aws_ec2_instance_type.this",
                                  "mode": "data",
                                  "type": "aws_ec2_instance_type",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "instance_type": {
                                      "references": [
                                        "var.instance_type"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create",
                                      "var.enable_efa_support"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_ec2_instance_type_offerings.this",
                                  "mode": "data",
                                  "type": "aws_ec2_instance_type_offerings",
                                  "name": "this",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "filter": [
                                      {
                                        "name": {
                                          "constant_value": "instance-type"
                                        },
                                        "values": {
                                          "references": [
                                            "var.instance_type"
                                          ]
                                        }
                                      }
                                    ],
                                    "location_type": {
                                      "constant_value": "availability-zone-id"
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.enable_efa_support"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_iam_policy_document.assume_role_policy",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "assume_role_policy",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "statement": [
                                      {
                                        "actions": {
                                          "constant_value": [
                                            "sts:AssumeRole"
                                          ]
                                        },
                                        "principals": [
                                          {
                                            "identifiers": {
                                              "constant_value": [
                                                "ec2.amazonaws.com"
                                              ]
                                            },
                                            "type": {
                                              "constant_value": "Service"
                                            }
                                          }
                                        ],
                                        "sid": {
                                          "constant_value": "EKSNodeAssumeRole"
                                        }
                                      }
                                    ]
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_instance_profile"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_iam_policy_document.role",
                                  "mode": "data",
                                  "type": "aws_iam_policy_document",
                                  "name": "role",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_iam_role_policy"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_partition.current",
                                  "mode": "data",
                                  "type": "aws_partition",
                                  "name": "current",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "schema_version": 0
                                },
                                {
                                  "address": "data.aws_ssm_parameter.ami",
                                  "mode": "data",
                                  "type": "aws_ssm_parameter",
                                  "name": "ami",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "local.ami_type_to_ssm_param",
                                        "var.ami_type"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.create"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.aws_subnets.placement_group",
                                  "mode": "data",
                                  "type": "aws_subnets",
                                  "name": "placement_group",
                                  "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                                  "expressions": {
                                    "filter": [
                                      {
                                        "name": {
                                          "constant_value": "subnet-id"
                                        },
                                        "values": {
                                          "references": [
                                            "var.subnet_ids"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "local.create_placement_group"
                                    ]
                                  }
                                }
                              ],
                              "module_calls": {
                                "user_data": {
                                  "source": "../_user_data",
                                  "expressions": {
                                    "additional_cluster_dns_ips": {
                                      "references": [
                                        "var.additional_cluster_dns_ips"
                                      ]
                                    },
                                    "ami_type": {
                                      "references": [
                                        "var.ami_type"
                                      ]
                                    },
                                    "bootstrap_extra_args": {
                                      "references": [
                                        "var.bootstrap_extra_args"
                                      ]
                                    },
                                    "cloudinit_post_nodeadm": {
                                      "references": [
                                        "var.cloudinit_post_nodeadm"
                                      ]
                                    },
                                    "cloudinit_pre_nodeadm": {
                                      "references": [
                                        "var.cloudinit_pre_nodeadm"
                                      ]
                                    },
                                    "cluster_auth_base64": {
                                      "references": [
                                        "var.cluster_auth_base64"
                                      ]
                                    },
                                    "cluster_endpoint": {
                                      "references": [
                                        "var.cluster_endpoint"
                                      ]
                                    },
                                    "cluster_ip_family": {
                                      "references": [
                                        "var.cluster_ip_family"
                                      ]
                                    },
                                    "cluster_name": {
                                      "references": [
                                        "var.cluster_name"
                                      ]
                                    },
                                    "cluster_service_cidr": {
                                      "references": [
                                        "var.cluster_service_cidr"
                                      ]
                                    },
                                    "create": {
                                      "references": [
                                        "var.create"
                                      ]
                                    },
                                    "enable_bootstrap_user_data": {
                                      "constant_value": true
                                    },
                                    "is_eks_managed_node_group": {
                                      "constant_value": false
                                    },
                                    "platform": {
                                      "references": [
                                        "local.user_data_type"
                                      ]
                                    },
                                    "post_bootstrap_user_data": {
                                      "references": [
                                        "var.post_bootstrap_user_data"
                                      ]
                                    },
                                    "pre_bootstrap_user_data": {
                                      "references": [
                                        "var.pre_bootstrap_user_data"
                                      ]
                                    },
                                    "user_data_template_path": {
                                      "references": [
                                        "var.user_data_template_path"
                                      ]
                                    }
                                  },
                                  "module": {
                                    "outputs": {
                                      "platform": {
                                        "expression": {
                                          "references": [
                                            "local.user_data_type"
                                          ]
                                        },
                                        "description": "[DEPRECATED - Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023, or `windows`"
                                      },
                                      "user_data": {
                                        "expression": {
                                          "references": [
                                            "local.user_data_type_to_rendered",
                                            "local.user_data_type"
                                          ]
                                        },
                                        "description": "Base64 encoded user data rendered for the provided inputs"
                                      }
                                    },
                                    "resources": [
                                      {
                                        "address": "null_resource.validate_cluster_service_cidr",
                                        "mode": "managed",
                                        "type": "null_resource",
                                        "name": "validate_cluster_service_cidr",
                                        "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data:null",
                                        "schema_version": 0
                                      },
                                      {
                                        "address": "data.cloudinit_config.al2023_eks_managed_node_group",
                                        "mode": "data",
                                        "type": "cloudinit_config",
                                        "name": "al2023_eks_managed_node_group",
                                        "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data:cloudinit",
                                        "expressions": {
                                          "base64_encode": {
                                            "constant_value": true
                                          },
                                          "boundary": {
                                            "constant_value": "MIMEBOUNDARY"
                                          },
                                          "gzip": {
                                            "constant_value": false
                                          }
                                        },
                                        "schema_version": 0,
                                        "count_expression": {
                                          "references": [
                                            "var.create",
                                            "local.user_data_type",
                                            "local.nodeadm_cloudinit"
                                          ]
                                        }
                                      },
                                      {
                                        "address": "data.cloudinit_config.linux_eks_managed_node_group",
                                        "mode": "data",
                                        "type": "cloudinit_config",
                                        "name": "linux_eks_managed_node_group",
                                        "provider_config_key": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data:cloudinit",
                                        "expressions": {
                                          "base64_encode": {
                                            "constant_value": true
                                          },
                                          "boundary": {
                                            "constant_value": "//"
                                          },
                                          "gzip": {
                                            "constant_value": false
                                          },
                                          "part": [
                                            {
                                              "content": {
                                                "references": [
                                                  "var.pre_bootstrap_user_data"
                                                ]
                                              },
                                              "content_type": {
                                                "constant_value": "text/x-shellscript"
                                              }
                                            }
                                          ]
                                        },
                                        "schema_version": 0,
                                        "count_expression": {
                                          "references": [
                                            "var.create",
                                            "local.user_data_type",
                                            "var.is_eks_managed_node_group",
                                            "var.enable_bootstrap_user_data",
                                            "var.pre_bootstrap_user_data",
                                            "var.user_data_template_path"
                                          ]
                                        }
                                      }
                                    ],
                                    "variables": {
                                      "additional_cluster_dns_ips": {
                                        "default": [],
                                        "description": "Additional DNS IP addresses to use for the cluster. Only used when `ami_type` = `BOTTLEROCKET_*`"
                                      },
                                      "ami_type": {
                                        "default": null,
                                        "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values"
                                      },
                                      "bootstrap_extra_args": {
                                        "default": "",
                                        "description": "Additional arguments passed to the bootstrap script. When `ami_type` = `BOTTLEROCKET_*`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                                      },
                                      "cloudinit_post_nodeadm": {
                                        "default": [],
                                        "description": "Array of cloud-init document parts that are created after the nodeadm document part"
                                      },
                                      "cloudinit_pre_nodeadm": {
                                        "default": [],
                                        "description": "Array of cloud-init document parts that are created before the nodeadm document part"
                                      },
                                      "cluster_auth_base64": {
                                        "default": "",
                                        "description": "Base64 encoded CA of associated EKS cluster"
                                      },
                                      "cluster_endpoint": {
                                        "default": "",
                                        "description": "Endpoint of associated EKS cluster"
                                      },
                                      "cluster_ip_family": {
                                        "default": "ipv4",
                                        "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                                      },
                                      "cluster_name": {
                                        "default": "",
                                        "description": "Name of the EKS cluster"
                                      },
                                      "cluster_service_cidr": {
                                        "default": "",
                                        "description": "The CIDR block (IPv4 or IPv6) used by the cluster to assign Kubernetes service IP addresses. This is derived from the cluster itself"
                                      },
                                      "cluster_service_ipv4_cidr": {
                                        "default": null,
                                        "description": "[Deprecated] The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                                      },
                                      "create": {
                                        "default": true,
                                        "description": "Determines whether to create user-data or not"
                                      },
                                      "enable_bootstrap_user_data": {
                                        "default": false,
                                        "description": "Determines whether the bootstrap configurations are populated within the user data template"
                                      },
                                      "is_eks_managed_node_group": {
                                        "default": true,
                                        "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
                                      },
                                      "platform": {
                                        "default": "linux",
                                        "description": "[DEPRECATED - use `ami_type` instead. Will be removed in `v21.0`] Identifies the OS platform as `bottlerocket`, `linux` (AL2), `al2023`, or `windows`"
                                      },
                                      "post_bootstrap_user_data": {
                                        "default": "",
                                        "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                      },
                                      "pre_bootstrap_user_data": {
                                        "default": "",
                                        "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                      },
                                      "user_data_template_path": {
                                        "default": "",
                                        "description": "Path to a local, custom user data template file to use when rendering user data"
                                      }
                                    }
                                  }
                                }
                              },
                              "variables": {
                                "additional_cluster_dns_ips": {
                                  "default": [],
                                  "description": "Additional DNS IP addresses to use for the cluster. Only used when `ami_type` = `BOTTLEROCKET_*`"
                                },
                                "ami_id": {
                                  "default": "",
                                  "description": "The AMI from which to launch the instance"
                                },
                                "ami_type": {
                                  "default": "AL2_x86_64",
                                  "description": "Type of Amazon Machine Image (AMI) associated with the node group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values"
                                },
                                "autoscaling_group_tags": {
                                  "default": {},
                                  "description": "A map of additional tags to add to the autoscaling group created. Tags are applied to the autoscaling group only and are NOT propagated to instances"
                                },
                                "availability_zones": {
                                  "default": null,
                                  "description": "A list of one or more availability zones for the group. Used for EC2-Classic and default subnets when not specified with `subnet_ids` argument. Conflicts with `subnet_ids`"
                                },
                                "block_device_mappings": {
                                  "default": {},
                                  "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
                                },
                                "bootstrap_extra_args": {
                                  "default": "",
                                  "description": "Additional arguments passed to the bootstrap script. When `ami_type` = `BOTTLEROCKET_*`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                                },
                                "capacity_rebalance": {
                                  "default": null,
                                  "description": "Indicates whether capacity rebalance is enabled"
                                },
                                "capacity_reservation_specification": {
                                  "default": {},
                                  "description": "Targeting for EC2 capacity reservations"
                                },
                                "cloudinit_post_nodeadm": {
                                  "default": [],
                                  "description": "Array of cloud-init document parts that are created after the nodeadm document part"
                                },
                                "cloudinit_pre_nodeadm": {
                                  "default": [],
                                  "description": "Array of cloud-init document parts that are created before the nodeadm document part"
                                },
                                "cluster_auth_base64": {
                                  "default": "",
                                  "description": "Base64 encoded CA of associated EKS cluster"
                                },
                                "cluster_endpoint": {
                                  "default": "",
                                  "description": "Endpoint of associated EKS cluster"
                                },
                                "cluster_ip_family": {
                                  "default": "ipv4",
                                  "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                                },
                                "cluster_name": {
                                  "default": "",
                                  "description": "Name of associated EKS cluster"
                                },
                                "cluster_primary_security_group_id": {
                                  "default": null,
                                  "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
                                },
                                "cluster_service_cidr": {
                                  "default": "",
                                  "description": "The CIDR block (IPv4 or IPv6) used by the cluster to assign Kubernetes service IP addresses. This is derived from the cluster itself"
                                },
                                "cluster_version": {
                                  "default": null,
                                  "description": "Kubernetes cluster version - used to lookup default AMI ID if one is not provided"
                                },
                                "context": {
                                  "default": null,
                                  "description": "Reserved"
                                },
                                "cpu_options": {
                                  "default": {},
                                  "description": "The CPU options for the instance"
                                },
                                "create": {
                                  "default": true,
                                  "description": "Determines whether to create self managed node group or not"
                                },
                                "create_access_entry": {
                                  "default": true,
                                  "description": "Determines whether an access entry is created for the IAM role used by the node group"
                                },
                                "create_autoscaling_group": {
                                  "default": true,
                                  "description": "Determines whether to create autoscaling group or not"
                                },
                                "create_iam_instance_profile": {
                                  "default": true,
                                  "description": "Determines whether an IAM instance profile is created or to use an existing IAM instance profile"
                                },
                                "create_iam_role_policy": {
                                  "default": true,
                                  "description": "Determines whether an IAM role policy is created or not"
                                },
                                "create_launch_template": {
                                  "default": true,
                                  "description": "Determines whether to create launch template or not"
                                },
                                "create_placement_group": {
                                  "default": false,
                                  "description": "Determines whether a placement group is created & used by the node group"
                                },
                                "create_schedule": {
                                  "default": true,
                                  "description": "Determines whether to create autoscaling group schedule or not"
                                },
                                "credit_specification": {
                                  "default": {},
                                  "description": "Customize the credit specification of the instance"
                                },
                                "default_cooldown": {
                                  "default": null,
                                  "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start"
                                },
                                "default_instance_warmup": {
                                  "default": null,
                                  "description": "Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data"
                                },
                                "delete_timeout": {
                                  "default": null,
                                  "description": "Delete timeout to wait for destroying autoscaling group"
                                },
                                "desired_size": {
                                  "default": 1,
                                  "description": "The number of Amazon EC2 instances that should be running in the autoscaling group"
                                },
                                "desired_size_type": {
                                  "default": null,
                                  "description": "The unit of measurement for the value specified for `desired_size`. Supported for attribute-based instance type selection only. Valid values: `units`, `vcpu`, `memory-mib`"
                                },
                                "disable_api_termination": {
                                  "default": null,
                                  "description": "If true, enables EC2 instance termination protection"
                                },
                                "ebs_optimized": {
                                  "default": null,
                                  "description": "If true, the launched EC2 instance will be EBS-optimized"
                                },
                                "efa_indices": {
                                  "default": [
                                    0
                                  ],
                                  "description": "The indices of the network interfaces that should be EFA-enabled. Only valid when `enable_efa_support` = `true`"
                                },
                                "elastic_gpu_specifications": {
                                  "default": {},
                                  "description": "The elastic GPU to attach to the instance"
                                },
                                "elastic_inference_accelerator": {
                                  "default": {},
                                  "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
                                },
                                "enable_efa_only": {
                                  "default": false,
                                  "description": "Determines whether to enable EFA (`false`, default) or EFA and EFA-only (`true`) network interfaces. Note: requires vpc-cni version `v1.18.4` or later"
                                },
                                "enable_efa_support": {
                                  "default": false,
                                  "description": "Determines whether to enable Elastic Fabric Adapter (EFA) support"
                                },
                                "enable_monitoring": {
                                  "default": true,
                                  "description": "Enables/disables detailed monitoring"
                                },
                                "enabled_metrics": {
                                  "default": [],
                                  "description": "A list of metrics to collect. The allowed values are `GroupDesiredCapacity`, `GroupInServiceCapacity`, `GroupPendingCapacity`, `GroupMinSize`, `GroupMaxSize`, `GroupInServiceInstances`, `GroupPendingInstances`, `GroupStandbyInstances`, `GroupStandbyCapacity`, `GroupTerminatingCapacity`, `GroupTerminatingInstances`, `GroupTotalCapacity`, `GroupTotalInstances`"
                                },
                                "enclave_options": {
                                  "default": {},
                                  "description": "Enable Nitro Enclaves on launched instances"
                                },
                                "force_delete": {
                                  "default": null,
                                  "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling"
                                },
                                "force_delete_warm_pool": {
                                  "default": null,
                                  "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate"
                                },
                                "health_check_grace_period": {
                                  "default": null,
                                  "description": "Time (in seconds) after instance comes into service before checking health"
                                },
                                "health_check_type": {
                                  "default": null,
                                  "description": "`EC2` or `ELB`. Controls how health checking is done"
                                },
                                "hibernation_options": {
                                  "default": {},
                                  "description": "The hibernation options for the instance"
                                },
                                "iam_instance_profile_arn": {
                                  "default": null,
                                  "description": "Amazon Resource Name (ARN) of an existing IAM instance profile that provides permissions for the node group. Required if `create_iam_instance_profile` = `false`"
                                },
                                "iam_role_additional_policies": {
                                  "default": {},
                                  "description": "Additional policies to be added to the IAM role"
                                },
                                "iam_role_arn": {
                                  "default": null,
                                  "description": "ARN of the IAM role used by the instance profile. Required when `create_access_entry = true` and `create_iam_instance_profile = false`"
                                },
                                "iam_role_attach_cni_policy": {
                                  "default": true,
                                  "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
                                },
                                "iam_role_description": {
                                  "default": null,
                                  "description": "Description of the role"
                                },
                                "iam_role_name": {
                                  "default": null,
                                  "description": "Name to use on IAM role created"
                                },
                                "iam_role_path": {
                                  "default": null,
                                  "description": "IAM role path"
                                },
                                "iam_role_permissions_boundary": {
                                  "default": null,
                                  "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                                },
                                "iam_role_policy_statements": {
                                  "default": [],
                                  "description": "A list of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) - used for adding specific IAM permissions as needed"
                                },
                                "iam_role_tags": {
                                  "default": {},
                                  "description": "A map of additional tags to add to the IAM role created"
                                },
                                "iam_role_use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether cluster IAM role name (`iam_role_name`) is used as a prefix"
                                },
                                "ignore_failed_scaling_activities": {
                                  "default": null,
                                  "description": "Whether to ignore failed Auto Scaling scaling activities while waiting for capacity."
                                },
                                "initial_lifecycle_hooks": {
                                  "default": [],
                                  "description": "One or more Lifecycle Hooks to attach to the Auto Scaling Group before instances are launched. The syntax is exactly the same as the separate `aws_autoscaling_lifecycle_hook` resource, without the `autoscaling_group_name` attribute. Please note that this will only work when creating a new Auto Scaling Group. For all other use-cases, please use `aws_autoscaling_lifecycle_hook` resource"
                                },
                                "instance_initiated_shutdown_behavior": {
                                  "default": null,
                                  "description": "Shutdown behavior for the instance. Can be `stop` or `terminate`. (Default: `stop`)"
                                },
                                "instance_maintenance_policy": {
                                  "default": {},
                                  "description": "If this block is configured, add a instance maintenance policy to the specified Auto Scaling group"
                                },
                                "instance_market_options": {
                                  "default": {},
                                  "description": "The market (purchasing) option for the instance"
                                },
                                "instance_refresh": {
                                  "default": {
                                    "preferences": {
                                      "min_healthy_percentage": 66
                                    },
                                    "strategy": "Rolling"
                                  },
                                  "description": "If this block is configured, start an Instance Refresh when this Auto Scaling Group is updated"
                                },
                                "instance_requirements": {
                                  "default": {},
                                  "description": "The attribute requirements for the type of instance. If present then `instance_type` cannot be present"
                                },
                                "instance_type": {
                                  "default": "",
                                  "description": "The type of the instance to launch"
                                },
                                "kernel_id": {
                                  "default": null,
                                  "description": "The kernel ID"
                                },
                                "key_name": {
                                  "default": null,
                                  "description": "The key name that should be used for the instance"
                                },
                                "launch_template_default_version": {
                                  "default": null,
                                  "description": "Default Version of the launch template"
                                },
                                "launch_template_description": {
                                  "default": null,
                                  "description": "Description of the launch template"
                                },
                                "launch_template_id": {
                                  "default": "",
                                  "description": "The ID of an existing launch template to use. Required when `create_launch_template` = `false`"
                                },
                                "launch_template_name": {
                                  "default": null,
                                  "description": "Name of launch template to be created"
                                },
                                "launch_template_tags": {
                                  "default": {},
                                  "description": "A map of additional tags to add to the tag_specifications of launch template created"
                                },
                                "launch_template_use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
                                },
                                "launch_template_version": {
                                  "default": null,
                                  "description": "Launch template version. Can be version number, `$Latest`, or `$Default`"
                                },
                                "license_specifications": {
                                  "default": {},
                                  "description": "A map of license specifications to associate with"
                                },
                                "maintenance_options": {
                                  "default": {},
                                  "description": "The maintenance options for the instance"
                                },
                                "max_instance_lifetime": {
                                  "default": null,
                                  "description": "The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 604800 and 31536000 seconds"
                                },
                                "max_size": {
                                  "default": 3,
                                  "description": "The maximum size of the autoscaling group"
                                },
                                "metadata_options": {
                                  "default": {
                                    "http_endpoint": "enabled",
                                    "http_put_response_hop_limit": "2",
                                    "http_tokens": "required"
                                  },
                                  "description": "Customize the metadata options for the instance"
                                },
                                "metrics_granularity": {
                                  "default": null,
                                  "description": "The granularity to associate with the metrics to collect. The only valid value is `1Minute`"
                                },
                                "min_elb_capacity": {
                                  "default": null,
                                  "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes"
                                },
                                "min_size": {
                                  "default": 0,
                                  "description": "The minimum size of the autoscaling group"
                                },
                                "mixed_instances_policy": {
                                  "default": null,
                                  "description": "Configuration block containing settings to define launch targets for Auto Scaling groups"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the Self managed Node Group"
                                },
                                "network_interfaces": {
                                  "default": [],
                                  "description": "Customize network interfaces to be attached at instance boot time"
                                },
                                "placement": {
                                  "default": {},
                                  "description": "The placement of the instance"
                                },
                                "placement_group": {
                                  "default": null,
                                  "description": "The name of the placement group into which you'll launch your instances, if any"
                                },
                                "placement_group_az": {
                                  "default": null,
                                  "description": "Availability zone where placement group is created (ex. `eu-west-1c`)"
                                },
                                "platform": {
                                  "default": null,
                                  "description": "[DEPRECATED - must use `ami_type` instead. Will be removed in `v21.0`]"
                                },
                                "post_bootstrap_user_data": {
                                  "default": "",
                                  "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                },
                                "pre_bootstrap_user_data": {
                                  "default": "",
                                  "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `ami_type` = `BOTTLEROCKET_*`"
                                },
                                "private_dns_name_options": {
                                  "default": {},
                                  "description": "The options for the instance hostname. The default values are inherited from the subnet"
                                },
                                "protect_from_scale_in": {
                                  "default": false,
                                  "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
                                },
                                "ram_disk_id": {
                                  "default": null,
                                  "description": "The ID of the ram disk"
                                },
                                "schedules": {
                                  "default": {},
                                  "description": "Map of autoscaling group schedule to create"
                                },
                                "service_linked_role_arn": {
                                  "default": null,
                                  "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
                                },
                                "subnet_ids": {
                                  "default": null,
                                  "description": "A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with `availability_zones`"
                                },
                                "suspended_processes": {
                                  "default": [],
                                  "description": "A list of processes to suspend for the Auto Scaling Group. The allowed values are `Launch`, `Terminate`, `HealthCheck`, `ReplaceUnhealthy`, `AZRebalance`, `AlarmNotification`, `ScheduledActions`, `AddToLoadBalancer`. Note that if you suspend either the `Launch` or `Terminate` process types, it can prevent your Auto Scaling Group from functioning properly"
                                },
                                "tag_specifications": {
                                  "default": [
                                    "instance",
                                    "volume",
                                    "network-interface"
                                  ],
                                  "description": "The tags to apply to the resources during launch"
                                },
                                "tags": {
                                  "default": {},
                                  "description": "A map of tags to add to all resources"
                                },
                                "target_group_arns": {
                                  "default": [],
                                  "description": "A set of `aws_alb_target_group` ARNs, for use with Application or Network Load Balancing"
                                },
                                "termination_policies": {
                                  "default": [],
                                  "description": "A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are `OldestInstance`, `NewestInstance`, `OldestLaunchConfiguration`, `ClosestToNextInstanceHour`, `OldestLaunchTemplate`, `AllocationStrategy`, `Default`"
                                },
                                "update_launch_template_default_version": {
                                  "default": true,
                                  "description": "Whether to update Default Version each update. Conflicts with `launch_template_default_version`"
                                },
                                "use_mixed_instances_policy": {
                                  "default": false,
                                  "description": "Determines whether to use a mixed instances policy in the autoscaling group or not"
                                },
                                "use_name_prefix": {
                                  "default": true,
                                  "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
                                },
                                "user_data_template_path": {
                                  "default": "",
                                  "description": "Path to a local, custom user data template file to use when rendering user data"
                                },
                                "vpc_security_group_ids": {
                                  "default": [],
                                  "description": "A list of security group IDs to associate"
                                },
                                "wait_for_capacity_timeout": {
                                  "default": null,
                                  "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
                                },
                                "wait_for_elb_capacity": {
                                  "default": null,
                                  "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over `min_elb_capacity` behavior."
                                },
                                "warm_pool": {
                                  "default": {},
                                  "description": "If this block is configured, add a Warm Pool to the specified Auto Scaling group"
                                }
                              }
                            }
                          }
                        },
                        "variables": {
                          "access_entries": {
                            "default": {},
                            "description": "Map of access entries to add to the cluster"
                          },
                          "attach_cluster_encryption_policy": {
                            "default": true,
                            "description": "Indicates whether or not to attach an additional policy for the cluster IAM role to utilize the encryption key provided"
                          },
                          "authentication_mode": {
                            "default": "API_AND_CONFIG_MAP",
                            "description": "The authentication mode for the cluster. Valid values are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`"
                          },
                          "bootstrap_self_managed_addons": {
                            "default": null,
                            "description": "Indicates whether or not to bootstrap self-managed addons after the cluster has been created"
                          },
                          "cloudwatch_log_group_class": {
                            "default": null,
                            "description": "Specified the log class of the log group. Possible values are: `STANDARD` or `INFREQUENT_ACCESS`"
                          },
                          "cloudwatch_log_group_kms_key_id": {
                            "default": null,
                            "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
                          },
                          "cloudwatch_log_group_retention_in_days": {
                            "default": 90,
                            "description": "Number of days to retain log events. Default retention - 90 days"
                          },
                          "cloudwatch_log_group_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the cloudwatch log group created"
                          },
                          "cluster_additional_security_group_ids": {
                            "default": [],
                            "description": "List of additional, externally created security group IDs to attach to the cluster control plane"
                          },
                          "cluster_addons": {
                            "default": {},
                            "description": "Map of cluster addon configurations to enable for the cluster. Addon name can be the map keys or set with `name`"
                          },
                          "cluster_addons_timeouts": {
                            "default": {},
                            "description": "Create, update, and delete timeout configurations for the cluster addons"
                          },
                          "cluster_compute_config": {
                            "default": {},
                            "description": "Configuration block for the cluster compute configuration"
                          },
                          "cluster_enabled_log_types": {
                            "default": [
                              "audit",
                              "api",
                              "authenticator"
                            ],
                            "description": "A list of the desired control plane logs to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)"
                          },
                          "cluster_encryption_config": {
                            "default": {
                              "resources": [
                                "secrets"
                              ]
                            },
                            "description": "Configuration block with encryption configuration for the cluster. To disable secret encryption, set this value to `{}`"
                          },
                          "cluster_encryption_policy_description": {
                            "default": "Cluster encryption policy to allow cluster role to utilize CMK provided",
                            "description": "Description of the cluster encryption policy created"
                          },
                          "cluster_encryption_policy_name": {
                            "default": null,
                            "description": "Name to use on cluster encryption policy created"
                          },
                          "cluster_encryption_policy_path": {
                            "default": null,
                            "description": "Cluster encryption policy path"
                          },
                          "cluster_encryption_policy_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the cluster encryption policy created"
                          },
                          "cluster_encryption_policy_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether cluster encryption policy name (`cluster_encryption_policy_name`) is used as a prefix"
                          },
                          "cluster_endpoint_private_access": {
                            "default": true,
                            "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled"
                          },
                          "cluster_endpoint_public_access": {
                            "default": false,
                            "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled"
                          },
                          "cluster_endpoint_public_access_cidrs": {
                            "default": [
                              "0.0.0.0/0"
                            ],
                            "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint"
                          },
                          "cluster_force_update_version": {
                            "default": null,
                            "description": "Force version update by overriding upgrade-blocking readiness checks when updating a cluster"
                          },
                          "cluster_identity_providers": {
                            "default": {},
                            "description": "Map of cluster identity provider configurations to enable for the cluster. Note - this is different/separate from IRSA"
                          },
                          "cluster_ip_family": {
                            "default": "ipv4",
                            "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created"
                          },
                          "cluster_name": {
                            "default": "",
                            "description": "Name of the EKS cluster"
                          },
                          "cluster_remote_network_config": {
                            "default": {},
                            "description": "Configuration block for the cluster remote network configuration"
                          },
                          "cluster_security_group_additional_rules": {
                            "default": {},
                            "description": "List of additional security group rules to add to the cluster security group created. Set `source_node_security_group = true` inside rules to set the `node_security_group` as source"
                          },
                          "cluster_security_group_description": {
                            "default": "EKS cluster security group",
                            "description": "Description of the cluster security group created"
                          },
                          "cluster_security_group_id": {
                            "default": "",
                            "description": "Existing security group ID to be attached to the cluster"
                          },
                          "cluster_security_group_name": {
                            "default": null,
                            "description": "Name to use on cluster security group created"
                          },
                          "cluster_security_group_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the cluster security group created"
                          },
                          "cluster_security_group_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether cluster security group name (`cluster_security_group_name`) is used as a prefix"
                          },
                          "cluster_service_ipv4_cidr": {
                            "default": null,
                            "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                          },
                          "cluster_service_ipv6_cidr": {
                            "default": null,
                            "description": "The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster"
                          },
                          "cluster_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the cluster"
                          },
                          "cluster_timeouts": {
                            "default": {},
                            "description": "Create, update, and delete timeout configurations for the cluster"
                          },
                          "cluster_upgrade_policy": {
                            "default": {},
                            "description": "Configuration block for the cluster upgrade policy"
                          },
                          "cluster_version": {
                            "default": null,
                            "description": "Kubernetes `<major>.<minor>` version to use for the EKS cluster (i.e.: `1.27`)"
                          },
                          "cluster_zonal_shift_config": {
                            "default": {},
                            "description": "Configuration block for the cluster zonal shift"
                          },
                          "control_plane_subnet_ids": {
                            "default": [],
                            "description": "A list of subnet IDs where the EKS cluster control plane (ENIs) will be provisioned. Used for expanding the pool of subnets used by nodes/node groups without replacing the EKS control plane"
                          },
                          "create": {
                            "default": true,
                            "description": "Controls if resources should be created (affects nearly all resources)"
                          },
                          "create_cloudwatch_log_group": {
                            "default": true,
                            "description": "Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled"
                          },
                          "create_cluster_primary_security_group_tags": {
                            "default": true,
                            "description": "Indicates whether or not to tag the cluster's primary security group. This security group is created by the EKS service, not the module, and therefore tagging is handled after cluster creation"
                          },
                          "create_cluster_security_group": {
                            "default": true,
                            "description": "Determines if a security group is created for the cluster. Note: the EKS service creates a primary security group for the cluster by default"
                          },
                          "create_cni_ipv6_iam_policy": {
                            "default": false,
                            "description": "Determines whether to create an [`AmazonEKS_CNI_IPv6_Policy`](https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html#cni-iam-role-create-ipv6-policy)"
                          },
                          "create_iam_role": {
                            "default": true,
                            "description": "Determines whether an IAM role is created for the cluster"
                          },
                          "create_kms_key": {
                            "default": true,
                            "description": "Controls if a KMS key for cluster encryption should be created"
                          },
                          "create_node_iam_role": {
                            "default": true,
                            "description": "Determines whether an EKS Auto node IAM role is created"
                          },
                          "create_node_security_group": {
                            "default": true,
                            "description": "Determines whether to create a security group for the node groups or use the existing `node_security_group_id`"
                          },
                          "custom_oidc_thumbprints": {
                            "default": [],
                            "description": "Additional list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s)"
                          },
                          "dataplane_wait_duration": {
                            "default": "30s",
                            "description": "Duration to wait after the EKS cluster has become active before creating the dataplane components (EKS managed node group(s), self-managed node group(s), Fargate profile(s))"
                          },
                          "eks_managed_node_group_defaults": {
                            "default": {},
                            "description": "Map of EKS managed node group default configurations"
                          },
                          "eks_managed_node_groups": {
                            "default": {},
                            "description": "Map of EKS managed node group definitions to create"
                          },
                          "enable_auto_mode_custom_tags": {
                            "default": true,
                            "description": "Determines whether to enable permissions for custom tags resources created by EKS Auto Mode"
                          },
                          "enable_cluster_creator_admin_permissions": {
                            "default": false,
                            "description": "Indicates whether or not to add the cluster creator (the identity used by Terraform) as an administrator via access entry"
                          },
                          "enable_efa_support": {
                            "default": false,
                            "description": "Determines whether to enable Elastic Fabric Adapter (EFA) support"
                          },
                          "enable_irsa": {
                            "default": true,
                            "description": "Determines whether to create an OpenID Connect Provider for EKS to enable IRSA"
                          },
                          "enable_kms_key_rotation": {
                            "default": true,
                            "description": "Specifies whether key rotation is enabled"
                          },
                          "enable_security_groups_for_pods": {
                            "default": true,
                            "description": "Determines whether to add the necessary IAM permission policy for security groups for pods"
                          },
                          "fargate_profile_defaults": {
                            "default": {},
                            "description": "Map of Fargate Profile default configurations"
                          },
                          "fargate_profiles": {
                            "default": {},
                            "description": "Map of Fargate Profile definitions to create"
                          },
                          "iam_role_additional_policies": {
                            "default": {},
                            "description": "Additional policies to be added to the IAM role"
                          },
                          "iam_role_arn": {
                            "default": null,
                            "description": "Existing IAM role ARN for the cluster. Required if `create_iam_role` is set to `false`"
                          },
                          "iam_role_description": {
                            "default": null,
                            "description": "Description of the role"
                          },
                          "iam_role_name": {
                            "default": null,
                            "description": "Name to use on IAM role created"
                          },
                          "iam_role_path": {
                            "default": null,
                            "description": "The IAM role path"
                          },
                          "iam_role_permissions_boundary": {
                            "default": null,
                            "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                          },
                          "iam_role_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the IAM role created"
                          },
                          "iam_role_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
                          },
                          "include_oidc_root_ca_thumbprint": {
                            "default": true,
                            "description": "Determines whether to include the root CA thumbprint in the OpenID Connect (OIDC) identity provider's server certificate(s)"
                          },
                          "kms_key_administrators": {
                            "default": [],
                            "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators). If no value is provided, the current caller identity is used to ensure at least one key admin is available"
                          },
                          "kms_key_aliases": {
                            "default": [],
                            "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
                          },
                          "kms_key_deletion_window_in_days": {
                            "default": null,
                            "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
                          },
                          "kms_key_description": {
                            "default": null,
                            "description": "The description of the key as viewed in AWS console"
                          },
                          "kms_key_enable_default_policy": {
                            "default": true,
                            "description": "Specifies whether to enable the default key policy"
                          },
                          "kms_key_override_policy_documents": {
                            "default": [],
                            "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
                          },
                          "kms_key_owners": {
                            "default": [],
                            "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
                          },
                          "kms_key_service_users": {
                            "default": [],
                            "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
                          },
                          "kms_key_source_policy_documents": {
                            "default": [],
                            "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
                          },
                          "kms_key_users": {
                            "default": [],
                            "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
                          },
                          "node_iam_role_additional_policies": {
                            "default": {},
                            "description": "Additional policies to be added to the EKS Auto node IAM role"
                          },
                          "node_iam_role_description": {
                            "default": null,
                            "description": "Description of the EKS Auto node IAM role"
                          },
                          "node_iam_role_name": {
                            "default": null,
                            "description": "Name to use on the EKS Auto node IAM role created"
                          },
                          "node_iam_role_path": {
                            "default": null,
                            "description": "The EKS Auto node IAM role path"
                          },
                          "node_iam_role_permissions_boundary": {
                            "default": null,
                            "description": "ARN of the policy that is used to set the permissions boundary for the EKS Auto node IAM role"
                          },
                          "node_iam_role_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the EKS Auto node IAM role created"
                          },
                          "node_iam_role_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether the EKS Auto node IAM role name (`node_iam_role_name`) is used as a prefix"
                          },
                          "node_security_group_additional_rules": {
                            "default": {},
                            "description": "List of additional security group rules to add to the node security group created. Set `source_cluster_security_group = true` inside rules to set the `cluster_security_group` as source"
                          },
                          "node_security_group_description": {
                            "default": "EKS node shared security group",
                            "description": "Description of the node security group created"
                          },
                          "node_security_group_enable_recommended_rules": {
                            "default": true,
                            "description": "Determines whether to enable recommended security group rules for the node security group created. This includes node-to-node TCP ingress on ephemeral ports and allows all egress traffic"
                          },
                          "node_security_group_id": {
                            "default": "",
                            "description": "ID of an existing security group to attach to the node groups created"
                          },
                          "node_security_group_name": {
                            "default": null,
                            "description": "Name to use on node security group created"
                          },
                          "node_security_group_tags": {
                            "default": {},
                            "description": "A map of additional tags to add to the node security group created"
                          },
                          "node_security_group_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether node security group name (`node_security_group_name`) is used as a prefix"
                          },
                          "openid_connect_audiences": {
                            "default": [],
                            "description": "List of OpenID Connect audience client IDs to add to the IRSA provider"
                          },
                          "outpost_config": {
                            "default": {},
                            "description": "Configuration for the AWS Outpost to provision the cluster on"
                          },
                          "prefix_separator": {
                            "default": "-",
                            "description": "The separator to use between the prefix and the generated timestamp for resource names"
                          },
                          "putin_khuylo": {
                            "default": true,
                            "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                          },
                          "self_managed_node_group_defaults": {
                            "default": {},
                            "description": "Map of self-managed node group default configurations"
                          },
                          "self_managed_node_groups": {
                            "default": {},
                            "description": "Map of self-managed node group definitions to create"
                          },
                          "subnet_ids": {
                            "default": [],
                            "description": "A list of subnet IDs where the nodes/node groups will be provisioned. If `control_plane_subnet_ids` is not provided, the EKS cluster control plane (ENIs) will be provisioned in these subnets"
                          },
                          "tags": {
                            "default": {},
                            "description": "A map of tags to add to all resources"
                          },
                          "vpc_id": {
                            "default": null,
                            "description": "ID of the VPC where the cluster security group will be provisioned"
                          }
                        }
                      },
                      "version_constraint": "20.37.0"
                    },
                    "irsa-ebs-csi": {
                      "source": "terraform-aws-modules/iam/aws//modules/iam-assumable-role-with-oidc",
                      "expressions": {
                        "create_role": {
                          "constant_value": true
                        },
                        "oidc_fully_qualified_subjects": {
                          "constant_value": [
                            "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                          ]
                        },
                        "provider_url": {
                          "references": [
                            "module.eks.oidc_provider",
                            "module.eks"
                          ]
                        },
                        "role_name": {
                          "references": [
                            "module.eks.cluster_name",
                            "module.eks"
                          ]
                        },
                        "role_policy_arns": {
                          "references": [
                            "data.aws_iam_policy.ebs_csi_policy.arn",
                            "data.aws_iam_policy.ebs_csi_policy"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "iam_role_arn": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].arn",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "ARN of IAM role"
                          },
                          "iam_role_name": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].name",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Name of IAM role"
                          },
                          "iam_role_path": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].path",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Path of IAM role"
                          },
                          "iam_role_unique_id": {
                            "expression": {
                              "references": [
                                "aws_iam_role.this[0].unique_id",
                                "aws_iam_role.this[0]",
                                "aws_iam_role.this"
                              ]
                            },
                            "description": "Unique ID of IAM role"
                          }
                        },
                        "resources": [
                          {
                            "address": "aws_iam_role.this",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assume_role_policy": {
                                "references": [
                                  "data.aws_iam_policy_document.assume_role_with_oidc[0].json",
                                  "data.aws_iam_policy_document.assume_role_with_oidc[0]",
                                  "data.aws_iam_policy_document.assume_role_with_oidc"
                                ]
                              },
                              "description": {
                                "references": [
                                  "var.role_description"
                                ]
                              },
                              "force_detach_policies": {
                                "references": [
                                  "var.force_detach_policies"
                                ]
                              },
                              "max_session_duration": {
                                "references": [
                                  "var.max_session_duration"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.role_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.role_name_prefix"
                                ]
                              },
                              "path": {
                                "references": [
                                  "var.role_path"
                                ]
                              },
                              "permissions_boundary": {
                                "references": [
                                  "var.role_permissions_boundary_arn"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy.inline",
                            "mode": "managed",
                            "type": "aws_iam_role_policy",
                            "name": "inline",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "name_prefix": {
                                "references": [
                                  "var.role_name"
                                ]
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.inline[0].json",
                                  "data.aws_iam_policy_document.inline[0]",
                                  "data.aws_iam_policy_document.inline"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role_inline_policy"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.custom",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "custom",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "var.role_policy_arns",
                                  "count.index"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.this[0].name",
                                  "aws_iam_role.this[0]",
                                  "aws_iam_role.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_role",
                                "local.number_of_role_policy_arns"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_caller_identity.current",
                            "mode": "data",
                            "type": "aws_caller_identity",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0
                          },
                          {
                            "address": "data.aws_iam_policy_document.assume_role_with_oidc",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "assume_role_with_oidc",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_role"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.inline",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "inline",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_iam_role_inline_policy"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_partition.current",
                            "mode": "data",
                            "type": "aws_partition",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "allow_self_assume_role": {
                            "default": false,
                            "description": "Determines whether to allow the role to be [assume itself](https://aws.amazon.com/blogs/security/announcing-an-update-to-iam-role-trust-policy-behavior/)"
                          },
                          "aws_account_id": {
                            "default": "",
                            "description": "The AWS account ID where the OIDC provider lives, leave empty to use the account for the AWS provider"
                          },
                          "create_role": {
                            "default": false,
                            "description": "Whether to create a role"
                          },
                          "force_detach_policies": {
                            "default": false,
                            "description": "Whether policies should be detached from this role when destroying"
                          },
                          "inline_policy_statements": {
                            "default": [],
                            "description": "List of inline policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) to attach to IAM role as an inline policy"
                          },
                          "max_session_duration": {
                            "default": 3600,
                            "description": "Maximum CLI/API session duration in seconds between 3600 and 43200"
                          },
                          "number_of_role_policy_arns": {
                            "default": null,
                            "description": "Number of IAM policies to attach to IAM role"
                          },
                          "oidc_fully_qualified_audiences": {
                            "default": [],
                            "description": "The audience to be added to the role policy. Set to sts.amazonaws.com for cross-account assumable role. Leave empty otherwise."
                          },
                          "oidc_fully_qualified_subjects": {
                            "default": [],
                            "description": "The fully qualified OIDC subjects to be added to the role policy"
                          },
                          "oidc_subjects_with_wildcards": {
                            "default": [],
                            "description": "The OIDC subject using wildcards to be added to the role policy"
                          },
                          "provider_trust_policy_conditions": {
                            "default": [],
                            "description": "[Condition constraints](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#condition) applied to the trust policy"
                          },
                          "provider_url": {
                            "default": "",
                            "description": "URL of the OIDC Provider. Use provider_urls to specify several URLs."
                          },
                          "provider_urls": {
                            "default": [],
                            "description": "List of URLs of the OIDC Providers"
                          },
                          "role_description": {
                            "default": "",
                            "description": "IAM Role description"
                          },
                          "role_name": {
                            "default": null,
                            "description": "IAM role name"
                          },
                          "role_name_prefix": {
                            "default": null,
                            "description": "IAM role name prefix"
                          },
                          "role_path": {
                            "default": "/",
                            "description": "Path of IAM role"
                          },
                          "role_permissions_boundary_arn": {
                            "default": "",
                            "description": "Permissions boundary ARN to use for IAM role"
                          },
                          "role_policy_arns": {
                            "default": [],
                            "description": "List of ARNs of IAM policies to attach to IAM role"
                          },
                          "tags": {
                            "default": {},
                            "description": "A map of tags to add to IAM role resources"
                          }
                        }
                      },
                      "version_constraint": "5.58.0"
                    },
                    "vpc": {
                      "source": "terraform-aws-modules/vpc/aws",
                      "expressions": {
                        "azs": {
                          "references": [
                            "data.aws_availability_zones.available.names",
                            "data.aws_availability_zones.available"
                          ]
                        },
                        "cidr": {
                          "constant_value": "10.0.0.0/16"
                        },
                        "enable_dns_hostnames": {
                          "constant_value": true
                        },
                        "enable_nat_gateway": {
                          "constant_value": true
                        },
                        "name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "private_subnet_tags": {
                          "constant_value": {
                            "kubernetes.io/role/internal-elb": 1
                          }
                        },
                        "private_subnets": {
                          "constant_value": [
                            "10.0.1.0/24",
                            "10.0.2.0/24",
                            "10.0.3.0/24"
                          ]
                        },
                        "public_subnet_tags": {
                          "constant_value": {
                            "kubernetes.io/role/elb": 1
                          }
                        },
                        "public_subnets": {
                          "constant_value": [
                            "10.0.4.0/24",
                            "10.0.5.0/24",
                            "10.0.6.0/24"
                          ]
                        },
                        "single_nat_gateway": {
                          "constant_value": true
                        }
                      },
                      "module": {
                        "outputs": {
                          "azs": {
                            "expression": {
                              "references": [
                                "var.azs"
                              ]
                            },
                            "description": "A list of availability zones specified as argument to this module"
                          },
                          "cgw_arns": {
                            "expression": {
                              "references": [
                                "aws_customer_gateway.this"
                              ]
                            },
                            "description": "List of ARNs of Customer Gateway"
                          },
                          "cgw_ids": {
                            "expression": {
                              "references": [
                                "aws_customer_gateway.this"
                              ]
                            },
                            "description": "List of IDs of Customer Gateway"
                          },
                          "database_internet_gateway_route_id": {
                            "expression": {
                              "references": [
                                "aws_route.database_internet_gateway[0].id",
                                "aws_route.database_internet_gateway[0]",
                                "aws_route.database_internet_gateway"
                              ]
                            },
                            "description": "ID of the database internet gateway route"
                          },
                          "database_ipv6_egress_route_id": {
                            "expression": {
                              "references": [
                                "aws_route.database_ipv6_egress[0].id",
                                "aws_route.database_ipv6_egress[0]",
                                "aws_route.database_ipv6_egress"
                              ]
                            },
                            "description": "ID of the database IPv6 egress route"
                          },
                          "database_nat_gateway_route_ids": {
                            "expression": {
                              "references": [
                                "aws_route.database_nat_gateway"
                              ]
                            },
                            "description": "List of IDs of the database nat gateway route"
                          },
                          "database_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.database[0].arn",
                                "aws_network_acl.database[0]",
                                "aws_network_acl.database"
                              ]
                            },
                            "description": "ARN of the database network ACL"
                          },
                          "database_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.database[0].id",
                                "aws_network_acl.database[0]",
                                "aws_network_acl.database"
                              ]
                            },
                            "description": "ID of the database network ACL"
                          },
                          "database_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.database"
                              ]
                            },
                            "description": "List of IDs of the database route table association"
                          },
                          "database_route_table_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table.database",
                                "aws_route_table.database",
                                "aws_route_table.private"
                              ]
                            },
                            "description": "List of IDs of database route tables"
                          },
                          "database_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.database"
                              ]
                            },
                            "description": "List of ARNs of database subnets"
                          },
                          "database_subnet_group": {
                            "expression": {
                              "references": [
                                "aws_db_subnet_group.database[0].id",
                                "aws_db_subnet_group.database[0]",
                                "aws_db_subnet_group.database"
                              ]
                            },
                            "description": "ID of database subnet group"
                          },
                          "database_subnet_group_name": {
                            "expression": {
                              "references": [
                                "aws_db_subnet_group.database[0].name",
                                "aws_db_subnet_group.database[0]",
                                "aws_db_subnet_group.database"
                              ]
                            },
                            "description": "Name of database subnet group"
                          },
                          "database_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.database"
                              ]
                            },
                            "description": "A list of all database subnets, containing the full objects."
                          },
                          "database_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.database"
                              ]
                            },
                            "description": "List of IDs of database subnets"
                          },
                          "database_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.database"
                              ]
                            },
                            "description": "List of cidr_blocks of database subnets"
                          },
                          "database_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.database"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                          },
                          "default_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].default_network_acl_id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ID of the default network ACL"
                          },
                          "default_route_table_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].default_route_table_id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ID of the default route table"
                          },
                          "default_security_group_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].default_security_group_id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ID of the security group created by default on VPC creation"
                          },
                          "default_vpc_arn": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].arn",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The ARN of the Default VPC"
                          },
                          "default_vpc_cidr_block": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].cidr_block",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The CIDR block of the Default VPC"
                          },
                          "default_vpc_default_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].default_network_acl_id",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The ID of the default network ACL of the Default VPC"
                          },
                          "default_vpc_default_route_table_id": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].default_route_table_id",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The ID of the default route table of the Default VPC"
                          },
                          "default_vpc_default_security_group_id": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].default_security_group_id",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The ID of the security group created by default on Default VPC creation"
                          },
                          "default_vpc_enable_dns_hostnames": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].enable_dns_hostnames",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "Whether or not the Default VPC has DNS hostname support"
                          },
                          "default_vpc_enable_dns_support": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].enable_dns_support",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "Whether or not the Default VPC has DNS support"
                          },
                          "default_vpc_id": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].id",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The ID of the Default VPC"
                          },
                          "default_vpc_instance_tenancy": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].instance_tenancy",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "Tenancy of instances spin up within Default VPC"
                          },
                          "default_vpc_main_route_table_id": {
                            "expression": {
                              "references": [
                                "aws_default_vpc.this[0].main_route_table_id",
                                "aws_default_vpc.this[0]",
                                "aws_default_vpc.this"
                              ]
                            },
                            "description": "The ID of the main route table associated with the Default VPC"
                          },
                          "dhcp_options_id": {
                            "expression": {
                              "references": [
                                "aws_vpc_dhcp_options.this[0].id",
                                "aws_vpc_dhcp_options.this[0]",
                                "aws_vpc_dhcp_options.this"
                              ]
                            },
                            "description": "The ID of the DHCP options"
                          },
                          "egress_only_internet_gateway_id": {
                            "expression": {
                              "references": [
                                "aws_egress_only_internet_gateway.this[0].id",
                                "aws_egress_only_internet_gateway.this[0]",
                                "aws_egress_only_internet_gateway.this"
                              ]
                            },
                            "description": "The ID of the egress only Internet Gateway"
                          },
                          "elasticache_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.elasticache[0].arn",
                                "aws_network_acl.elasticache[0]",
                                "aws_network_acl.elasticache"
                              ]
                            },
                            "description": "ARN of the elasticache network ACL"
                          },
                          "elasticache_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.elasticache[0].id",
                                "aws_network_acl.elasticache[0]",
                                "aws_network_acl.elasticache"
                              ]
                            },
                            "description": "ID of the elasticache network ACL"
                          },
                          "elasticache_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.elasticache"
                              ]
                            },
                            "description": "List of IDs of the elasticache route table association"
                          },
                          "elasticache_route_table_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table.elasticache",
                                "local.private_route_table_ids"
                              ]
                            },
                            "description": "List of IDs of elasticache route tables"
                          },
                          "elasticache_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.elasticache"
                              ]
                            },
                            "description": "List of ARNs of elasticache subnets"
                          },
                          "elasticache_subnet_group": {
                            "expression": {
                              "references": [
                                "aws_elasticache_subnet_group.elasticache[0].id",
                                "aws_elasticache_subnet_group.elasticache[0]",
                                "aws_elasticache_subnet_group.elasticache"
                              ]
                            },
                            "description": "ID of elasticache subnet group"
                          },
                          "elasticache_subnet_group_name": {
                            "expression": {
                              "references": [
                                "aws_elasticache_subnet_group.elasticache[0].name",
                                "aws_elasticache_subnet_group.elasticache[0]",
                                "aws_elasticache_subnet_group.elasticache"
                              ]
                            },
                            "description": "Name of elasticache subnet group"
                          },
                          "elasticache_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.elasticache"
                              ]
                            },
                            "description": "A list of all elasticache subnets, containing the full objects."
                          },
                          "elasticache_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.elasticache"
                              ]
                            },
                            "description": "List of IDs of elasticache subnets"
                          },
                          "elasticache_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.elasticache"
                              ]
                            },
                            "description": "List of cidr_blocks of elasticache subnets"
                          },
                          "elasticache_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.elasticache"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                          },
                          "igw_arn": {
                            "expression": {
                              "references": [
                                "aws_internet_gateway.this[0].arn",
                                "aws_internet_gateway.this[0]",
                                "aws_internet_gateway.this"
                              ]
                            },
                            "description": "The ARN of the Internet Gateway"
                          },
                          "igw_id": {
                            "expression": {
                              "references": [
                                "aws_internet_gateway.this[0].id",
                                "aws_internet_gateway.this[0]",
                                "aws_internet_gateway.this"
                              ]
                            },
                            "description": "The ID of the Internet Gateway"
                          },
                          "intra_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.intra[0].arn",
                                "aws_network_acl.intra[0]",
                                "aws_network_acl.intra"
                              ]
                            },
                            "description": "ARN of the intra network ACL"
                          },
                          "intra_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.intra[0].id",
                                "aws_network_acl.intra[0]",
                                "aws_network_acl.intra"
                              ]
                            },
                            "description": "ID of the intra network ACL"
                          },
                          "intra_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.intra"
                              ]
                            },
                            "description": "List of IDs of the intra route table association"
                          },
                          "intra_route_table_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table.intra"
                              ]
                            },
                            "description": "List of IDs of intra route tables"
                          },
                          "intra_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.intra"
                              ]
                            },
                            "description": "List of ARNs of intra subnets"
                          },
                          "intra_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.intra"
                              ]
                            },
                            "description": "A list of all intra subnets, containing the full objects."
                          },
                          "intra_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.intra"
                              ]
                            },
                            "description": "List of IDs of intra subnets"
                          },
                          "intra_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.intra"
                              ]
                            },
                            "description": "List of cidr_blocks of intra subnets"
                          },
                          "intra_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.intra"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                          },
                          "name": {
                            "expression": {
                              "references": [
                                "var.name"
                              ]
                            },
                            "description": "The name of the VPC specified as argument to this module"
                          },
                          "nat_ids": {
                            "expression": {
                              "references": [
                                "aws_eip.nat"
                              ]
                            },
                            "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                          },
                          "nat_public_ips": {
                            "expression": {
                              "references": [
                                "var.reuse_nat_ips",
                                "var.external_nat_ips",
                                "aws_eip.nat"
                              ]
                            },
                            "description": "List of public Elastic IPs created for AWS NAT Gateway"
                          },
                          "natgw_ids": {
                            "expression": {
                              "references": [
                                "aws_nat_gateway.this"
                              ]
                            },
                            "description": "List of NAT Gateway IDs"
                          },
                          "natgw_interface_ids": {
                            "expression": {
                              "references": [
                                "aws_nat_gateway.this"
                              ]
                            },
                            "description": "List of Network Interface IDs assigned to NAT Gateways"
                          },
                          "outpost_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.outpost[0].arn",
                                "aws_network_acl.outpost[0]",
                                "aws_network_acl.outpost"
                              ]
                            },
                            "description": "ARN of the outpost network ACL"
                          },
                          "outpost_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.outpost[0].id",
                                "aws_network_acl.outpost[0]",
                                "aws_network_acl.outpost"
                              ]
                            },
                            "description": "ID of the outpost network ACL"
                          },
                          "outpost_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.outpost"
                              ]
                            },
                            "description": "List of ARNs of outpost subnets"
                          },
                          "outpost_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.outpost"
                              ]
                            },
                            "description": "A list of all outpost subnets, containing the full objects."
                          },
                          "outpost_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.outpost"
                              ]
                            },
                            "description": "List of IDs of outpost subnets"
                          },
                          "outpost_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.outpost"
                              ]
                            },
                            "description": "List of cidr_blocks of outpost subnets"
                          },
                          "outpost_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.outpost"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                          },
                          "private_ipv6_egress_route_ids": {
                            "expression": {
                              "references": [
                                "aws_route.private_ipv6_egress"
                              ]
                            },
                            "description": "List of IDs of the ipv6 egress route"
                          },
                          "private_nat_gateway_route_ids": {
                            "expression": {
                              "references": [
                                "aws_route.private_nat_gateway"
                              ]
                            },
                            "description": "List of IDs of the private nat gateway route"
                          },
                          "private_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.private[0].arn",
                                "aws_network_acl.private[0]",
                                "aws_network_acl.private"
                              ]
                            },
                            "description": "ARN of the private network ACL"
                          },
                          "private_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.private[0].id",
                                "aws_network_acl.private[0]",
                                "aws_network_acl.private"
                              ]
                            },
                            "description": "ID of the private network ACL"
                          },
                          "private_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.private"
                              ]
                            },
                            "description": "List of IDs of the private route table association"
                          },
                          "private_route_table_ids": {
                            "expression": {
                              "references": [
                                "local.private_route_table_ids"
                              ]
                            },
                            "description": "List of IDs of private route tables"
                          },
                          "private_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.private"
                              ]
                            },
                            "description": "List of ARNs of private subnets"
                          },
                          "private_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.private"
                              ]
                            },
                            "description": "A list of all private subnets, containing the full objects."
                          },
                          "private_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.private"
                              ]
                            },
                            "description": "List of IDs of private subnets"
                          },
                          "private_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.private"
                              ]
                            },
                            "description": "List of cidr_blocks of private subnets"
                          },
                          "private_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.private"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                          },
                          "public_internet_gateway_ipv6_route_id": {
                            "expression": {
                              "references": [
                                "aws_route.public_internet_gateway_ipv6[0].id",
                                "aws_route.public_internet_gateway_ipv6[0]",
                                "aws_route.public_internet_gateway_ipv6"
                              ]
                            },
                            "description": "ID of the IPv6 internet gateway route"
                          },
                          "public_internet_gateway_route_id": {
                            "expression": {
                              "references": [
                                "aws_route.public_internet_gateway[0].id",
                                "aws_route.public_internet_gateway[0]",
                                "aws_route.public_internet_gateway"
                              ]
                            },
                            "description": "ID of the internet gateway route"
                          },
                          "public_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.public[0].arn",
                                "aws_network_acl.public[0]",
                                "aws_network_acl.public"
                              ]
                            },
                            "description": "ARN of the public network ACL"
                          },
                          "public_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.public[0].id",
                                "aws_network_acl.public[0]",
                                "aws_network_acl.public"
                              ]
                            },
                            "description": "ID of the public network ACL"
                          },
                          "public_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.public"
                              ]
                            },
                            "description": "List of IDs of the public route table association"
                          },
                          "public_route_table_ids": {
                            "expression": {
                              "references": [
                                "local.public_route_table_ids"
                              ]
                            },
                            "description": "List of IDs of public route tables"
                          },
                          "public_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.public"
                              ]
                            },
                            "description": "List of ARNs of public subnets"
                          },
                          "public_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.public"
                              ]
                            },
                            "description": "A list of all public subnets, containing the full objects."
                          },
                          "public_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.public"
                              ]
                            },
                            "description": "List of IDs of public subnets"
                          },
                          "public_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.public"
                              ]
                            },
                            "description": "List of cidr_blocks of public subnets"
                          },
                          "public_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.public"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                          },
                          "redshift_network_acl_arn": {
                            "expression": {
                              "references": [
                                "aws_network_acl.redshift[0].arn",
                                "aws_network_acl.redshift[0]",
                                "aws_network_acl.redshift"
                              ]
                            },
                            "description": "ARN of the redshift network ACL"
                          },
                          "redshift_network_acl_id": {
                            "expression": {
                              "references": [
                                "aws_network_acl.redshift[0].id",
                                "aws_network_acl.redshift[0]",
                                "aws_network_acl.redshift"
                              ]
                            },
                            "description": "ID of the redshift network ACL"
                          },
                          "redshift_public_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.redshift_public"
                              ]
                            },
                            "description": "List of IDs of the public redshift route table association"
                          },
                          "redshift_route_table_association_ids": {
                            "expression": {
                              "references": [
                                "aws_route_table_association.redshift"
                              ]
                            },
                            "description": "List of IDs of the redshift route table association"
                          },
                          "redshift_route_table_ids": {
                            "expression": {
                              "references": [
                                "local.redshift_route_table_ids",
                                "local.redshift_route_table_ids",
                                "var.enable_public_redshift",
                                "local.public_route_table_ids",
                                "local.private_route_table_ids"
                              ]
                            },
                            "description": "List of IDs of redshift route tables"
                          },
                          "redshift_subnet_arns": {
                            "expression": {
                              "references": [
                                "aws_subnet.redshift"
                              ]
                            },
                            "description": "List of ARNs of redshift subnets"
                          },
                          "redshift_subnet_group": {
                            "expression": {
                              "references": [
                                "aws_redshift_subnet_group.redshift[0].id",
                                "aws_redshift_subnet_group.redshift[0]",
                                "aws_redshift_subnet_group.redshift"
                              ]
                            },
                            "description": "ID of redshift subnet group"
                          },
                          "redshift_subnet_objects": {
                            "expression": {
                              "references": [
                                "aws_subnet.redshift"
                              ]
                            },
                            "description": "A list of all redshift subnets, containing the full objects."
                          },
                          "redshift_subnets": {
                            "expression": {
                              "references": [
                                "aws_subnet.redshift"
                              ]
                            },
                            "description": "List of IDs of redshift subnets"
                          },
                          "redshift_subnets_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.redshift"
                              ]
                            },
                            "description": "List of cidr_blocks of redshift subnets"
                          },
                          "redshift_subnets_ipv6_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_subnet.redshift"
                              ]
                            },
                            "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                          },
                          "this_customer_gateway": {
                            "expression": {
                              "references": [
                                "aws_customer_gateway.this"
                              ]
                            },
                            "description": "Map of Customer Gateway attributes"
                          },
                          "vgw_arn": {
                            "expression": {
                              "references": [
                                "aws_vpn_gateway.this[0].arn",
                                "aws_vpn_gateway.this[0]",
                                "aws_vpn_gateway.this"
                              ]
                            },
                            "description": "The ARN of the VPN Gateway"
                          },
                          "vgw_id": {
                            "expression": {
                              "references": [
                                "aws_vpn_gateway.this[0].id",
                                "aws_vpn_gateway.this[0]",
                                "aws_vpn_gateway.this",
                                "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                                "aws_vpn_gateway_attachment.this[0]",
                                "aws_vpn_gateway_attachment.this"
                              ]
                            },
                            "description": "The ID of the VPN Gateway"
                          },
                          "vpc_arn": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].arn",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ARN of the VPC"
                          },
                          "vpc_block_public_access_exclusions": {
                            "expression": {
                              "references": [
                                "aws_vpc_block_public_access_exclusion.this"
                              ]
                            },
                            "description": "A map of VPC block public access exclusions"
                          },
                          "vpc_cidr_block": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].cidr_block",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The CIDR block of the VPC"
                          },
                          "vpc_enable_dns_hostnames": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].enable_dns_hostnames",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "Whether or not the VPC has DNS hostname support"
                          },
                          "vpc_enable_dns_support": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].enable_dns_support",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "Whether or not the VPC has DNS support"
                          },
                          "vpc_flow_log_cloudwatch_iam_role_arn": {
                            "expression": {
                              "references": [
                                "local.flow_log_iam_role_arn"
                              ]
                            },
                            "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                          },
                          "vpc_flow_log_deliver_cross_account_role": {
                            "expression": {
                              "references": [
                                "aws_flow_log.this[0].deliver_cross_account_role",
                                "aws_flow_log.this[0]",
                                "aws_flow_log.this"
                              ]
                            },
                            "description": "The ARN of the IAM role used when pushing logs cross account"
                          },
                          "vpc_flow_log_destination_arn": {
                            "expression": {
                              "references": [
                                "local.flow_log_destination_arn"
                              ]
                            },
                            "description": "The ARN of the destination for VPC Flow Logs"
                          },
                          "vpc_flow_log_destination_type": {
                            "expression": {
                              "references": [
                                "var.flow_log_destination_type"
                              ]
                            },
                            "description": "The type of the destination for VPC Flow Logs"
                          },
                          "vpc_flow_log_id": {
                            "expression": {
                              "references": [
                                "aws_flow_log.this[0].id",
                                "aws_flow_log.this[0]",
                                "aws_flow_log.this"
                              ]
                            },
                            "description": "The ID of the Flow Log resource"
                          },
                          "vpc_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ID of the VPC"
                          },
                          "vpc_instance_tenancy": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].instance_tenancy",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "Tenancy of instances spin up within VPC"
                          },
                          "vpc_ipv6_association_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].ipv6_association_id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The association ID for the IPv6 CIDR block"
                          },
                          "vpc_ipv6_cidr_block": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].ipv6_cidr_block",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The IPv6 CIDR block"
                          },
                          "vpc_main_route_table_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].main_route_table_id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ID of the main route table associated with this VPC"
                          },
                          "vpc_owner_id": {
                            "expression": {
                              "references": [
                                "aws_vpc.this[0].owner_id",
                                "aws_vpc.this[0]",
                                "aws_vpc.this"
                              ]
                            },
                            "description": "The ID of the AWS account that owns the VPC"
                          },
                          "vpc_secondary_cidr_blocks": {
                            "expression": {
                              "references": [
                                "aws_vpc_ipv4_cidr_block_association.this"
                              ]
                            },
                            "description": "List of secondary CIDR blocks of the VPC"
                          }
                        },
                        "resources": [
                          {
                            "address": "aws_cloudwatch_log_group.flow_log",
                            "mode": "managed",
                            "type": "aws_cloudwatch_log_group",
                            "name": "flow_log",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "kms_key_id": {
                                "references": [
                                  "var.flow_log_cloudwatch_log_group_kms_key_id"
                                ]
                              },
                              "log_group_class": {
                                "references": [
                                  "var.flow_log_cloudwatch_log_group_class"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.flow_log_cloudwatch_log_group_name_prefix",
                                  "local.flow_log_cloudwatch_log_group_name_suffix"
                                ]
                              },
                              "retention_in_days": {
                                "references": [
                                  "var.flow_log_cloudwatch_log_group_retention_in_days"
                                ]
                              },
                              "skip_destroy": {
                                "references": [
                                  "var.flow_log_cloudwatch_log_group_skip_destroy"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.vpc_flow_log_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_flow_log_cloudwatch_log_group"
                              ]
                            }
                          },
                          {
                            "address": "aws_customer_gateway.this",
                            "mode": "managed",
                            "type": "aws_customer_gateway",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "bgp_asn": {
                                "references": [
                                  "each.value[\"bgp_asn\"]",
                                  "each.value"
                                ]
                              },
                              "device_name": {
                                "references": [
                                  "each.value"
                                ]
                              },
                              "ip_address": {
                                "references": [
                                  "each.value[\"ip_address\"]",
                                  "each.value"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "each.key",
                                  "var.tags",
                                  "var.customer_gateway_tags"
                                ]
                              },
                              "type": {
                                "constant_value": "ipsec.1"
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.customer_gateways"
                              ]
                            }
                          },
                          {
                            "address": "aws_db_subnet_group.database",
                            "mode": "managed",
                            "type": "aws_db_subnet_group",
                            "name": "database",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.name"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.database_subnet_group_name",
                                  "var.name"
                                ]
                              },
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.database"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.database_subnet_group_name",
                                  "var.name",
                                  "var.tags",
                                  "var.database_subnet_group_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_subnets",
                                "var.create_database_subnet_group"
                              ]
                            }
                          },
                          {
                            "address": "aws_default_network_acl.this",
                            "mode": "managed",
                            "type": "aws_default_network_acl",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "default_network_acl_id": {
                                "references": [
                                  "aws_vpc.this[0].default_network_acl_id",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this"
                                ]
                              },
                              "subnet_ids": {
                                "constant_value": null
                              },
                              "tags": {
                                "references": [
                                  "var.default_network_acl_name",
                                  "var.name",
                                  "var.tags",
                                  "var.default_network_acl_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.manage_default_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_default_route_table.default",
                            "mode": "managed",
                            "type": "aws_default_route_table",
                            "name": "default",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "default_route_table_id": {
                                "references": [
                                  "aws_vpc.this[0].default_route_table_id",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this"
                                ]
                              },
                              "propagating_vgws": {
                                "references": [
                                  "var.default_route_table_propagating_vgws"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.default_route_table_name",
                                  "var.name",
                                  "var.tags",
                                  "var.default_route_table_tags"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                },
                                "update": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.manage_default_route_table"
                              ]
                            }
                          },
                          {
                            "address": "aws_default_security_group.this",
                            "mode": "managed",
                            "type": "aws_default_security_group",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.default_security_group_name",
                                  "var.name",
                                  "var.tags",
                                  "var.default_security_group_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "aws_vpc.this[0].id",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.manage_default_security_group"
                              ]
                            }
                          },
                          {
                            "address": "aws_default_vpc.this",
                            "mode": "managed",
                            "type": "aws_default_vpc",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "enable_dns_hostnames": {
                                "references": [
                                  "var.default_vpc_enable_dns_hostnames"
                                ]
                              },
                              "enable_dns_support": {
                                "references": [
                                  "var.default_vpc_enable_dns_support"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.default_vpc_name",
                                  "var.tags",
                                  "var.default_vpc_tags"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "var.manage_default_vpc"
                              ]
                            }
                          },
                          {
                            "address": "aws_egress_only_internet_gateway.this",
                            "mode": "managed",
                            "type": "aws_egress_only_internet_gateway",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.tags",
                                  "var.igw_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.create_egress_only_igw",
                                "var.enable_ipv6",
                                "local.max_subnet_length"
                              ]
                            }
                          },
                          {
                            "address": "aws_eip.nat",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "domain": {
                                "constant_value": "vpc"
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.azs",
                                  "var.single_nat_gateway",
                                  "count.index",
                                  "var.tags",
                                  "var.nat_eip_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_nat_gateway",
                                "var.reuse_nat_ips",
                                "local.nat_gateway_count"
                              ]
                            },
                            "depends_on": [
                              "aws_internet_gateway.this"
                            ]
                          },
                          {
                            "address": "aws_elasticache_subnet_group.elasticache",
                            "mode": "managed",
                            "type": "aws_elasticache_subnet_group",
                            "name": "elasticache",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.name"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.elasticache_subnet_group_name",
                                  "var.name"
                                ]
                              },
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.elasticache"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.elasticache_subnet_group_name",
                                  "var.name",
                                  "var.tags",
                                  "var.elasticache_subnet_group_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_subnets",
                                "var.create_elasticache_subnet_group"
                              ]
                            }
                          },
                          {
                            "address": "aws_flow_log.this",
                            "mode": "managed",
                            "type": "aws_flow_log",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "deliver_cross_account_role": {
                                "references": [
                                  "var.flow_log_deliver_cross_account_role"
                                ]
                              },
                              "iam_role_arn": {
                                "references": [
                                  "local.flow_log_iam_role_arn"
                                ]
                              },
                              "log_destination": {
                                "references": [
                                  "local.flow_log_destination_arn"
                                ]
                              },
                              "log_destination_type": {
                                "references": [
                                  "var.flow_log_destination_type"
                                ]
                              },
                              "log_format": {
                                "references": [
                                  "var.flow_log_log_format"
                                ]
                              },
                              "max_aggregation_interval": {
                                "references": [
                                  "var.flow_log_max_aggregation_interval"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.vpc_flow_log_tags"
                                ]
                              },
                              "traffic_type": {
                                "references": [
                                  "var.flow_log_traffic_type"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.enable_flow_log"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "vpc_flow_log_cloudwatch",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "name": {
                                "references": [
                                  "var.vpc_flow_log_iam_policy_use_name_prefix",
                                  "var.vpc_flow_log_iam_policy_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.vpc_flow_log_iam_policy_use_name_prefix",
                                  "var.vpc_flow_log_iam_policy_name"
                                ]
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                                  "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                                  "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.vpc_flow_log_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_flow_log_cloudwatch_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "vpc_flow_log_cloudwatch",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assume_role_policy": {
                                "references": [
                                  "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                                  "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                                  "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.vpc_flow_log_iam_role_use_name_prefix",
                                  "var.vpc_flow_log_iam_role_name"
                                ]
                              },
                              "name_prefix": {
                                "references": [
                                  "var.vpc_flow_log_iam_role_use_name_prefix",
                                  "var.vpc_flow_log_iam_role_name"
                                ]
                              },
                              "permissions_boundary": {
                                "references": [
                                  "var.vpc_flow_log_permissions_boundary"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "var.vpc_flow_log_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_flow_log_cloudwatch_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "vpc_flow_log_cloudwatch",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "policy_arn": {
                                "references": [
                                  "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                                  "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                                  "aws_iam_policy.vpc_flow_log_cloudwatch"
                                ]
                              },
                              "role": {
                                "references": [
                                  "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                                  "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                                  "aws_iam_role.vpc_flow_log_cloudwatch"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_flow_log_cloudwatch_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "aws_internet_gateway.this",
                            "mode": "managed",
                            "type": "aws_internet_gateway",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.tags",
                                  "var.igw_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.create_igw"
                              ]
                            }
                          },
                          {
                            "address": "aws_nat_gateway.this",
                            "mode": "managed",
                            "type": "aws_nat_gateway",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "allocation_id": {
                                "references": [
                                  "local.nat_gateway_ips",
                                  "var.single_nat_gateway",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.public",
                                  "var.single_nat_gateway",
                                  "count.index"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.azs",
                                  "var.single_nat_gateway",
                                  "count.index",
                                  "var.tags",
                                  "var.nat_gateway_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_nat_gateway",
                                "local.nat_gateway_count"
                              ]
                            },
                            "depends_on": [
                              "aws_internet_gateway.this"
                            ]
                          },
                          {
                            "address": "aws_network_acl.database",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "database",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.database"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.database_subnet_suffix",
                                  "var.tags",
                                  "var.database_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl.elasticache",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "elasticache",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.elasticache"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.elasticache_subnet_suffix",
                                  "var.tags",
                                  "var.elasticache_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl.intra",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "intra",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.intra"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.intra_subnet_suffix",
                                  "var.tags",
                                  "var.intra_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_intra_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl.outpost",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "outpost",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.outpost"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.outpost_subnet_suffix",
                                  "var.tags",
                                  "var.outpost_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_outpost_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl.private",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "private",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.private"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.private_subnet_suffix",
                                  "var.tags",
                                  "var.private_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_private_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl.public",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "public",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.public"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.public_subnet_suffix",
                                  "var.tags",
                                  "var.public_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.public_dedicated_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl.redshift",
                            "mode": "managed",
                            "type": "aws_network_acl",
                            "name": "redshift",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.redshift"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.redshift_subnet_suffix",
                                  "var.tags",
                                  "var.redshift_acl_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_network_acl"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.database_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "database_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.database[0].id",
                                  "aws_network_acl.database[0]",
                                  "aws_network_acl.database"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.database_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_network_acl",
                                "var.database_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.database_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "database_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.database[0].id",
                                  "aws_network_acl.database[0]",
                                  "aws_network_acl.database"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.database_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_network_acl",
                                "var.database_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.elasticache_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "elasticache_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.elasticache[0].id",
                                  "aws_network_acl.elasticache[0]",
                                  "aws_network_acl.elasticache"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.elasticache_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_network_acl",
                                "var.elasticache_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.elasticache_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "elasticache_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.elasticache[0].id",
                                  "aws_network_acl.elasticache[0]",
                                  "aws_network_acl.elasticache"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.elasticache_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_network_acl",
                                "var.elasticache_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.intra_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "intra_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.intra[0].id",
                                  "aws_network_acl.intra[0]",
                                  "aws_network_acl.intra"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.intra_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_intra_network_acl",
                                "var.intra_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.intra_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "intra_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.intra[0].id",
                                  "aws_network_acl.intra[0]",
                                  "aws_network_acl.intra"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.intra_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_intra_network_acl",
                                "var.intra_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.outpost_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "outpost_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.outpost[0].id",
                                  "aws_network_acl.outpost[0]",
                                  "aws_network_acl.outpost"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.outpost_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_outpost_network_acl",
                                "var.outpost_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.outpost_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "outpost_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.outpost[0].id",
                                  "aws_network_acl.outpost[0]",
                                  "aws_network_acl.outpost"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.outpost_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_outpost_network_acl",
                                "var.outpost_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.private_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "private_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.private[0].id",
                                  "aws_network_acl.private[0]",
                                  "aws_network_acl.private"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.private_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_private_network_acl",
                                "var.private_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.private_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "private_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.private[0].id",
                                  "aws_network_acl.private[0]",
                                  "aws_network_acl.private"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.private_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_private_network_acl",
                                "var.private_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.public_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "public_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.public[0].id",
                                  "aws_network_acl.public[0]",
                                  "aws_network_acl.public"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.public_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.public_dedicated_network_acl",
                                "var.public_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.public_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "public_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.public[0].id",
                                  "aws_network_acl.public[0]",
                                  "aws_network_acl.public"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.public_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.public_dedicated_network_acl",
                                "var.public_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.redshift_inbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "redshift_inbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": false
                              },
                              "from_port": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.redshift[0].id",
                                  "aws_network_acl.redshift[0]",
                                  "aws_network_acl.redshift"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.redshift_inbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_network_acl",
                                "var.redshift_inbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_network_acl_rule.redshift_outbound",
                            "mode": "managed",
                            "type": "aws_network_acl_rule",
                            "name": "redshift_outbound",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "egress": {
                                "constant_value": true
                              },
                              "from_port": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_code": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "icmp_type": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "network_acl_id": {
                                "references": [
                                  "aws_network_acl.redshift[0].id",
                                  "aws_network_acl.redshift[0]",
                                  "aws_network_acl.redshift"
                                ]
                              },
                              "protocol": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_action": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "rule_number": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.redshift_outbound_acl_rules",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_network_acl",
                                "var.redshift_outbound_acl_rules"
                              ]
                            }
                          },
                          {
                            "address": "aws_redshift_subnet_group.redshift",
                            "mode": "managed",
                            "type": "aws_redshift_subnet_group",
                            "name": "redshift",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "description": {
                                "references": [
                                  "var.name"
                                ]
                              },
                              "name": {
                                "references": [
                                  "var.redshift_subnet_group_name",
                                  "var.name"
                                ]
                              },
                              "subnet_ids": {
                                "references": [
                                  "aws_subnet.redshift"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.redshift_subnet_group_name",
                                  "var.name",
                                  "var.tags",
                                  "var.redshift_subnet_group_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_subnets",
                                "var.create_redshift_subnet_group"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.database_dns64_nat_gateway",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "database_dns64_nat_gateway",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_ipv6_cidr_block": {
                                "constant_value": "64:ff9b::/96"
                              },
                              "nat_gateway_id": {
                                "references": [
                                  "aws_nat_gateway.this",
                                  "count.index"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.database",
                                  "count.index"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_route_table",
                                "var.create_database_internet_gateway_route",
                                "var.create_database_nat_gateway_route",
                                "var.enable_nat_gateway",
                                "var.enable_ipv6",
                                "var.private_subnet_enable_dns64",
                                "var.single_nat_gateway",
                                "local.len_database_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.database_internet_gateway",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "database_internet_gateway",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_cidr_block": {
                                "constant_value": "0.0.0.0/0"
                              },
                              "gateway_id": {
                                "references": [
                                  "aws_internet_gateway.this[0].id",
                                  "aws_internet_gateway.this[0]",
                                  "aws_internet_gateway.this"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.database[0].id",
                                  "aws_route_table.database[0]",
                                  "aws_route_table.database"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_route_table",
                                "var.create_igw",
                                "var.create_database_internet_gateway_route",
                                "var.create_database_nat_gateway_route"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.database_ipv6_egress",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "database_ipv6_egress",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_ipv6_cidr_block": {
                                "constant_value": "::/0"
                              },
                              "egress_only_gateway_id": {
                                "references": [
                                  "aws_egress_only_internet_gateway.this[0].id",
                                  "aws_egress_only_internet_gateway.this[0]",
                                  "aws_egress_only_internet_gateway.this"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.database[0].id",
                                  "aws_route_table.database[0]",
                                  "aws_route_table.database"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_route_table",
                                "var.create_egress_only_igw",
                                "var.enable_ipv6",
                                "var.create_database_internet_gateway_route"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.database_nat_gateway",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "database_nat_gateway",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_cidr_block": {
                                "constant_value": "0.0.0.0/0"
                              },
                              "nat_gateway_id": {
                                "references": [
                                  "aws_nat_gateway.this",
                                  "count.index"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.database",
                                  "count.index"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_route_table",
                                "var.create_database_internet_gateway_route",
                                "var.create_database_nat_gateway_route",
                                "var.enable_nat_gateway",
                                "var.single_nat_gateway",
                                "local.len_database_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.private_dns64_nat_gateway",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_dns64_nat_gateway",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_ipv6_cidr_block": {
                                "constant_value": "64:ff9b::/96"
                              },
                              "nat_gateway_id": {
                                "references": [
                                  "aws_nat_gateway.this",
                                  "count.index"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.private",
                                  "count.index"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_nat_gateway",
                                "var.enable_ipv6",
                                "var.private_subnet_enable_dns64",
                                "local.nat_gateway_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.private_ipv6_egress",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_ipv6_egress",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_ipv6_cidr_block": {
                                "constant_value": "::/0"
                              },
                              "egress_only_gateway_id": {
                                "references": [
                                  "aws_egress_only_internet_gateway.this"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.private",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.create_egress_only_igw",
                                "var.enable_ipv6",
                                "local.len_private_subnets",
                                "local.nat_gateway_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.private_nat_gateway",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_nat_gateway",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_cidr_block": {
                                "references": [
                                  "var.nat_gateway_destination_cidr_block"
                                ]
                              },
                              "nat_gateway_id": {
                                "references": [
                                  "aws_nat_gateway.this",
                                  "count.index"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.private",
                                  "count.index"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_nat_gateway",
                                "var.create_private_nat_gateway_route",
                                "local.nat_gateway_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.public_internet_gateway",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "public_internet_gateway",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_cidr_block": {
                                "constant_value": "0.0.0.0/0"
                              },
                              "gateway_id": {
                                "references": [
                                  "aws_internet_gateway.this[0].id",
                                  "aws_internet_gateway.this[0]",
                                  "aws_internet_gateway.this"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.public",
                                  "count.index"
                                ]
                              },
                              "timeouts": {
                                "create": {
                                  "constant_value": "5m"
                                }
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.create_igw",
                                "local.num_public_route_tables"
                              ]
                            }
                          },
                          {
                            "address": "aws_route.public_internet_gateway_ipv6",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "public_internet_gateway_ipv6",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "destination_ipv6_cidr_block": {
                                "constant_value": "::/0"
                              },
                              "gateway_id": {
                                "references": [
                                  "aws_internet_gateway.this[0].id",
                                  "aws_internet_gateway.this[0]",
                                  "aws_internet_gateway.this"
                                ]
                              },
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.public",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.create_igw",
                                "var.enable_ipv6",
                                "local.num_public_route_tables"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table.database",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "database",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.single_nat_gateway",
                                  "var.create_database_internet_gateway_route",
                                  "var.name",
                                  "var.database_subnet_suffix",
                                  "var.name",
                                  "var.database_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.database_route_table_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_route_table",
                                "var.single_nat_gateway",
                                "var.create_database_internet_gateway_route",
                                "local.len_database_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table.elasticache",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "elasticache",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.elasticache_subnet_suffix",
                                  "var.tags",
                                  "var.elasticache_route_table_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_route_table"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table.intra",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "intra",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.create_multiple_intra_route_tables",
                                  "var.name",
                                  "var.intra_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.name",
                                  "var.intra_subnet_suffix",
                                  "var.tags",
                                  "var.intra_route_table_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_intra_subnets",
                                "local.num_intra_route_tables"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table.private",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.single_nat_gateway",
                                  "var.name",
                                  "var.private_subnet_suffix",
                                  "var.name",
                                  "var.private_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.private_route_table_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_private_subnets",
                                "local.max_subnet_length",
                                "local.nat_gateway_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table.public",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "public",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.create_multiple_public_route_tables",
                                  "var.name",
                                  "var.public_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.name",
                                  "var.public_subnet_suffix",
                                  "var.tags",
                                  "var.public_route_table_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "local.num_public_route_tables"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table.redshift",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "redshift",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.redshift_subnet_suffix",
                                  "var.tags",
                                  "var.redshift_route_table_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_route_table"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.database",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "database",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.database",
                                  "aws_route_table.private",
                                  "var.create_database_subnet_route_table",
                                  "var.single_nat_gateway",
                                  "var.create_database_internet_gateway_route",
                                  "count.index",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.database",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_database_subnets",
                                "local.len_database_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.elasticache",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "elasticache",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.elasticache",
                                  "aws_route_table.private",
                                  "var.single_nat_gateway",
                                  "var.create_elasticache_subnet_route_table",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.elasticache",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_subnets",
                                "local.len_elasticache_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.intra",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "intra",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.intra",
                                  "var.create_multiple_intra_route_tables",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.intra",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_intra_subnets",
                                "local.len_intra_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.outpost",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "outpost",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.private",
                                  "var.single_nat_gateway",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.outpost",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_outpost_subnets",
                                "local.len_outpost_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.private",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.private",
                                  "var.single_nat_gateway",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.private",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_private_subnets",
                                "local.len_private_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.public",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.public",
                                  "var.create_multiple_public_route_tables",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.public",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "local.len_public_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.redshift",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "redshift",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.redshift",
                                  "aws_route_table.private",
                                  "var.single_nat_gateway",
                                  "var.create_redshift_subnet_route_table",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.redshift",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_subnets",
                                "var.enable_public_redshift",
                                "local.len_redshift_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_route_table_association.redshift_public",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "redshift_public",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.redshift",
                                  "aws_route_table.public",
                                  "var.single_nat_gateway",
                                  "var.create_redshift_subnet_route_table",
                                  "count.index"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "aws_subnet.redshift",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_subnets",
                                "var.enable_public_redshift",
                                "local.len_redshift_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.database",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "database",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.database_subnet_ipv6_native",
                                  "var.database_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "availability_zone_id": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.database_subnet_ipv6_native",
                                  "var.database_subnets",
                                  "count.index"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.database_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.database_subnet_ipv6_native",
                                  "var.database_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.database_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.database_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.database_subnet_ipv6_native"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.database_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.database_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.database_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.database_subnet_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_database_subnets",
                                "local.len_database_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.elasticache",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "elasticache",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.elasticache_subnet_ipv6_native",
                                  "var.elasticache_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "availability_zone_id": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.elasticache_subnet_ipv6_native",
                                  "var.elasticache_subnets",
                                  "count.index"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.elasticache_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.elasticache_subnet_ipv6_native",
                                  "var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.elasticache_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.elasticache_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.elasticache_subnet_ipv6_native"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.elasticache_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.elasticache_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.elasticache_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.elasticache_subnet_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_elasticache_subnets",
                                "local.len_elasticache_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.intra",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "intra",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.intra_subnet_ipv6_native",
                                  "var.intra_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "availability_zone_id": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.intra_subnet_ipv6_native",
                                  "var.intra_subnets",
                                  "count.index"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.intra_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.intra_subnet_ipv6_native",
                                  "var.intra_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.intra_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.intra_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.intra_subnet_ipv6_native"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.intra_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.intra_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.intra_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.intra_subnet_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_intra_subnets",
                                "local.len_intra_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.outpost",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "outpost",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.outpost_subnet_ipv6_native",
                                  "var.outpost_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.outpost_az"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.outpost_subnet_ipv6_native",
                                  "var.outpost_subnets",
                                  "count.index"
                                ]
                              },
                              "customer_owned_ipv4_pool": {
                                "references": [
                                  "var.customer_owned_ipv4_pool"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.outpost_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.outpost_subnet_ipv6_native",
                                  "var.outpost_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.outpost_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.outpost_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.outpost_subnet_ipv6_native"
                                ]
                              },
                              "map_customer_owned_ip_on_launch": {
                                "references": [
                                  "var.map_customer_owned_ip_on_launch"
                                ]
                              },
                              "outpost_arn": {
                                "references": [
                                  "var.outpost_arn"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.outpost_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.outpost_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.outpost_subnet_suffix",
                                  "var.outpost_az",
                                  "var.tags",
                                  "var.outpost_subnet_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_outpost_subnets",
                                "local.len_outpost_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.private",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.private_subnet_ipv6_native",
                                  "var.private_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "availability_zone_id": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.private_subnet_ipv6_native",
                                  "var.private_subnets",
                                  "count.index"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.private_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.private_subnet_ipv6_native",
                                  "var.private_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.private_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.private_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.private_subnet_ipv6_native"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.private_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.private_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.private_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.private_subnet_tags",
                                  "var.private_subnet_tags_per_az",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_private_subnets",
                                "local.len_private_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.public",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.public_subnet_ipv6_native",
                                  "var.public_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "availability_zone_id": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.public_subnet_ipv6_native",
                                  "var.public_subnets",
                                  "count.index"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.public_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.public_subnet_ipv6_native",
                                  "var.public_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.public_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.public_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.public_subnet_ipv6_native"
                                ]
                              },
                              "map_public_ip_on_launch": {
                                "references": [
                                  "var.map_public_ip_on_launch"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.public_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.public_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.public_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.public_subnet_tags",
                                  "var.public_subnet_tags_per_az",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_public_subnets",
                                "var.one_nat_gateway_per_az",
                                "local.len_public_subnets",
                                "var.azs",
                                "local.len_public_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_subnet.redshift",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "redshift",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_ipv6_address_on_creation": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.redshift_subnet_ipv6_native",
                                  "var.redshift_subnet_assign_ipv6_address_on_creation"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "availability_zone_id": {
                                "references": [
                                  "var.azs",
                                  "count.index",
                                  "var.azs",
                                  "count.index"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.redshift_subnet_ipv6_native",
                                  "var.redshift_subnets",
                                  "count.index"
                                ]
                              },
                              "enable_dns64": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.redshift_subnet_enable_dns64"
                                ]
                              },
                              "enable_resource_name_dns_a_record_on_launch": {
                                "references": [
                                  "var.redshift_subnet_ipv6_native",
                                  "var.redshift_subnet_enable_resource_name_dns_a_record_on_launch"
                                ]
                              },
                              "enable_resource_name_dns_aaaa_record_on_launch": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.redshift_subnet_ipv6_prefixes",
                                  "aws_vpc.this[0].ipv6_cidr_block",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this",
                                  "var.redshift_subnet_ipv6_prefixes",
                                  "count.index"
                                ]
                              },
                              "ipv6_native": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.redshift_subnet_ipv6_native"
                                ]
                              },
                              "private_dns_hostname_type_on_launch": {
                                "references": [
                                  "var.redshift_subnet_private_dns_hostname_type_on_launch"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.redshift_subnet_names",
                                  "count.index",
                                  "var.name",
                                  "var.redshift_subnet_suffix",
                                  "var.azs",
                                  "count.index",
                                  "var.tags",
                                  "var.redshift_subnet_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_redshift_subnets",
                                "local.len_redshift_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpc.this",
                            "mode": "managed",
                            "type": "aws_vpc",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "assign_generated_ipv6_cidr_block": {
                                "references": [
                                  "var.enable_ipv6",
                                  "var.use_ipam_pool"
                                ]
                              },
                              "cidr_block": {
                                "references": [
                                  "var.use_ipam_pool",
                                  "var.cidr"
                                ]
                              },
                              "enable_dns_hostnames": {
                                "references": [
                                  "var.enable_dns_hostnames"
                                ]
                              },
                              "enable_dns_support": {
                                "references": [
                                  "var.enable_dns_support"
                                ]
                              },
                              "enable_network_address_usage_metrics": {
                                "references": [
                                  "var.enable_network_address_usage_metrics"
                                ]
                              },
                              "instance_tenancy": {
                                "references": [
                                  "var.instance_tenancy"
                                ]
                              },
                              "ipv4_ipam_pool_id": {
                                "references": [
                                  "var.ipv4_ipam_pool_id"
                                ]
                              },
                              "ipv4_netmask_length": {
                                "references": [
                                  "var.ipv4_netmask_length"
                                ]
                              },
                              "ipv6_cidr_block": {
                                "references": [
                                  "var.ipv6_cidr"
                                ]
                              },
                              "ipv6_cidr_block_network_border_group": {
                                "references": [
                                  "var.ipv6_cidr_block_network_border_group"
                                ]
                              },
                              "ipv6_ipam_pool_id": {
                                "references": [
                                  "var.ipv6_ipam_pool_id"
                                ]
                              },
                              "ipv6_netmask_length": {
                                "references": [
                                  "var.ipv6_netmask_length"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.tags",
                                  "var.vpc_tags"
                                ]
                              }
                            },
                            "schema_version": 1,
                            "count_expression": {
                              "references": [
                                "local.create_vpc"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpc_block_public_access_exclusion.this",
                            "mode": "managed",
                            "type": "aws_vpc_block_public_access_exclusion",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "internet_gateway_exclusion_mode": {
                                "references": [
                                  "each.value.internet_gateway_exclusion_mode",
                                  "each.value"
                                ]
                              },
                              "subnet_id": {
                                "references": [
                                  "each.value.exclude_subnet",
                                  "each.value",
                                  "aws_subnet.private",
                                  "aws_subnet.public",
                                  "aws_subnet.database",
                                  "aws_subnet.redshift",
                                  "aws_subnet.elasticache",
                                  "aws_subnet.intra",
                                  "aws_subnet.outpost",
                                  "each.value.subnet_type",
                                  "each.value",
                                  "each.value.subnet_index",
                                  "each.value"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.tags",
                                  "each.value.tags",
                                  "each.value"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "each.value.exclude_vpc",
                                  "each.value",
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "for_each_expression": {
                              "references": [
                                "var.vpc_block_public_access_exclusions",
                                "local.create_vpc"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpc_block_public_access_options.this",
                            "mode": "managed",
                            "type": "aws_vpc_block_public_access_options",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "internet_gateway_block_mode": {
                                "references": [
                                  "var.vpc_block_public_access_options[\"internet_gateway_block_mode\"]",
                                  "var.vpc_block_public_access_options"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.vpc_block_public_access_options"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpc_dhcp_options.this",
                            "mode": "managed",
                            "type": "aws_vpc_dhcp_options",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "domain_name": {
                                "references": [
                                  "var.dhcp_options_domain_name"
                                ]
                              },
                              "domain_name_servers": {
                                "references": [
                                  "var.dhcp_options_domain_name_servers"
                                ]
                              },
                              "ipv6_address_preferred_lease_time": {
                                "references": [
                                  "var.dhcp_options_ipv6_address_preferred_lease_time"
                                ]
                              },
                              "netbios_name_servers": {
                                "references": [
                                  "var.dhcp_options_netbios_name_servers"
                                ]
                              },
                              "netbios_node_type": {
                                "references": [
                                  "var.dhcp_options_netbios_node_type"
                                ]
                              },
                              "ntp_servers": {
                                "references": [
                                  "var.dhcp_options_ntp_servers"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.tags",
                                  "var.dhcp_options_tags"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_dhcp_options"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpc_dhcp_options_association.this",
                            "mode": "managed",
                            "type": "aws_vpc_dhcp_options_association",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "dhcp_options_id": {
                                "references": [
                                  "aws_vpc_dhcp_options.this[0].id",
                                  "aws_vpc_dhcp_options.this[0]",
                                  "aws_vpc_dhcp_options.this"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_dhcp_options"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpc_ipv4_cidr_block_association.this",
                            "mode": "managed",
                            "type": "aws_vpc_ipv4_cidr_block_association",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "cidr_block": {
                                "references": [
                                  "var.secondary_cidr_blocks",
                                  "count.index"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "aws_vpc.this[0].id",
                                  "aws_vpc.this[0]",
                                  "aws_vpc.this"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.secondary_cidr_blocks",
                                "var.secondary_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpn_gateway.this",
                            "mode": "managed",
                            "type": "aws_vpn_gateway",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "amazon_side_asn": {
                                "references": [
                                  "var.amazon_side_asn"
                                ]
                              },
                              "availability_zone": {
                                "references": [
                                  "var.vpn_gateway_az"
                                ]
                              },
                              "tags": {
                                "references": [
                                  "var.name",
                                  "var.tags",
                                  "var.vpn_gateway_tags"
                                ]
                              },
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.enable_vpn_gateway"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpn_gateway_attachment.this",
                            "mode": "managed",
                            "type": "aws_vpn_gateway_attachment",
                            "name": "this",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "vpc_id": {
                                "references": [
                                  "local.vpc_id"
                                ]
                              },
                              "vpn_gateway_id": {
                                "references": [
                                  "var.vpn_gateway_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.vpn_gateway_id"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpn_gateway_route_propagation.intra",
                            "mode": "managed",
                            "type": "aws_vpn_gateway_route_propagation",
                            "name": "intra",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.intra",
                                  "count.index"
                                ]
                              },
                              "vpn_gateway_id": {
                                "references": [
                                  "aws_vpn_gateway.this",
                                  "aws_vpn_gateway_attachment.this",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.propagate_intra_route_tables_vgw",
                                "var.enable_vpn_gateway",
                                "var.vpn_gateway_id",
                                "local.len_intra_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpn_gateway_route_propagation.private",
                            "mode": "managed",
                            "type": "aws_vpn_gateway_route_propagation",
                            "name": "private",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.private",
                                  "count.index"
                                ]
                              },
                              "vpn_gateway_id": {
                                "references": [
                                  "aws_vpn_gateway.this",
                                  "aws_vpn_gateway_attachment.this",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.propagate_private_route_tables_vgw",
                                "var.enable_vpn_gateway",
                                "var.vpn_gateway_id",
                                "local.len_private_subnets"
                              ]
                            }
                          },
                          {
                            "address": "aws_vpn_gateway_route_propagation.public",
                            "mode": "managed",
                            "type": "aws_vpn_gateway_route_propagation",
                            "name": "public",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "route_table_id": {
                                "references": [
                                  "aws_route_table.public",
                                  "count.index"
                                ]
                              },
                              "vpn_gateway_id": {
                                "references": [
                                  "aws_vpn_gateway.this",
                                  "aws_vpn_gateway_attachment.this",
                                  "count.index"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_vpc",
                                "var.propagate_public_route_tables_vgw",
                                "var.enable_vpn_gateway",
                                "var.vpn_gateway_id"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_caller_identity.current",
                            "mode": "data",
                            "type": "aws_caller_identity",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_vpc",
                                "var.enable_flow_log"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "flow_log_cloudwatch_assume_role",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "sts:AssumeRole"
                                    ]
                                  },
                                  "effect": {
                                    "constant_value": "Allow"
                                  },
                                  "principals": [
                                    {
                                      "identifiers": {
                                        "constant_value": [
                                          "vpc-flow-logs.amazonaws.com"
                                        ]
                                      },
                                      "type": {
                                        "constant_value": "Service"
                                      }
                                    }
                                  ],
                                  "sid": {
                                    "constant_value": "AWSVPCFlowLogsAssumeRole"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_flow_log_cloudwatch_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "vpc_flow_log_cloudwatch",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "logs:CreateLogStream",
                                      "logs:PutLogEvents",
                                      "logs:DescribeLogGroups",
                                      "logs:DescribeLogStreams"
                                    ]
                                  },
                                  "effect": {
                                    "constant_value": "Allow"
                                  },
                                  "resources": {
                                    "references": [
                                      "local.flow_log_group_arns"
                                    ]
                                  },
                                  "sid": {
                                    "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "local.create_flow_log_cloudwatch_iam_role"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_partition.current",
                            "mode": "data",
                            "type": "aws_partition",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_vpc",
                                "var.enable_flow_log"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_region.current",
                            "mode": "data",
                            "type": "aws_region",
                            "name": "current",
                            "provider_config_key": "module.gen3-commons.module.gen3-eks:aws",
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create_vpc",
                                "var.enable_flow_log"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "amazon_side_asn": {
                            "default": "64512",
                            "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN"
                          },
                          "azs": {
                            "default": [],
                            "description": "A list of availability zones names or ids in the region"
                          },
                          "cidr": {
                            "default": "10.0.0.0/16",
                            "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`"
                          },
                          "create_database_internet_gateway_route": {
                            "default": false,
                            "description": "Controls if an internet gateway route for public database access should be created"
                          },
                          "create_database_nat_gateway_route": {
                            "default": false,
                            "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                          },
                          "create_database_subnet_group": {
                            "default": true,
                            "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                          },
                          "create_database_subnet_route_table": {
                            "default": false,
                            "description": "Controls if separate route table for database should be created"
                          },
                          "create_egress_only_igw": {
                            "default": true,
                            "description": "Controls if an Egress Only Internet Gateway is created and its related routes"
                          },
                          "create_elasticache_subnet_group": {
                            "default": true,
                            "description": "Controls if elasticache subnet group should be created"
                          },
                          "create_elasticache_subnet_route_table": {
                            "default": false,
                            "description": "Controls if separate route table for elasticache should be created"
                          },
                          "create_flow_log_cloudwatch_iam_role": {
                            "default": false,
                            "description": "Whether to create IAM role for VPC Flow Logs"
                          },
                          "create_flow_log_cloudwatch_log_group": {
                            "default": false,
                            "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                          },
                          "create_igw": {
                            "default": true,
                            "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them"
                          },
                          "create_multiple_intra_route_tables": {
                            "default": false,
                            "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`"
                          },
                          "create_multiple_public_route_tables": {
                            "default": false,
                            "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`"
                          },
                          "create_private_nat_gateway_route": {
                            "default": true,
                            "description": "Controls if a nat gateway route should be created to give internet access to the private subnets"
                          },
                          "create_redshift_subnet_group": {
                            "default": true,
                            "description": "Controls if redshift subnet group should be created"
                          },
                          "create_redshift_subnet_route_table": {
                            "default": false,
                            "description": "Controls if separate route table for redshift should be created"
                          },
                          "create_vpc": {
                            "default": true,
                            "description": "Controls if VPC should be created (it affects almost all resources)"
                          },
                          "customer_gateway_tags": {
                            "default": {},
                            "description": "Additional tags for the Customer Gateway"
                          },
                          "customer_gateways": {
                            "default": {},
                            "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                          },
                          "customer_owned_ipv4_pool": {
                            "default": null,
                            "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured"
                          },
                          "database_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the database subnets network ACL"
                          },
                          "database_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                          },
                          "database_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Database subnets inbound network ACL rules"
                          },
                          "database_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Database subnets outbound network ACL rules"
                          },
                          "database_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the database route tables"
                          },
                          "database_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "database_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "database_subnet_group_name": {
                            "default": null,
                            "description": "Name of database subnet group"
                          },
                          "database_subnet_group_tags": {
                            "default": {},
                            "description": "Additional tags for the database subnet group"
                          },
                          "database_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "database_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "database_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated"
                          },
                          "database_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "database_subnet_suffix": {
                            "default": "db",
                            "description": "Suffix to append to database subnets name"
                          },
                          "database_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the database subnets"
                          },
                          "database_subnets": {
                            "default": [],
                            "description": "A list of database subnets inside the VPC"
                          },
                          "default_network_acl_egress": {
                            "default": [
                              {
                                "action": "allow",
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_no": "100",
                                "to_port": "0"
                              },
                              {
                                "action": "allow",
                                "from_port": "0",
                                "ipv6_cidr_block": "::/0",
                                "protocol": "-1",
                                "rule_no": "101",
                                "to_port": "0"
                              }
                            ],
                            "description": "List of maps of egress rules to set on the Default Network ACL"
                          },
                          "default_network_acl_ingress": {
                            "default": [
                              {
                                "action": "allow",
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_no": "100",
                                "to_port": "0"
                              },
                              {
                                "action": "allow",
                                "from_port": "0",
                                "ipv6_cidr_block": "::/0",
                                "protocol": "-1",
                                "rule_no": "101",
                                "to_port": "0"
                              }
                            ],
                            "description": "List of maps of ingress rules to set on the Default Network ACL"
                          },
                          "default_network_acl_name": {
                            "default": null,
                            "description": "Name to be used on the Default Network ACL"
                          },
                          "default_network_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the Default Network ACL"
                          },
                          "default_route_table_name": {
                            "default": null,
                            "description": "Name to be used on the default route table"
                          },
                          "default_route_table_propagating_vgws": {
                            "default": [],
                            "description": "List of virtual gateways for propagation"
                          },
                          "default_route_table_routes": {
                            "default": [],
                            "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                          },
                          "default_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the default route table"
                          },
                          "default_security_group_egress": {
                            "default": [],
                            "description": "List of maps of egress rules to set on the default security group"
                          },
                          "default_security_group_ingress": {
                            "default": [],
                            "description": "List of maps of ingress rules to set on the default security group"
                          },
                          "default_security_group_name": {
                            "default": null,
                            "description": "Name to be used on the default security group"
                          },
                          "default_security_group_tags": {
                            "default": {},
                            "description": "Additional tags for the default security group"
                          },
                          "default_vpc_enable_dns_hostnames": {
                            "default": true,
                            "description": "Should be true to enable DNS hostnames in the Default VPC"
                          },
                          "default_vpc_enable_dns_support": {
                            "default": true,
                            "description": "Should be true to enable DNS support in the Default VPC"
                          },
                          "default_vpc_name": {
                            "default": null,
                            "description": "Name to be used on the Default VPC"
                          },
                          "default_vpc_tags": {
                            "default": {},
                            "description": "Additional tags for the Default VPC"
                          },
                          "dhcp_options_domain_name": {
                            "default": "",
                            "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                          },
                          "dhcp_options_domain_name_servers": {
                            "default": [
                              "AmazonProvidedDNS"
                            ],
                            "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                          },
                          "dhcp_options_ipv6_address_preferred_lease_time": {
                            "default": null,
                            "description": "How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)"
                          },
                          "dhcp_options_netbios_name_servers": {
                            "default": [],
                            "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                          },
                          "dhcp_options_netbios_node_type": {
                            "default": "",
                            "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                          },
                          "dhcp_options_ntp_servers": {
                            "default": [],
                            "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                          },
                          "dhcp_options_tags": {
                            "default": {},
                            "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                          },
                          "elasticache_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the elasticache subnets network ACL"
                          },
                          "elasticache_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                          },
                          "elasticache_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Elasticache subnets inbound network ACL rules"
                          },
                          "elasticache_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Elasticache subnets outbound network ACL rules"
                          },
                          "elasticache_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the elasticache route tables"
                          },
                          "elasticache_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "elasticache_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "elasticache_subnet_group_name": {
                            "default": null,
                            "description": "Name of elasticache subnet group"
                          },
                          "elasticache_subnet_group_tags": {
                            "default": {},
                            "description": "Additional tags for the elasticache subnet group"
                          },
                          "elasticache_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "elasticache_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "elasticache_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated"
                          },
                          "elasticache_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "elasticache_subnet_suffix": {
                            "default": "elasticache",
                            "description": "Suffix to append to elasticache subnets name"
                          },
                          "elasticache_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the elasticache subnets"
                          },
                          "elasticache_subnets": {
                            "default": [],
                            "description": "A list of elasticache subnets inside the VPC"
                          },
                          "enable_dhcp_options": {
                            "default": false,
                            "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                          },
                          "enable_dns_hostnames": {
                            "default": true,
                            "description": "Should be true to enable DNS hostnames in the VPC"
                          },
                          "enable_dns_support": {
                            "default": true,
                            "description": "Should be true to enable DNS support in the VPC"
                          },
                          "enable_flow_log": {
                            "default": false,
                            "description": "Whether or not to enable VPC Flow Logs"
                          },
                          "enable_ipv6": {
                            "default": false,
                            "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block"
                          },
                          "enable_nat_gateway": {
                            "default": false,
                            "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                          },
                          "enable_network_address_usage_metrics": {
                            "default": null,
                            "description": "Determines whether network address usage metrics are enabled for the VPC"
                          },
                          "enable_public_redshift": {
                            "default": false,
                            "description": "Controls if redshift should have public routing table"
                          },
                          "enable_vpn_gateway": {
                            "default": false,
                            "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                          },
                          "external_nat_ip_ids": {
                            "default": [],
                            "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                          },
                          "external_nat_ips": {
                            "default": [],
                            "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                          },
                          "flow_log_cloudwatch_iam_role_arn": {
                            "default": "",
                            "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided"
                          },
                          "flow_log_cloudwatch_iam_role_conditions": {
                            "default": [],
                            "description": "Additional conditions of the CloudWatch role assumption policy"
                          },
                          "flow_log_cloudwatch_log_group_class": {
                            "default": null,
                            "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS"
                          },
                          "flow_log_cloudwatch_log_group_kms_key_id": {
                            "default": null,
                            "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs"
                          },
                          "flow_log_cloudwatch_log_group_name_prefix": {
                            "default": "/aws/vpc-flow-log/",
                            "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs"
                          },
                          "flow_log_cloudwatch_log_group_name_suffix": {
                            "default": "",
                            "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs"
                          },
                          "flow_log_cloudwatch_log_group_retention_in_days": {
                            "default": null,
                            "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs"
                          },
                          "flow_log_cloudwatch_log_group_skip_destroy": {
                            "default": false,
                            "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state"
                          },
                          "flow_log_deliver_cross_account_role": {
                            "default": null,
                            "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
                          },
                          "flow_log_destination_arn": {
                            "default": "",
                            "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided"
                          },
                          "flow_log_destination_type": {
                            "default": "cloud-watch-logs",
                            "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs"
                          },
                          "flow_log_file_format": {
                            "default": null,
                            "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`"
                          },
                          "flow_log_hive_compatible_partitions": {
                            "default": false,
                            "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3"
                          },
                          "flow_log_log_format": {
                            "default": null,
                            "description": "The fields to include in the flow log record, in the order in which they should appear"
                          },
                          "flow_log_max_aggregation_interval": {
                            "default": 600,
                            "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds"
                          },
                          "flow_log_per_hour_partition": {
                            "default": false,
                            "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries"
                          },
                          "flow_log_traffic_type": {
                            "default": "ALL",
                            "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL"
                          },
                          "igw_tags": {
                            "default": {},
                            "description": "Additional tags for the internet gateway"
                          },
                          "instance_tenancy": {
                            "default": "default",
                            "description": "A tenancy option for instances launched into the VPC"
                          },
                          "intra_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the intra subnets network ACL"
                          },
                          "intra_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                          },
                          "intra_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Intra subnets inbound network ACLs"
                          },
                          "intra_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Intra subnets outbound network ACLs"
                          },
                          "intra_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the intra route tables"
                          },
                          "intra_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "intra_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "intra_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "intra_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "intra_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated"
                          },
                          "intra_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "intra_subnet_suffix": {
                            "default": "intra",
                            "description": "Suffix to append to intra subnets name"
                          },
                          "intra_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the intra subnets"
                          },
                          "intra_subnets": {
                            "default": [],
                            "description": "A list of intra subnets inside the VPC"
                          },
                          "ipv4_ipam_pool_id": {
                            "default": null,
                            "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR"
                          },
                          "ipv4_netmask_length": {
                            "default": null,
                            "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id"
                          },
                          "ipv6_cidr": {
                            "default": null,
                            "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`"
                          },
                          "ipv6_cidr_block_network_border_group": {
                            "default": null,
                            "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones"
                          },
                          "ipv6_ipam_pool_id": {
                            "default": null,
                            "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`"
                          },
                          "ipv6_netmask_length": {
                            "default": null,
                            "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`"
                          },
                          "manage_default_network_acl": {
                            "default": true,
                            "description": "Should be true to adopt and manage Default Network ACL"
                          },
                          "manage_default_route_table": {
                            "default": true,
                            "description": "Should be true to manage default route table"
                          },
                          "manage_default_security_group": {
                            "default": true,
                            "description": "Should be true to adopt and manage default security group"
                          },
                          "manage_default_vpc": {
                            "default": false,
                            "description": "Should be true to adopt and manage Default VPC"
                          },
                          "map_customer_owned_ip_on_launch": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`"
                          },
                          "map_public_ip_on_launch": {
                            "default": false,
                            "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`"
                          },
                          "name": {
                            "default": "",
                            "description": "Name to be used on all the resources as identifier"
                          },
                          "nat_eip_tags": {
                            "default": {},
                            "description": "Additional tags for the NAT EIP"
                          },
                          "nat_gateway_destination_cidr_block": {
                            "default": "0.0.0.0/0",
                            "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route"
                          },
                          "nat_gateway_tags": {
                            "default": {},
                            "description": "Additional tags for the NAT gateways"
                          },
                          "one_nat_gateway_per_az": {
                            "default": false,
                            "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`"
                          },
                          "outpost_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the outpost subnets network ACL"
                          },
                          "outpost_arn": {
                            "default": null,
                            "description": "ARN of Outpost you want to create a subnet in"
                          },
                          "outpost_az": {
                            "default": null,
                            "description": "AZ where Outpost is anchored"
                          },
                          "outpost_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                          },
                          "outpost_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Outpost subnets inbound network ACLs"
                          },
                          "outpost_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Outpost subnets outbound network ACLs"
                          },
                          "outpost_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "outpost_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "outpost_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "outpost_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "outpost_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated"
                          },
                          "outpost_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "outpost_subnet_suffix": {
                            "default": "outpost",
                            "description": "Suffix to append to outpost subnets name"
                          },
                          "outpost_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the outpost subnets"
                          },
                          "outpost_subnets": {
                            "default": [],
                            "description": "A list of outpost subnets inside the VPC"
                          },
                          "private_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the private subnets network ACL"
                          },
                          "private_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                          },
                          "private_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Private subnets inbound network ACLs"
                          },
                          "private_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Private subnets outbound network ACLs"
                          },
                          "private_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the private route tables"
                          },
                          "private_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "private_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "private_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "private_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "private_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated"
                          },
                          "private_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "private_subnet_suffix": {
                            "default": "private",
                            "description": "Suffix to append to private subnets name"
                          },
                          "private_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the private subnets"
                          },
                          "private_subnet_tags_per_az": {
                            "default": {},
                            "description": "Additional tags for the private subnets where the primary key is the AZ"
                          },
                          "private_subnets": {
                            "default": [],
                            "description": "A list of private subnets inside the VPC"
                          },
                          "propagate_intra_route_tables_vgw": {
                            "default": false,
                            "description": "Should be true if you want route table propagation"
                          },
                          "propagate_private_route_tables_vgw": {
                            "default": false,
                            "description": "Should be true if you want route table propagation"
                          },
                          "propagate_public_route_tables_vgw": {
                            "default": false,
                            "description": "Should be true if you want route table propagation"
                          },
                          "public_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the public subnets network ACL"
                          },
                          "public_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                          },
                          "public_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Public subnets inbound network ACLs"
                          },
                          "public_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Public subnets outbound network ACLs"
                          },
                          "public_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the public route tables"
                          },
                          "public_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "public_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "public_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "public_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "public_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated"
                          },
                          "public_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "public_subnet_suffix": {
                            "default": "public",
                            "description": "Suffix to append to public subnets name"
                          },
                          "public_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the public subnets"
                          },
                          "public_subnet_tags_per_az": {
                            "default": {},
                            "description": "Additional tags for the public subnets where the primary key is the AZ"
                          },
                          "public_subnets": {
                            "default": [],
                            "description": "A list of public subnets inside the VPC"
                          },
                          "putin_khuylo": {
                            "default": true,
                            "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                          },
                          "redshift_acl_tags": {
                            "default": {},
                            "description": "Additional tags for the redshift subnets network ACL"
                          },
                          "redshift_dedicated_network_acl": {
                            "default": false,
                            "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                          },
                          "redshift_inbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Redshift subnets inbound network ACL rules"
                          },
                          "redshift_outbound_acl_rules": {
                            "default": [
                              {
                                "cidr_block": "0.0.0.0/0",
                                "from_port": "0",
                                "protocol": "-1",
                                "rule_action": "allow",
                                "rule_number": "100",
                                "to_port": "0"
                              }
                            ],
                            "description": "Redshift subnets outbound network ACL rules"
                          },
                          "redshift_route_table_tags": {
                            "default": {},
                            "description": "Additional tags for the redshift route tables"
                          },
                          "redshift_subnet_assign_ipv6_address_on_creation": {
                            "default": false,
                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                          },
                          "redshift_subnet_enable_dns64": {
                            "default": true,
                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                          },
                          "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                            "default": false,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                          },
                          "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                            "default": true,
                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                          },
                          "redshift_subnet_group_name": {
                            "default": null,
                            "description": "Name of redshift subnet group"
                          },
                          "redshift_subnet_group_tags": {
                            "default": {},
                            "description": "Additional tags for the redshift subnet group"
                          },
                          "redshift_subnet_ipv6_native": {
                            "default": false,
                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                          },
                          "redshift_subnet_ipv6_prefixes": {
                            "default": [],
                            "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                          },
                          "redshift_subnet_names": {
                            "default": [],
                            "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated"
                          },
                          "redshift_subnet_private_dns_hostname_type_on_launch": {
                            "default": null,
                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                          },
                          "redshift_subnet_suffix": {
                            "default": "redshift",
                            "description": "Suffix to append to redshift subnets name"
                          },
                          "redshift_subnet_tags": {
                            "default": {},
                            "description": "Additional tags for the redshift subnets"
                          },
                          "redshift_subnets": {
                            "default": [],
                            "description": "A list of redshift subnets inside the VPC"
                          },
                          "reuse_nat_ips": {
                            "default": false,
                            "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                          },
                          "secondary_cidr_blocks": {
                            "default": [],
                            "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                          },
                          "single_nat_gateway": {
                            "default": false,
                            "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                          },
                          "tags": {
                            "default": {},
                            "description": "A map of tags to add to all resources"
                          },
                          "use_ipam_pool": {
                            "default": false,
                            "description": "Determines whether IPAM pool is used for CIDR allocation"
                          },
                          "vpc_block_public_access_exclusions": {
                            "default": {},
                            "description": "A map of VPC block public access exclusions"
                          },
                          "vpc_block_public_access_options": {
                            "default": {},
                            "description": "A map of VPC block public access options"
                          },
                          "vpc_flow_log_iam_policy_name": {
                            "default": "vpc-flow-log-to-cloudwatch",
                            "description": "Name of the IAM policy"
                          },
                          "vpc_flow_log_iam_policy_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix"
                          },
                          "vpc_flow_log_iam_role_name": {
                            "default": "vpc-flow-log-role",
                            "description": "Name to use on the VPC Flow Log IAM role created"
                          },
                          "vpc_flow_log_iam_role_use_name_prefix": {
                            "default": true,
                            "description": "Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix"
                          },
                          "vpc_flow_log_permissions_boundary": {
                            "default": null,
                            "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                          },
                          "vpc_flow_log_tags": {
                            "default": {},
                            "description": "Additional tags for the VPC Flow Logs"
                          },
                          "vpc_tags": {
                            "default": {},
                            "description": "Additional tags for the VPC"
                          },
                          "vpn_gateway_az": {
                            "default": null,
                            "description": "The Availability Zone for the VPN Gateway"
                          },
                          "vpn_gateway_id": {
                            "default": "",
                            "description": "ID of VPN Gateway to attach to the VPC"
                          },
                          "vpn_gateway_tags": {
                            "default": {},
                            "description": "Additional tags for the VPN gateway"
                          }
                        }
                      },
                      "version_constraint": "5.21.0"
                    }
                  },
                  "variables": {
                    "ack_service_map": {
                      "default": {
                        "s3": "1.1.3"
                      },
                      "description": "Map of ACK service names to their versions"
                    },
                    "cluster_name": {
                      "default": "gen3-eks-cluster",
                      "description": "Name of the EKS cluster"
                    },
                    "cluster_random_suffix": {
                      "default": "",
                      "description": "Random suffix to append to the cluster name"
                    },
                    "region": {
                      "default": "us-east-2",
                      "description": "AWS region"
                    }
                  }
                }
              }
            },
            "variables": {
              "AWS_ACCOUNT_ID": {
                "default": "123456789012",
                "description": "AWS account ID"
              },
              "ack_service_map": {
                "default": {
                  "s3": "1.1.3"
                },
                "description": "Map of ACK service names to their versions"
              },
              "cluster_name": {
                "default": "gen3-eks-cluster",
                "description": "Name of the EKS cluster"
              },
              "cluster_random_suffix": {
                "default": "",
                "description": "Random suffix to append to the cluster name"
              },
              "region": {
                "default": "us-east-1",
                "description": "AWS region"
              }
            }
          }
        }
      },
      "variables": {
        "ack_service_map": {
          "default": {
            "DynamoDB": "1.1.3",
            "S3": "1.0.33"
          },
          "description": "Map of ACK service names to their versions"
        },
        "aws_profile": {
          "default": "default",
          "description": "AWS profile to use for authentication"
        },
        "cluster_name": {
          "default": "gen3-eks-cluster",
          "description": "Name of the EKS cluster"
        },
        "cluster_random_suffix": {
          "default": "",
          "description": "Random suffix to append to the cluster name"
        },
        "region": {
          "default": "us-east-1",
          "description": "AWS region"
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.aws_iam_role.this[0]",
      "attribute": [
        "path"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.redshift",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_autoscaling_schedule.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "image_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "default_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
      "attribute": [
        "triggers",
        "cluster_name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "taint"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "status"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "vpc_config",
        0,
        "cluster_security_group_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group[0]",
      "attribute": [
        "rendered"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_grant.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this[0]",
      "attribute": [
        "key_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.elasticache",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]",
      "attribute": [
        "pod_execution_role_arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_eks_access_entry.this[0]",
      "attribute": [
        "access_entry_arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.helm_release.ack_service_controller",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami[0]",
      "attribute": [
        "value"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group[0]",
      "attribute": [
        "ids"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "health_check_grace_period"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_egress_only_internet_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_block_public_access_exclusion.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami[0]",
      "attribute": [
        "value"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.private_ipv6_egress",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.database",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this[0]",
      "attribute": [
        "key_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.elasticache",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.intra",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.redshift_public",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_policy_association.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "enable_dns_hostnames"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role.this[0]",
      "attribute": [
        "path"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.public",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this[0]",
      "attribute": [
        "policy"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_external_key.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
      "attribute": [
        "path"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "attribute": [
        "default_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "labels"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_addon.before_compute",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
      "attribute": [
        "vpc_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_external_key.this[0]",
      "attribute": [
        "policy"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.data.aws_subnets.placement_group[0]",
      "attribute": [
        "ids"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "identity",
        0,
        "oidc",
        0,
        "issuer"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service.aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "certificate_authority",
        0,
        "data"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "kubernetes_network_config",
        0,
        "ip_family"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_eip.nat",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "vpc_zone_identifier"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "attribute": [
        "latest_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.database_nat_gateway",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "latest_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.private",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "labels"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.database",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.public",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"S3\"].data.aws_iam_policy_document.assume_role_with_oidc[0]",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].data.aws_iam_policy_document.assume_role_with_oidc[0]",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "status"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "resources",
        0,
        "autoscaling_groups",
        0,
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "taint"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]",
      "attribute": [
        "rendered"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
      "attribute": [
        "triggers",
        "cluster_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.intra",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this[0]",
      "attribute": [
        "policy"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_access_entry.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.public",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "enable_dns_support"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "resources",
        0,
        "autoscaling_groups",
        0,
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "availability_zones"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "desired_capacity"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_alias.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "kubernetes_network_config",
        0,
        "service_ipv4_cidr"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.data.aws_iam_policy_document.this[0]",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "kubernetes_network_config",
        0,
        "service_ipv6_cidr"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_partition.current[0]",
      "attribute": [
        "partition"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_addon.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "instance_tenancy"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]",
      "attribute": [
        "status"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_eks_addon_version.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this[0]",
      "attribute": [
        "key_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_cloudwatch_log_group.flow_log[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data.data.cloudinit_config.al2023_eks_managed_node_group[0]",
      "attribute": [
        "rendered"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_internet_gateway.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_customer_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "resources"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.data.tls_certificate.this[0]",
      "attribute": [
        "certificates",
        0,
        "sha1_fingerprint"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
      "attribute": [
        "triggers",
        "cluster_certificate_authority_data"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].data.aws_ssm_parameter.ami[0]",
      "attribute": [
        "value"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_launch_template.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.intra",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_network_acl_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "platform_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.cluster[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.database",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "latest_version"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table.elasticache",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.outpost",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.redshift",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_route_table_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]",
      "attribute": [
        "status"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_iam_role.this[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "default_cooldown"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-ack-controllers.module.irsa_ack_service[\"s3\"].aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]",
      "attribute": [
        "rendered"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.redshift",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "ipv6_association_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "endpoint"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_key.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "ipv6_cidr_block"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_launch_template.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.data.aws_iam_session_context.current[0]",
      "attribute": [
        "issuer_arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "max_size"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "health_check_type"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "owner_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_iam_role.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "min_size"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].aws_eks_node_group.this[0]",
      "attribute": [
        "resources"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.random_string.suffix",
      "attribute": [
        "result"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.kms.aws_kms_replica_key.this[0]",
      "attribute": [
        "policy"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
      "attribute": [
        "triggers",
        "cluster_service_cidr"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_subnet.private",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_cloudwatch_log_group.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "kubernetes_network_config",
        0
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "cidr_block"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.time_sleep.this[0]",
      "attribute": [
        "triggers",
        "cluster_endpoint"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_cluster.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_nat_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].data.aws_subnets.placement_group[0]",
      "attribute": [
        "ids"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.irsa-ebs-csi.aws_iam_role.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.data.aws_availability_zones.available",
      "attribute": [
        "names"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.private_nat_gateway",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_eks_identity_provider_config.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route.public_internet_gateway[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.aws_security_group.node[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_security_group_id"
      ]
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_route_table_association.private",
      "attribute": []
    },
    {
      "resource": "module.gen3-commons.module.gen3-eks.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "main_route_table_id"
      ]
    }
  ],
  "checks": [
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data",
        "name": "validate_cluster_service_cidr",
        "to_display": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
        "type": "null_resource"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data",
            "to_display": "module.gen3-commons.module.gen3-eks.module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data",
        "name": "validate_cluster_service_cidr",
        "to_display": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
        "type": "null_resource"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group",
        "name": "platform",
        "to_display": "module.gen3-commons.module.gen3-eks.module.eks.module.self_managed_node_group.var.platform"
      },
      "status": "pass"
    }
  ],
  "timestamp": "2025-06-16T20:41:04Z",
  "applyable": true,
  "complete": true,
  "errored": false
}
